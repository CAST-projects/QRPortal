[
    {
        "id": 584,
        "name": "Avoid Classes with at least one virtual Function and without a virtual Destructor",
        "href": "AIP/quality-rules/584",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 620,
        "name": "Avoid base Classes without virtual Destructors",
        "href": "AIP/quality-rules/620",
        "critical": false,
        "weight": 8,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 628,
        "name": "Avoid invocation of virtual Methods of the declared Class in a Constructor or Destructor",
        "href": "AIP/quality-rules/628",
        "critical": true,
        "weight": 8,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 4578,
        "name": "Collection interfaces should be used as method return types instead of their implementation classes",
        "href": "AIP/quality-rules/4578",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4580,
        "name": "Collection declarations should use interfaces instead of implementation classes",
        "href": "AIP/quality-rules/4580",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4592,
        "name": "Avoid hiding static Methods",
        "href": "AIP/quality-rules/4592",
        "critical": true,
        "weight": 7,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4616,
        "name": "'super.finalize()' should be invoked when overriding finalize() method",
        "href": "AIP/quality-rules/4616",
        "critical": true,
        "weight": 9,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4712,
        "name": "Avoid inheritance down the Package path",
        "href": "AIP/quality-rules/4712",
        "critical": false,
        "weight": 9,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7440,
        "name": "Avoid having suspicious similar method names or signatures in an inheritance tree",
        "href": "AIP/quality-rules/7440",
        "critical": true,
        "weight": 9,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7930,
        "name": "Avoid redeclaring and overriding Methods with different default parameter values",
        "href": "AIP/quality-rules/7930",
        "critical": false,
        "weight": 2,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7934,
        "name": "Avoid Superclass (or Interface) knowing Subclass (or Interface)",
        "href": "AIP/quality-rules/7934",
        "critical": false,
        "weight": 9,
        "technologyNames": [
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7938,
        "name": "Override all overloads of a base Class virtual Method",
        "href": "AIP/quality-rules/7938",
        "critical": false,
        "weight": 2,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8022,
        "name": "Avoid hiding attributes",
        "href": "AIP/quality-rules/8022",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "C++",
            "JEE"
        ]
    },
    {
        "id": 8050,
        "name": "Do not hide declarations in other scopes",
        "href": "AIP/quality-rules/8050",
        "critical": false,
        "weight": 7,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8058,
        "name": "A pointer to a derived Class shall only be cast implicitly to a pointer to base Class",
        "href": "AIP/quality-rules/8058",
        "critical": false,
        "weight": 9,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8060,
        "name": "A pointer to a base Class shall only be cast to a pointer to a derived Class by means of 'dynamic_cast'",
        "href": "AIP/quality-rules/8060",
        "critical": false,
        "weight": 9,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8078,
        "name": "Casting from pointer to base Class to pointer to derived Class should be done through 'dynamic_cast' or 'static_cast'",
        "href": "AIP/quality-rules/8078",
        "critical": false,
        "weight": 9,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8086,
        "name": "Avoid types that own disposable fields and are not disposable",
        "href": "AIP/quality-rules/8086",
        "critical": false,
        "weight": 7,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1020064,
        "name": "Avoid Superclass knowing Subclass (Javascript)",
        "href": "AIP/quality-rules/1020064",
        "critical": false,
        "weight": 9,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020812,
        "name": "Avoid invoking super more than once in constructor",
        "href": "AIP/quality-rules/1020812",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020824,
        "name": "Avoid Superclass knowing Subclass (Typescript)",
        "href": "AIP/quality-rules/1020824",
        "critical": false,
        "weight": 9,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1027042,
        "name": "Avoid having unmatched contracts for exported interfaces",
        "href": "AIP/quality-rules/1027042",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027064,
        "name": "Always override 'Equals' and Comparison operators with IComparable implementation",
        "href": "AIP/quality-rules/1027064",
        "critical": false,
        "weight": 3,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1065078,
        "name": "A base class shall be declared virtual only if it is used in a diamond hierarchy",
        "href": "AIP/quality-rules/1065078",
        "critical": false,
        "weight": 3,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065084,
        "name": "Avoid performing conversion from a function pointer to any other type (C/C++)",
        "href": "AIP/quality-rules/1065084",
        "critical": false,
        "weight": 4,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065096,
        "name": "Avoid dynamic_cast to convert current object to its derived class from its constructor or destructor",
        "href": "AIP/quality-rules/1065096",
        "critical": false,
        "weight": 2,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065132,
        "name": "Avoid using typeid in polymorphic class from the body of its constructor or destructor.",
        "href": "AIP/quality-rules/1065132",
        "critical": false,
        "weight": 2,
        "technologyNames": [
            "C++"
        ]
    }
]
