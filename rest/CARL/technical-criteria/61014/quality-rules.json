[
    {
        "id": 678,
        "name": "Never throw an exception from a Destructor",
        "href": "AIP/quality-rules/678",
        "critical": true,
        "weight": 9,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 2232,
        "name": "Pages should use error handling page",
        "href": "AIP/quality-rules/2232",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4600,
        "name": "Avoid using 'java.System.exit()'",
        "href": "AIP/quality-rules/4600",
        "critical": false,
        "weight": 2,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4604,
        "name": "Avoid using 'java.lang.Error'",
        "href": "AIP/quality-rules/4604",
        "critical": false,
        "weight": 2,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4652,
        "name": "Avoid direct Class inheritance from java.lang.Throwable",
        "href": "AIP/quality-rules/4652",
        "critical": false,
        "weight": 8,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4656,
        "name": "Avoid declaring throwing an exception and not throwing it",
        "href": "AIP/quality-rules/4656",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4696,
        "name": "Avoid using 'System.err' and 'System.out' within a try catch block",
        "href": "AIP/quality-rules/4696",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4698,
        "name": "Avoid using 'System.err' and 'System.out' outside a try catch block",
        "href": "AIP/quality-rules/4698",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4702,
        "name": "Avoid using 'Throwable.printStackTrace()' outside a try catch block",
        "href": "AIP/quality-rules/4702",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7640,
        "name": "Avoid catch blocks with assertion",
        "href": "AIP/quality-rules/7640",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7652,
        "name": "Avoid throwing an exception in a catch block without chaining it",
        "href": "AIP/quality-rules/7652",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7782,
        "name": "Avoid empty finally blocks",
        "href": "AIP/quality-rules/7782",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "C#",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7788,
        "name": "Avoid empty catch blocks",
        "href": "AIP/quality-rules/7788",
        "critical": true,
        "weight": 7,
        "technologyNames": [
            "C#",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7824,
        "name": "Avoid directly throwing instance of Exception class",
        "href": "AIP/quality-rules/7824",
        "critical": true,
        "weight": 8,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7862,
        "name": "Avoid catching an exception of type Exception, RuntimeException, or Throwable",
        "href": "AIP/quality-rules/7862",
        "critical": false,
        "weight": 8,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7910,
        "name": "Never exit a finally block with a return, break, continue, or throw",
        "href": "AIP/quality-rules/7910",
        "critical": true,
        "weight": 8,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8000,
        "name": "Avoid 'catch-all' statement",
        "href": "AIP/quality-rules/8000",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8028,
        "name": "Avoid missing default in switch statements",
        "href": "AIP/quality-rules/8028",
        "critical": false,
        "weight": 8,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8112,
        "name": "Avoid improper processing of the execution status of data handling operations",
        "href": "AIP/quality-rules/8112",
        "critical": true,
        "weight": 9,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 1020068,
        "name": "Avoid return statement in finally block (Javascript)",
        "href": "AIP/quality-rules/1020068",
        "critical": true,
        "weight": 8,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020102,
        "name": "Always use JSON.parse & JSON.stringify with try/catch block (Javascript)",
        "href": "AIP/quality-rules/1020102",
        "critical": false,
        "weight": 7,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020340,
        "name": "Always implement the success/error/complete or done/fail/always callbacks when using jQuery ajax call",
        "href": "AIP/quality-rules/1020340",
        "critical": true,
        "weight": 7,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020342,
        "name": "Avoid empty jQuery ajax error/fail blocks",
        "href": "AIP/quality-rules/1020342",
        "critical": true,
        "weight": 7,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020540,
        "name": "Avoid using $http success and error function",
        "href": "AIP/quality-rules/1020540",
        "critical": false,
        "weight": 8,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1024038,
        "name": "Avoid processing Google Sign In Client without catching error",
        "href": "AIP/quality-rules/1024038",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1027016,
        "name": "Avoid throwing exceptions in destructors",
        "href": "AIP/quality-rules/1027016",
        "critical": true,
        "weight": 9,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027018,
        "name": "Avoid throwing exceptions from finally block",
        "href": "AIP/quality-rules/1027018",
        "critical": false,
        "weight": 7,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027034,
        "name": "Never catch NullReferenceException",
        "href": "AIP/quality-rules/1027034",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027036,
        "name": "Avoid rethrowing exception explicitly",
        "href": "AIP/quality-rules/1027036",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027050,
        "name": "Avoid throwing ArgumentException from yielding method.",
        "href": "AIP/quality-rules/1027050",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027052,
        "name": "DEPRECATED: Avoid NULL Pointer Dereference (C#, VB.NET)",
        "href": "AIP/quality-rules/1027052",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027066,
        "name": "Avoid throwing exception from property getters",
        "href": "AIP/quality-rules/1027066",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027068,
        "name": "Avoid returning null from ToString()",
        "href": "AIP/quality-rules/1027068",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027088,
        "name": "Avoid non-public custom exception types",
        "href": "AIP/quality-rules/1027088",
        "critical": false,
        "weight": 8,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027096,
        "name": "Avoid raising exceptions in unexpected location",
        "href": "AIP/quality-rules/1027096",
        "critical": false,
        "weight": 5,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1043076,
        "name": "Avoid disabling custom errors mode to prevent exposure of exceptions and error data",
        "href": "AIP/quality-rules/1043076",
        "critical": false,
        "weight": 6,
        "technologyNames": [
            "ASP.NET",
            "C#"
        ]
    },
    {
        "id": 1065026,
        "name": "Ensure exception objects are always caught by reference (C++)",
        "href": "AIP/quality-rules/1065026",
        "critical": false,
        "weight": 3,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065056,
        "name": "Avoid throwing exceptions outside of main()",
        "href": "AIP/quality-rules/1065056",
        "critical": false,
        "weight": 1,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065058,
        "name": "Ensure that there is at least one exception handler to catch-all otherwise unhandled exceptions in the main function(C++)",
        "href": "AIP/quality-rules/1065058",
        "critical": false,
        "weight": 1,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065082,
        "name": "Handlers of a function-try-block implementation of a class constructor ordestructor shall not reference non-static members from this class or its bases.",
        "href": "AIP/quality-rules/1065082",
        "critical": false,
        "weight": 2,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065098,
        "name": "Avoid delete operators to exit with an exception.",
        "href": "AIP/quality-rules/1065098",
        "critical": false,
        "weight": 3,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065100,
        "name": "Avoid move constructor and move assignment operator to exit with an exception",
        "href": "AIP/quality-rules/1065100",
        "critical": false,
        "weight": 3,
        "technologyNames": [
            "C++"
        ]
    }
]
