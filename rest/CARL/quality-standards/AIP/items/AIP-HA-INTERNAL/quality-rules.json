[
    {
        "id": 592,
        "name": "Ensure you provide a user-defined copy constructor or disable copy when a class allocates memory in its constructor",
        "href": "AIP/quality-rules/592",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 4612,
        "name": "Ensure you don't use JNI for security reason",
        "href": "AIP/quality-rules/4612",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7152,
        "name": "Ensure to store global information in HttpSession, or use stateful session beans that are specifically targeted for this purpose",
        "href": "AIP/quality-rules/7152",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7154,
        "name": "Ensure to use local variables inside your methods, and pass whatever data you need to other methods in the class via parameters",
        "href": "AIP/quality-rules/7154",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7202,
        "name": "Ensure using object equals method instead of equality syntax to compare objects",
        "href": "AIP/quality-rules/7202",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7340,
        "name": "Avoid Classes with Destructor not explicitly virtual whenever one of its base Class has a virtual Destructor",
        "href": "AIP/quality-rules/7340",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7342,
        "name": "Avoid functions overriding virtual functions without having the 'virtual' keyword",
        "href": "AIP/quality-rules/7342",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7434,
        "name": "Ensure to overrides equals() and hashCode()",
        "href": "AIP/quality-rules/7434",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7438,
        "name": "Ensure to declare the field that hold the unique instance as static final and initialize it in the declaration or synchronize the method that initialize the field",
        "href": "AIP/quality-rules/7438",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7442,
        "name": "Prefer not using this within Constructor in multi-thread environment to avoid unpredictable behavior",
        "href": "AIP/quality-rules/7442",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7446,
        "name": "Prefer not using Double checked locking for JSE 4.x and previous version",
        "href": "AIP/quality-rules/7446",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7494,
        "name": "Ensure to use  getter method to access fields  of persistent class method's equals() and hashCode().",
        "href": "AIP/quality-rules/7494",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7504,
        "name": "Ensure that persistent classes implement hashCode() and equals()",
        "href": "AIP/quality-rules/7504",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7506,
        "name": "Ensure that equals() and hashCode() are defined for component as they do not have an identifier property",
        "href": "AIP/quality-rules/7506",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7508,
        "name": "Ensure you provide interfaces for Hibernate/JPA collection-typed attributes.",
        "href": "AIP/quality-rules/7508",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7636,
        "name": "Ensure to use version attribute instead of timestamp for Hibernate Entity",
        "href": "AIP/quality-rules/7636",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7708,
        "name": "Ensure that session.setFlushMode(FlushMode.COMMIT, FlushMode.NEVER or FlushMode.MANUAL)  is not used",
        "href": "AIP/quality-rules/7708",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7710,
        "name": "Ensure implementing the Serializable interface for all Entity beans",
        "href": "AIP/quality-rules/7710",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7712,
        "name": "Usually declare the setId() method private and let Hibernate/JPA generate and set the identifier value",
        "href": "AIP/quality-rules/7712",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7722,
        "name": "Ensure not referencing the persistent class's identifier in equals() method.",
        "href": "AIP/quality-rules/7722",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7724,
        "name": "Ensure that overriden equals() Methods in persistent Subclasses only reference properties from the persistent base Class",
        "href": "AIP/quality-rules/7724",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7728,
        "name": "Ensure that no thread creation is done for application running on application server to avoid any performance and robustness issues.",
        "href": "AIP/quality-rules/7728",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7730,
        "name": "Prefer using declarative transaction to improve clarity and flexibility of the code",
        "href": "AIP/quality-rules/7730",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7766,
        "name": "Ensure you keep simple the design of the component/module to reduce number of independent paths",
        "href": "AIP/quality-rules/7766",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "JEE",
            "JavaScript",
            "SQL",
            "VB.NET"
        ]
    },
    {
        "id": 7770,
        "name": "Avoid Artifacts with too many parameters",
        "href": "AIP/quality-rules/7770",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7804,
        "name": "Avoid Classes with High Weighted Methods per Class",
        "href": "AIP/quality-rules/7804",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7942,
        "name": "Ensure not having EJBs using 'synchronized' qualifier or calling 'wait', 'notify' and 'notifyAll' Methods as this might corrupt the normal behavior",
        "href": "AIP/quality-rules/7942",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7964,
        "name": "Ensure that directly instantiating a Class used as a managed bean  are not used as they lead to unpredictable behavior",
        "href": "AIP/quality-rules/7964",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7968,
        "name": "Never use strcat() function (C/C++)",
        "href": "AIP/quality-rules/7968",
        "critical": false,
        "severity": 30,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7970,
        "name": "Never use strcpy() function (C/C++)",
        "href": "AIP/quality-rules/7970",
        "critical": false,
        "severity": 30,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7972,
        "name": "Never use sprintf() or vsprintf() functions",
        "href": "AIP/quality-rules/7972",
        "critical": false,
        "severity": 30,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7976,
        "name": "Never use gets() function",
        "href": "AIP/quality-rules/7976",
        "critical": false,
        "severity": 30,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8002,
        "name": "Never perform C-style cast between incompatible Class pointers",
        "href": "AIP/quality-rules/8002",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8004,
        "name": "Avoid using 'delete this'",
        "href": "AIP/quality-rules/8004",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8006,
        "name": "Avoid Classes with a copy Constructor and the default Destructor or assignment operator",
        "href": "AIP/quality-rules/8006",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8016,
        "name": "Ensure that unsecured EJB remote method are not used as they lead to security weakness",
        "href": "AIP/quality-rules/8016",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8026,
        "name": "Avoid Classes with an assignment operator and the default Destructor or copy constructor",
        "href": "AIP/quality-rules/8026",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8052,
        "name": "Avoid setting a pointer to the address of a local variable defined in a lower scope",
        "href": "AIP/quality-rules/8052",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8054,
        "name": "Avoid calling blocking functions with an infinite timeout",
        "href": "AIP/quality-rules/8054",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8056,
        "name": "Method override fails due to mismatch of const/volatile qualifiers",
        "href": "AIP/quality-rules/8056",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8064,
        "name": "Assignment operator should assign all non-static members of the target object",
        "href": "AIP/quality-rules/8064",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8072,
        "name": "Never define collection of 'std::auto_ptr'",
        "href": "AIP/quality-rules/8072",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8086,
        "name": "Avoid types that own disposable fields and are not disposable",
        "href": "AIP/quality-rules/8086",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8088,
        "name": "Avoid override artifacts not having link demands identical to base",
        "href": "AIP/quality-rules/8088",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8090,
        "name": "Avoid using NaN to test the result of an expression",
        "href": "AIP/quality-rules/8090",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8092,
        "name": "Avoid Objects having exposed pointers allowed to access unmanaged memory",
        "href": "AIP/quality-rules/8092",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8094,
        "name": "Avoid locking of Objects with weak identities",
        "href": "AIP/quality-rules/8094",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8096,
        "name": "Ensure that testing floating point numbers for equality is not used as is source of imprecision",
        "href": "AIP/quality-rules/8096",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8136,
        "name": "Ensure to have CDI Beans with normal scope proxyable",
        "href": "AIP/quality-rules/8136",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8148,
        "name": "Avoid artifacts having Incorrect Type Conversion or Cast",
        "href": "AIP/quality-rules/8148",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8150,
        "name": "Avoid using Parse for primitive types and used instead TryParse",
        "href": "AIP/quality-rules/8150",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8152,
        "name": "Avoid having transaction with the Thread.Sleep method in a loop",
        "href": "AIP/quality-rules/8152",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8156,
        "name": "Persistent classes should implement GetHashCode() and Equals()",
        "href": "AIP/quality-rules/8156",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8158,
        "name": "Avoid thread creation for application running on application server",
        "href": "AIP/quality-rules/8158",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8216,
        "name": "Ensure not using incorrect numeric type conversions to avoid data corruption",
        "href": "AIP/quality-rules/8216",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8218,
        "name": "Always check the content type when receiving a HTTP post",
        "href": "AIP/quality-rules/8218",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8220,
        "name": "Prefer not using deprecated methods, constructors, fields, type or packages",
        "href": "AIP/quality-rules/8220",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1020062,
        "name": "Make sure that you have only one instance created in class constructor and it has been frozen to avoid any changes.",
        "href": "AIP/quality-rules/1020062",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020066,
        "name": "Ensure to not use Javascript Function constructor calling a string represented source code to prevent impaired performance",
        "href": "AIP/quality-rules/1020066",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020076,
        "name": "Aggregate method parameters into an object to improve readability and maintainability of your code",
        "href": "AIP/quality-rules/1020076",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020728,
        "name": "Always enable HttpOnly when creating cookies to avoid Cross-site scripting attacks",
        "href": "AIP/quality-rules/1020728",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020730,
        "name": "Ensure you have closed  Node.js filesystem after using open or openSync.",
        "href": "AIP/quality-rules/1020730",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020892,
        "name": "Ensure you have closed  Node.js filesystem after using open or openSync.",
        "href": "AIP/quality-rules/1020892",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1027058,
        "name": "Ensure not using blocking async methods (.NET)",
        "href": "AIP/quality-rules/1027058",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027064,
        "name": "Always override 'Equals' and Comparison operators with IComparable implementation",
        "href": "AIP/quality-rules/1027064",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027080,
        "name": "Always use ConfigureAwait(false) in library code awaited tasks",
        "href": "AIP/quality-rules/1027080",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1065062,
        "name": "Ensure that testing floating point numbers for equality is not used as is source of imprecision",
        "href": "AIP/quality-rules/1065062",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1101022,
        "name": "Make sure to define Primary Key (PK) for your tables to enforce row integrity of data",
        "href": "AIP/quality-rules/1101022",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    }
]
