{
    "id": "STIG-V-222609",
    "name": "The application must not be subject to input handling vulnerabilities.",
    "href": "CARL/quality-standards/STIG-V5/items/STIG-V-222609",
    "url": "https://www.stigviewer.com/stig/application_security_and_development/2024-06-05/finding/V-222609",
    "description": "A common application vulnerability is unpredictable behavior due to improper input validation. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state.\n\nData received from the user should always be suspected as being malicious and always validated prior to using it as input to the application.\n\nSome examples of input methods:\n\n- Forms Data\n- URL parameters\n- Hidden Fields\n- Cookies\n- HTTP Headers or anything in the HTTP request\n- Client data entry fields\n\nItems to validate:\n\n- Out of range values/Boundary \n- Data length \n- Validate types of characters allowed\n- Whitelist validation for known good data input while denying all other input.\n\nOther recommendations include: \n\n- Using drop down menus for lists\n- Validating input on the server, not on the client.\n\nIf validating on the client, also validate on the server:\n\n- Using regular expressions to validate input\n- Using HTML filter libraries that implement input validation tasks.",
    "isoPatterns": null,
    "count": 4,
    "qualityRules": {
        "name": "Quality Rules in numeric ID order",
        "href": "CARL/quality-standards/STIG-V5/items/STIG-V-222609/quality-rules"
    }
}
