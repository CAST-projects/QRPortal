[
    {
        "id": 61003,
        "name": "Programming Practices - OO Inheritance and Polymorphism",
        "description": "Respect of object-oriented inheritance practices and proper usage of polymorphism",
        "href": "CARL/technical-criteria/61003",
        "weight": 1
    },
    {
        "id": 61009,
        "name": "Complexity - Algorithmic and Control Structure Complexity",
        "description": "Respect of complexity practices regarding algorithmic complexity control",
        "href": "CARL/technical-criteria/61009",
        "weight": 1
    },
    {
        "id": 61010,
        "name": "Complexity - OO Inheritance and Polymorphism",
        "description": "Respect of complexity practices regarding object-oriented complexity control",
        "href": "CARL/technical-criteria/61010",
        "weight": 1
    },
    {
        "id": 61011,
        "name": "Complexity - SQL Queries",
        "description": "Respect of evolutive coding practices of SQL queries",
        "href": "CARL/technical-criteria/61011",
        "weight": 1
    },
    {
        "id": 61014,
        "name": "Programming Practices - Error and Exception Handling",
        "description": "Respect of error handling practices",
        "href": "CARL/technical-criteria/61014",
        "weight": 1
    },
    {
        "id": 61015,
        "name": "Programming Practices - File Organization Conformity",
        "description": "Respect of file organization practices",
        "href": "CARL/technical-criteria/61015",
        "weight": 1
    },
    {
        "id": 61018,
        "name": "Efficiency - Memory, Network and Disk Space Management",
        "description": "Respect of memory and disk space optimization practices",
        "href": "CARL/technical-criteria/61018",
        "weight": 1
    },
    {
        "id": 61019,
        "name": "Efficiency - SQL and Data Handling Performance",
        "description": "Respect of SQL and Data handling performance optimization practices",
        "href": "CARL/technical-criteria/61019",
        "weight": 1
    },
    {
        "id": 61020,
        "name": "Programming Practices - Modularity and OO Encapsulation Conformity",
        "description": "Respect of object-oriented encapsulation practices",
        "href": "CARL/technical-criteria/61020",
        "weight": 1
    },
    {
        "id": 61022,
        "name": "Volume - Number of Components",
        "description": "Respect of sizing practices regarding the number of included or contained objects",
        "href": "CARL/technical-criteria/61022",
        "weight": 1
    },
    {
        "id": 61023,
        "name": "Volume - Number of LOC",
        "description": "Respect of sizing practices regarding the number of code lines",
        "href": "CARL/technical-criteria/61023",
        "weight": 1
    },
    {
        "id": 61024,
        "name": "Programming Practices - Structuredness",
        "description": "Respect of structuredness practices",
        "href": "CARL/technical-criteria/61024",
        "weight": 1
    },
    {
        "id": 61027,
        "name": "Dead code (static)",
        "description": "Respect of code coverage practices",
        "href": "CARL/technical-criteria/61027",
        "weight": 1
    },
    {
        "id": 61029,
        "name": "Complexity - Dynamic Instantiation",
        "description": "Respect of practices regarding dynamic instantiation",
        "href": "CARL/technical-criteria/61029",
        "weight": 1
    },
    {
        "id": 66062,
        "name": "Secure Coding - Input Validation",
        "description": "Input validation security breaches result from trusting user input and lack of strong checks/cleanup of the user input.",
        "href": "CARL/technical-criteria/66062",
        "weight": 1
    },
    {
        "id": 66063,
        "name": "Secure Coding - API Abuse",
        "description": "API Abuse security breaches result from misused calls to a programming interface or to a flawed, compromised API.\n\nAn API implements a contract between a caller and a callee. The most common forms of API abuse are caused by the caller failing to honor its end of this contract.",
        "href": "CARL/technical-criteria/66063",
        "weight": 1
    },
    {
        "id": 66065,
        "name": "Secure Coding - Time and State",
        "description": "Time and State security breaches result from multithreading misuse and coding practices that ignore the fact that software components are shared and executed within concurrent thread and processes.",
        "href": "CARL/technical-criteria/66065",
        "weight": 1
    },
    {
        "id": 66066,
        "name": "Secure Coding - Encapsulation",
        "description": "Encapsulation security breaches appear whenever the principle of  information hiding are violated and that malicious user can gain access to data which should be kept private.",
        "href": "CARL/technical-criteria/66066",
        "weight": 1
    },
    {
        "id": 66068,
        "name": "Efficiency - Expensive Calls in Loops",
        "description": "Respect of performance optimization best practices regarding bulky and time expensive loops",
        "href": "CARL/technical-criteria/66068",
        "weight": 1
    }
]
