[
    {
        "id": 1072,
        "name": "Avoid using memory management Functions (free/malloc/realloc)",
        "href": "AIP/quality-rules/1072",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1074,
        "name": "Avoid using signals management Functions",
        "href": "AIP/quality-rules/1074",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 2230,
        "name": "DEPRECATED: Use of style sheets (JEE)",
        "href": "AIP/quality-rules/2230",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 2242,
        "name": "Ensure to have separate behavior from presentation and not to have direct definition of JavaScript Functions in a Web page",
        "href": "AIP/quality-rules/2242",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 2278,
        "name": "Ensure that the use of \"forEach\" is well controlled",
        "href": "AIP/quality-rules/2278",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 2280,
        "name": "Ensure to use an alternative to Document.all collection",
        "href": "AIP/quality-rules/2280",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 3610,
        "name": "Avoid declaring VB Variables without typing them (.NET)",
        "href": "AIP/quality-rules/3610",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "VB.NET"
        ]
    },
    {
        "id": 3612,
        "name": "Ensure you have released your SQL connection after an effective lifetime",
        "href": "AIP/quality-rules/3612",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3614,
        "name": "Avoid using String.Empty for empty string tests",
        "href": "AIP/quality-rules/3614",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 4618,
        "name": "Ensure that the boolean are not instantiated",
        "href": "AIP/quality-rules/4618",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4694,
        "name": "Ensure  let the system decide when it needs to collect the heap, and whether or not to do a full collection",
        "href": "AIP/quality-rules/4694",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4704,
        "name": "Prefer using List and Map implementations instead of using Vector.",
        "href": "AIP/quality-rules/4704",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4706,
        "name": "Prefer using HashMap instead of HashTable",
        "href": "AIP/quality-rules/4706",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4708,
        "name": "Ensure to use class invocation or method call instead of dynamic instantiation known to be slower",
        "href": "AIP/quality-rules/4708",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4744,
        "name": "Ensure that EJB Entities are accessed through their local  Interface instead of their remote interface.",
        "href": "AIP/quality-rules/4744",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4746,
        "name": "Ensure that EJB Session are accessed through their local remote Interface instead of their remote Interface",
        "href": "AIP/quality-rules/4746",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7130,
        "name": "Avoid Artifacts with High Depth of Nested Subqueries",
        "href": "AIP/quality-rules/7130",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7196,
        "name": "Ensure to use StringBuilder or StringBuffer and StringBuilder.append() or StringBuffer.append() method instead",
        "href": "AIP/quality-rules/7196",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7198,
        "name": "Avoid String concatenation in loops (.NET)",
        "href": "AIP/quality-rules/7198",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7200,
        "name": "Ensure to create a StringBuilder or StringBuffer before entering the loop",
        "href": "AIP/quality-rules/7200",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7204,
        "name": "Avoid method invocation in a loop termination expression",
        "href": "AIP/quality-rules/7204",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7206,
        "name": "Ensure to have polymorphism over 'is' operator and downcasting",
        "href": "AIP/quality-rules/7206",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7210,
        "name": "Ensure to not do object initialization inside a loop since it reduces performance",
        "href": "AIP/quality-rules/7210",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7212,
        "name": "Ensure you don't instantiate objects in loops",
        "href": "AIP/quality-rules/7212",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7250,
        "name": "Ensure to initialize the String with the literal.",
        "href": "AIP/quality-rules/7250",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7252,
        "name": "Ensure to add a try finally bloc",
        "href": "AIP/quality-rules/7252",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7254,
        "name": "Ensure to make static all methods not using instance members",
        "href": "AIP/quality-rules/7254",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7256,
        "name": "Enforce noninstantiability with a private constructor",
        "href": "AIP/quality-rules/7256",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7258,
        "name": "DataReader must be called using CommandBehavior.CloseConnection enumeration",
        "href": "AIP/quality-rules/7258",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7266,
        "name": "Call 'base.Dispose()' or 'MyBase.Finalize()' in the \"finally\" block of 'Dispose(bool)' methods",
        "href": "AIP/quality-rules/7266",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7268,
        "name": "Dispose() methods should call GC.SuppressFinalize",
        "href": "AIP/quality-rules/7268",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7270,
        "name": "Methods that do not use instance fields\\methods should be static (.NET)",
        "href": "AIP/quality-rules/7270",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7272,
        "name": "Ensure adding a private default constructor then the class can't be instantiated.",
        "href": "AIP/quality-rules/7272",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7344,
        "name": "Avoid \"SELECT *\" queries",
        "href": "AIP/quality-rules/7344",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7346,
        "name": "Avoid redundant indexes",
        "href": "AIP/quality-rules/7346",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7348,
        "name": "Avoid too many Indexes on one Table",
        "href": "AIP/quality-rules/7348",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7352,
        "name": "Avoid calling properties that clone values in loops",
        "href": "AIP/quality-rules/7352",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7358,
        "name": "Avoid call to AcceptChanges in a loop",
        "href": "AIP/quality-rules/7358",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7378,
        "name": "Ensure to create a link (html tag) instead of an include in a JSP file",
        "href": "AIP/quality-rules/7378",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7418,
        "name": "Avoid SQL queries using functions on indexed columns in the WHERE clause",
        "href": "AIP/quality-rules/7418",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7424,
        "name": "Avoid using SQL queries inside a loop",
        "href": "AIP/quality-rules/7424",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7428,
        "name": "Avoid SQL queries not using the first column of a composite index in the WHERE clause",
        "href": "AIP/quality-rules/7428",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7436,
        "name": "Prefer UNION ALL to UNION",
        "href": "AIP/quality-rules/7436",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7444,
        "name": "Ensure to implement serialization if your web container implements such mechanisms or ignore it in others cases",
        "href": "AIP/quality-rules/7444",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7466,
        "name": "Avoid changing DataSource member before ValueMember/DisplayMember",
        "href": "AIP/quality-rules/7466",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7468,
        "name": "Disable constraints before merging DataSet",
        "href": "AIP/quality-rules/7468",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7470,
        "name": "DEPRECATED: Avoid doing select on Datatable in loop",
        "href": "AIP/quality-rules/7470",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7474,
        "name": "Avoid Repainting When Updating a ListBox",
        "href": "AIP/quality-rules/7474",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7488,
        "name": "Ensure to use a lazy fetching strategy when the table contains lot of rows",
        "href": "AIP/quality-rules/7488",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7490,
        "name": "Ensure to use the attribute select-before-update for the persistent class associated to a table that have the UPDATE trigger in order to not have UPDATE trigger when not necessary",
        "href": "AIP/quality-rules/7490",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7496,
        "name": "Ensure to use table-per-subclass strategy when subclasses have many properties",
        "href": "AIP/quality-rules/7496",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7498,
        "name": "Ensure to have the same collection between the getter and the setter",
        "href": "AIP/quality-rules/7498",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7500,
        "name": "Choose table-per-class-hierarchy when the maximum added attributes of subclasses does not exceed three",
        "href": "AIP/quality-rules/7500",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7502,
        "name": "Ensure to use lists, maps, bags, idbags and sets depending on your case to map a collection instead of using array to Map Collection",
        "href": "AIP/quality-rules/7502",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7562,
        "name": "Ensure that static Field of type collection are not used",
        "href": "AIP/quality-rules/7562",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7634,
        "name": "Ensure setting 'select-before-update' to true only for Hibernate Entity associated to table that fires an UPDATE trigger.",
        "href": "AIP/quality-rules/7634",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7638,
        "name": "Prefer using container's resource management facilities to obtain connections to resources instead of using DriverManager class allowing direct connection to the database",
        "href": "AIP/quality-rules/7638",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7642,
        "name": "Avoid SQL queries on XXL tables not using the first column of a composite index in the WHERE clause",
        "href": "AIP/quality-rules/7642",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7648,
        "name": "Ensure not explicitly invoking the finalize() method.",
        "href": "AIP/quality-rules/7648",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7658,
        "name": "Avoid SQL queries on XXL Tables using Functions on indexed Columns in the WHERE clause",
        "href": "AIP/quality-rules/7658",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7668,
        "name": "Prefer using SAX parser for large or medium sized XML file parsing instead of DOM parser",
        "href": "AIP/quality-rules/7668",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7702,
        "name": "Prefer using Hibernate-provided implementations from third parties for connection pool to increase database access performances.",
        "href": "AIP/quality-rules/7702",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7720,
        "name": "Ensure reducing the number of EJB beans to hold performance and complexity of the application",
        "href": "AIP/quality-rules/7720",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7728,
        "name": "Ensure that no thread creation is done for application running on application server to avoid any performance and robustness issues.",
        "href": "AIP/quality-rules/7728",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7734,
        "name": "Ensure that debug method invocation is usually preceded by a call to its corresponding isDebugEnabled method",
        "href": "AIP/quality-rules/7734",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7806,
        "name": "Avoid Artifacts with Group By",
        "href": "AIP/quality-rules/7806",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7808,
        "name": "Avoid Artifacts with SQL statement including subqueries",
        "href": "AIP/quality-rules/7808",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++",
            "JEE",
            "SQL"
        ]
    },
    {
        "id": 7810,
        "name": "Avoid Artifacts with a Complex SELECT Clause",
        "href": "AIP/quality-rules/7810",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++",
            "JEE"
        ]
    },
    {
        "id": 7822,
        "name": "Avoid Artifacts with queries on more than 4 Tables",
        "href": "AIP/quality-rules/7822",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++",
            "JEE"
        ]
    },
    {
        "id": 7828,
        "name": "Ensure to write SQL query with a limited number of tables used in the FROM clause",
        "href": "AIP/quality-rules/7828",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++",
            "JEE",
            "SQL"
        ]
    },
    {
        "id": 7922,
        "name": "Avoid usage of 'std::find_first_of'",
        "href": "AIP/quality-rules/7922",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7924,
        "name": "Avoid defining Functions with 'struct' or 'class' parameters passed by value",
        "href": "AIP/quality-rules/7924",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7936,
        "name": "Ensure that finalize() is not used as the time of execution is not garanteed",
        "href": "AIP/quality-rules/7936",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7940,
        "name": "Ensure defining a business method for removing the Stateful bean instance and call it from the client side",
        "href": "AIP/quality-rules/7940",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7954,
        "name": "Ensure not having indirect String concatenation inside loops to avoid making your software performance slowly.",
        "href": "AIP/quality-rules/7954",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7962,
        "name": "Ensure not having direct or indirect remote calls inside a loop to avoid making your software performance slow",
        "href": "AIP/quality-rules/7962",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7996,
        "name": "Provide a private default Constructor for utility Classes or use free Functions in a Namespace",
        "href": "AIP/quality-rules/7996",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8048,
        "name": "Invoke 'delete' with the same form as the matching 'new'",
        "href": "AIP/quality-rules/8048",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8068,
        "name": "Do not return a dereferenced pointer allocated inside the function",
        "href": "AIP/quality-rules/8068",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8076,
        "name": "Avoid using 'new[]', prefer 'std::vector' or 'std::array'",
        "href": "AIP/quality-rules/8076",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8100,
        "name": "Ensure setting timeouts for blocking synchronous calls to prevent an infinite waiting time",
        "href": "AIP/quality-rules/8100",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8104,
        "name": "Ensure you have released your SQL connection after an effective lifetime",
        "href": "AIP/quality-rules/8104",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8108,
        "name": "Ensure you have released your stream connection after an effective lifetime",
        "href": "AIP/quality-rules/8108",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8110,
        "name": "Ensure using dedicated stored procedures when multiple data accesses are needed",
        "href": "AIP/quality-rules/8110",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8148,
        "name": "Avoid artifacts having Incorrect Type Conversion or Cast",
        "href": "AIP/quality-rules/8148",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8154,
        "name": "Avoid using GC.Collect()",
        "href": "AIP/quality-rules/8154",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8158,
        "name": "Avoid thread creation for application running on application server",
        "href": "AIP/quality-rules/8158",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8214,
        "name": "Ensure not using expired or released database resource to prevent access to sensitive data that is associated with a different user or entity.",
        "href": "AIP/quality-rules/8214",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1020004,
        "name": "Avoid using querySelectorAll, prefer getElementsByTagName() or getElementsByClassName() to have better performance.",
        "href": "AIP/quality-rules/1020004",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020006,
        "name": "Make sure you do not execute a function inside loop termination to avoid performance issues, use a variable to store the value of a function instead",
        "href": "AIP/quality-rules/1020006",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020008,
        "name": "Replace for-in loop with a regular for loop with index to avoid slower performance",
        "href": "AIP/quality-rules/1020008",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020010,
        "name": "Replace forEach() with a regular loop to ensure better performance",
        "href": "AIP/quality-rules/1020010",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020012,
        "name": "Ensure that the web-service calls made from the client are not inside a loop so that efficiency is not impacted due to communications overhead",
        "href": "AIP/quality-rules/1020012",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020014,
        "name": "Ensure having a process queue that will manage all the requests with a limited number of concurrents when making calls to web services",
        "href": "AIP/quality-rules/1020014",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020016,
        "name": "Ensure to use intermediate variables for minimizing dot notations for references within a loop so that performance is not adversely impacted",
        "href": "AIP/quality-rules/1020016",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020020,
        "name": "Use asynchronous loading of Javascript files or code to avoid a single point of failure in page loading",
        "href": "AIP/quality-rules/1020020",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020038,
        "name": "Ensure to assign a reference variable to a function output if it has to be used inside a loop to make performance better",
        "href": "AIP/quality-rules/1020038",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020056,
        "name": "Ensure using document.getElementById() instead of documetn.all to avoid slow loading of DOM elements",
        "href": "AIP/quality-rules/1020056",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020092,
        "name": "Move JavaScript functions from HTML file to a '.js' file",
        "href": "AIP/quality-rules/1020092",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020208,
        "name": "Prefer using a computed property as a condition, if needed, instead of using v-for and v-if on the same element",
        "href": "AIP/quality-rules/1020208",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020214,
        "name": "Ensure to clear event listeners after components are destroyed to prevent memory leaks",
        "href": "AIP/quality-rules/1020214",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020224,
        "name": "Ensure that you are not making API/web service calls inside loops so that performance is not severely impacted",
        "href": "AIP/quality-rules/1020224",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020300,
        "name": "Ensure you minize the number of web service ajax calls inside a loop",
        "href": "AIP/quality-rules/1020300",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020302,
        "name": "Ensure you don't use the element type in your selector when using class selectors in jQuery.",
        "href": "AIP/quality-rules/1020302",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020306,
        "name": "Ensure using find for Id->Child nested selectors for better performance",
        "href": "AIP/quality-rules/1020306",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020308,
        "name": "Always cache your jQuery selector, based on class, returned objects in variables for reuse.",
        "href": "AIP/quality-rules/1020308",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020310,
        "name": "Prefer using \"type=\" notation instead of \":\".",
        "href": "AIP/quality-rules/1020310",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020314,
        "name": "Ensure you don't manipulate stylesheet with css() method to avoid performance issue",
        "href": "AIP/quality-rules/1020314",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020316,
        "name": "Ensure you don't universal selectors to avoid performance issue.",
        "href": "AIP/quality-rules/1020316",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020500,
        "name": "Prefer using angular.forEach() instead of JS implementation [].forEach for an AngularJS app to enhance performace",
        "href": "AIP/quality-rules/1020500",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020504,
        "name": "Ensure that you are not making API/web service calls inside loops so that performance is not severely impacted",
        "href": "AIP/quality-rules/1020504",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020534,
        "name": "Ensure that you are not using a web service inside loops so that performance is not severely impacted",
        "href": "AIP/quality-rules/1020534",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020550,
        "name": "Ensure your web application interactivity by using 'track by' option in 'ng-repeat' block",
        "href": "AIP/quality-rules/1020550",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020704,
        "name": "The variables \"__dirname\" and \"__filename\" should not be used in string concatenation to avoid having an invalid path",
        "href": "AIP/quality-rules/1020704",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020714,
        "name": "Ensure having only one routing handler per path to avoid an efficiency issue",
        "href": "AIP/quality-rules/1020714",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020716,
        "name": "\u201chttp.get\u201d or \u201chttp.request\u201d should not be used inside a loop to optimize the number of calls between the client application and web service server",
        "href": "AIP/quality-rules/1020716",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020748,
        "name": "Ensure you minize the number of api call especially inside a loop",
        "href": "AIP/quality-rules/1020748",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020774,
        "name": "Ensure you don't have multiple artifacts updating data on the same NoSQL table (Javascript)",
        "href": "AIP/quality-rules/1020774",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020776,
        "name": "Ensure you don't have multiple artifacts inserting data on the same NoSQL table (Javascript)",
        "href": "AIP/quality-rules/1020776",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020778,
        "name": "Ensure you don't have multiple artifacts deleting data on the same NoSQL table (Javascript)",
        "href": "AIP/quality-rules/1020778",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020814,
        "name": "",
        "href": "AIP/quality-rules/1020814",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020828,
        "name": "Always ensure not using the concatenation of the strings in a loop as  a costly operation.",
        "href": "AIP/quality-rules/1020828",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020838,
        "name": "Ensure you have provided a debounceTime after calling an Observable with using Rx.observable.fromEvent",
        "href": "AIP/quality-rules/1020838",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020840,
        "name": "Ensure you have added \"track by\" syntax into your ngFor block",
        "href": "AIP/quality-rules/1020840",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020892,
        "name": "Ensure you have closed  Node.js filesystem after using open or openSync.",
        "href": "AIP/quality-rules/1020892",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020894,
        "name": "The variables \"__dirname\" and \"__filename\" should not be used in string concatenation to avoid having an invalid path",
        "href": "AIP/quality-rules/1020894",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020898,
        "name": "Ensure having only one routing handler per path to avoid an efficiency issue",
        "href": "AIP/quality-rules/1020898",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1025056,
        "name": "Ensure you don't have SQL queries inside loops",
        "href": "AIP/quality-rules/1025056",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 1027020,
        "name": "Use Any instead of Count to check for a non-empty sequence",
        "href": "AIP/quality-rules/1027020",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1043082,
        "name": "Avoid client provided dictionaries to have high request sizes",
        "href": "AIP/quality-rules/1043082",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ASP.NET"
        ]
    },
    {
        "id": 1065004,
        "name": "Ensure that dynamically allocated memory on local pointer in functions/methods is freed.",
        "href": "AIP/quality-rules/1065004",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065032,
        "name": "Ensure to declare arrays with a defined size",
        "href": "AIP/quality-rules/1065032",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065034,
        "name": "Esnure that the exceptions are thrown by value",
        "href": "AIP/quality-rules/1065034",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065086,
        "name": "Ensure that pointer types are not cast to integral types",
        "href": "AIP/quality-rules/1065086",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1101000,
        "name": "Prefer using a Join with a consition when making SQL queries so that performance is not adversely impacted due to cartesian/cross join",
        "href": "AIP/quality-rules/1101000",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101002,
        "name": "Prefer using a Join with a consition when making SQL queries on XXL tables so that performance is not adversely impacted due to cartesian/cross join",
        "href": "AIP/quality-rules/1101002",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101004,
        "name": "Ensure to include index in your SQL table so that performance of your app is not adversely impacted",
        "href": "AIP/quality-rules/1101004",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101006,
        "name": "Ensure to include index in your SQL XXL tables so that performance of your app is not adversely impacted",
        "href": "AIP/quality-rules/1101006",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101008,
        "name": "Make sure you use SARGable predicate in WHERE clauses and JOINS to prevent additional costs on CPU",
        "href": "AIP/quality-rules/1101008",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101010,
        "name": "Prefer using INNER JOINS instead of NATURAL JOINS for better performance",
        "href": "AIP/quality-rules/1101010",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101014,
        "name": "Try to separate JOIN and WHERE clauses by following ANSI-Standard joins format to improve maintainability and readabitliy",
        "href": "AIP/quality-rules/1101014",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101018,
        "name": "Prefer not using GROUP BY clauses in queries as it hampers the performance and is inefficient",
        "href": "AIP/quality-rules/1101018",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101024,
        "name": "To ensure query performance make sure you do not use Dynamic SQL, specially for modules that are called too often",
        "href": "AIP/quality-rules/1101024",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101028,
        "name": "Always use MINUS or EXCEPT operator instead of NOT EXISTS and NOT IN subqueries for better execution performance",
        "href": "AIP/quality-rules/1101028",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101030,
        "name": "Ensure that you are not making queries and Joins on too many tables or views as it hampers execution performance",
        "href": "AIP/quality-rules/1101030",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101032,
        "name": "When using EXISTS or NOT EXISTS clauses make sure that you refer to parent object and not  independent clauses to ensure better performance",
        "href": "AIP/quality-rules/1101032",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101034,
        "name": "Prefer replacing DISTINCT in your queries with a WHERE, FROM clause that fetches only the required data",
        "href": "AIP/quality-rules/1101034",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101038,
        "name": "To improve the readability of your SQL statements use IN test condition instead of multiple OR conditions on same identifier",
        "href": "AIP/quality-rules/1101038",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101058,
        "name": "Prefer to use a similar syntax for JOIN in same SQL queries and not mix ANSI and non-ANSI syntax",
        "href": "AIP/quality-rules/1101058",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101060,
        "name": "When using LIKE operator make sure the first character in search string is not a wildcard character as it reduces execution performance",
        "href": "AIP/quality-rules/1101060",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101066,
        "name": "Ensure that when using triangular joins you restrict the results with some extra conditions to avoid severe performance issues",
        "href": "AIP/quality-rules/1101066",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101068,
        "name": "Make sure you don't have synonyms with both private and public definitions to avoid complexity, try renaming one of them instead",
        "href": "AIP/quality-rules/1101068",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101070,
        "name": "Always use 'IS NULL' or 'IS NOT NULL' to check for Nullability instead of using '=' or '!=' operators",
        "href": "AIP/quality-rules/1101070",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101078,
        "name": "Ensure that when creating synonyms you define them as PRIVATE and not PUBLIC",
        "href": "AIP/quality-rules/1101078",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101082,
        "name": "Ensure that when chaining synonyms you do not loop them leading to synonym referring to itself as it will cause a error during execution",
        "href": "AIP/quality-rules/1101082",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101084,
        "name": "Ensure using a set-oriented approach instead of using a iterative approach caused by using cursors inside loops for better performance of queries",
        "href": "AIP/quality-rules/1101084",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101086,
        "name": "Ensure to use VARCHAR2 or NVARCHAR2 instead of CHAR, VARCHAR or NCHAR as the latter will be deprecated and uses more disk space",
        "href": "AIP/quality-rules/1101086",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101088,
        "name": "Ensure that you use CLOB, NCLOB or BLOB datatypes in tables instead of LONG or LONG RAW as the latter are deprecated",
        "href": "AIP/quality-rules/1101088",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101090,
        "name": "Each table should have a clustered index",
        "href": "AIP/quality-rules/1101090",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101098,
        "name": "Avoid Artifacts with a Complex SELECT Clause (SQL)",
        "href": "AIP/quality-rules/1101098",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101102,
        "name": "LIKE conditions should not be used without wildcards characters",
        "href": "AIP/quality-rules/1101102",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101104,
        "name": "XXL Tables should have a primary key / unique key constraint / unique index",
        "href": "AIP/quality-rules/1101104",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101106,
        "name": "Tables should have a primary key / unique key constraint / unique index",
        "href": "AIP/quality-rules/1101106",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101114,
        "name": "Avoid \"SELECT *\" queries (SQL)",
        "href": "AIP/quality-rules/1101114",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101920,
        "name": "Ensure to not use explain() method in production code so that performance is not reduced",
        "href": "AIP/quality-rules/1101920",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1101922,
        "name": "Avoid having multiple Artifacts updating data on the same NoSQL Collection (JEE)",
        "href": "AIP/quality-rules/1101922",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1101924,
        "name": "Avoid having multiple Artifacts inserting data on the same NoSQL Collection (JEE)",
        "href": "AIP/quality-rules/1101924",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1101926,
        "name": "Avoid having multiple artifacts deleting data on the same NoSQL collections (JEE)",
        "href": "AIP/quality-rules/1101926",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1101968,
        "name": "Avoid having multiple Artifacts updating data on the same NoSQL Collection",
        "href": "AIP/quality-rules/1101968",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ASP.NET",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1101970,
        "name": "Avoid having multiple Artifacts inserting data on the same NoSQL Collection",
        "href": "AIP/quality-rules/1101970",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ASP.NET",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1101972,
        "name": "Avoid having multiple artifacts deleting data on the same NoSQL collection",
        "href": "AIP/quality-rules/1101972",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ASP.NET",
            "C#",
            "VB.NET"
        ]
    }
]
