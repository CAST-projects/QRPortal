[
    {
        "id": 570,
        "name": "Avoid large Interfaces - too many Methods (C++)",
        "href": "AIP/quality-rules/570",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 576,
        "name": "Avoid large Classes - too many Constructors (C++)",
        "href": "AIP/quality-rules/576",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 578,
        "name": "Avoid Classes with multiple inheritance",
        "href": "AIP/quality-rules/578",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 580,
        "name": "Avoid using Structures",
        "href": "AIP/quality-rules/580",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 588,
        "name": "Avoid using Global Variables (C++)",
        "href": "AIP/quality-rules/588",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 590,
        "name": "Avoid using global objects in Constructors and Destructors",
        "href": "AIP/quality-rules/590",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 610,
        "name": "Avoid circular references between header files",
        "href": "AIP/quality-rules/610",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 630,
        "name": "Avoid data members that are not private",
        "href": "AIP/quality-rules/630",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 634,
        "name": "Avoid using VARIANT Structures",
        "href": "AIP/quality-rules/634",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1078,
        "name": "Avoid undocumented Header files",
        "href": "AIP/quality-rules/1078",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1082,
        "name": "Avoid header files with a very low comment/code ratio",
        "href": "AIP/quality-rules/1082",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1092,
        "name": "Avoid undocumented Implementation files",
        "href": "AIP/quality-rules/1092",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1094,
        "name": "Avoid Implementation files with a very low comment/code ratio",
        "href": "AIP/quality-rules/1094",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1606,
        "name": "Triggers should not directly modify tables, a procedure or function should be used instead",
        "href": "AIP/quality-rules/1606",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 3550,
        "name": "Namespace naming convention - case control",
        "href": "AIP/quality-rules/3550",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3554,
        "name": "Interface naming convention - case and character set control",
        "href": "AIP/quality-rules/3554",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3558,
        "name": "Enumerations naming convention - case and character set control",
        "href": "AIP/quality-rules/3558",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3560,
        "name": "Enumeration Items naming convention - case and character set control",
        "href": "AIP/quality-rules/3560",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3562,
        "name": "Private Fields naming convention - case and character set control",
        "href": "AIP/quality-rules/3562",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3564,
        "name": "Public Fields naming convention - case and character set control",
        "href": "AIP/quality-rules/3564",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3566,
        "name": "Methods naming convention - case and character set control",
        "href": "AIP/quality-rules/3566",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3568,
        "name": "Events naming convention - case and character set control",
        "href": "AIP/quality-rules/3568",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3572,
        "name": "Controls naming convention - prefix, case and character set control",
        "href": "AIP/quality-rules/3572",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3574,
        "name": "Properties naming convention - case and character set control",
        "href": "AIP/quality-rules/3574",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3576,
        "name": "Avoid declaring public Fields",
        "href": "AIP/quality-rules/3576",
        "critical": true,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3590,
        "name": "Avoid Interface implementation on Structures",
        "href": "AIP/quality-rules/3590",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 4556,
        "name": "Ensure you review the Class design to reduce the number of Constructors",
        "href": "AIP/quality-rules/4556",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4560,
        "name": "Ensure that the interfaces have a reasonable number of methods",
        "href": "AIP/quality-rules/4560",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4566,
        "name": "Ensure that you have access type defined at instance variable level to control accesss",
        "href": "AIP/quality-rules/4566",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4568,
        "name": "Prefer using Protected or Private Instance Variables to control the accessibility",
        "href": "AIP/quality-rules/4568",
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4570,
        "name": "Ensure that Class Variables with Public Protected or Package access type are declared Final",
        "href": "AIP/quality-rules/4570",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4572,
        "name": "Ensure explicitly Initializing the instance variable declared as final otherwise a compile-time error occurs.",
        "href": "AIP/quality-rules/4572",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4576,
        "name": "Ensure that a getter and setter is provided for each private field",
        "href": "AIP/quality-rules/4576",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4578,
        "name": "Ensure you declare the type as an interface of a more appropriate collection",
        "href": "AIP/quality-rules/4578",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4580,
        "name": "Ensure you declare the type as an interface of a more appropriate collection.",
        "href": "AIP/quality-rules/4580",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4594,
        "name": "Prefer not using 'java.io.File' to avoid violating the Enterprise JavaBeans (EJB) specification",
        "href": "AIP/quality-rules/4594",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4596,
        "name": "Prefer using environment file instead of using java.lang.System.getenv()",
        "href": "AIP/quality-rules/4596",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4598,
        "name": "Ensure you don't use 'java.lang.Runtime.exec()'",
        "href": "AIP/quality-rules/4598",
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4602,
        "name": "Ensure not using Fields (non static final) from other Classes to respect OO encapsulation concepts",
        "href": "AIP/quality-rules/4602",
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4606,
        "name": "Ensure you no longer use 'sun.*' Classes",
        "href": "AIP/quality-rules/4606",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4610,
        "name": "Prefer not using anonymous Classes for maintenance reason",
        "href": "AIP/quality-rules/4610",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4612,
        "name": "Ensure you don't use JNI for security reason",
        "href": "AIP/quality-rules/4612",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4614,
        "name": "A clone method that is overridden in a subclass should call super.clone. Not doing so causes the subclass clone to return an object of the wrong type.",
        "href": "AIP/quality-rules/4614",
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4708,
        "name": "Ensure to use class invocation or method call instead of dynamic instantiation known to be slower",
        "href": "AIP/quality-rules/4708",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4716,
        "name": "Ensure that the class is implementing a reasonable number of Interfaces",
        "href": "AIP/quality-rules/4716",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4722,
        "name": "Ensure that all classes that reference the database are in a specific layer usually called data layer",
        "href": "AIP/quality-rules/4722",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7132,
        "name": "Ensure that action mappings have few forwards to avoid managing too complex behaviors in the Action class",
        "href": "AIP/quality-rules/7132",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7136,
        "name": "Ensure that application architecture in not too complex and move some of this logic to another conceptual layer",
        "href": "AIP/quality-rules/7136",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7140,
        "name": "Ensure to use the action mapping table in struts configuration file.",
        "href": "AIP/quality-rules/7140",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7142,
        "name": "Ensure to have action classes that have only 1 public method",
        "href": "AIP/quality-rules/7142",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7146,
        "name": "Ensure to reference only Java Objects belonging to the scope in order to respect the usage context in a JSP page.",
        "href": "AIP/quality-rules/7146",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7148,
        "name": "Ensure that JSP Pages are accessed through their tiles definition",
        "href": "AIP/quality-rules/7148",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7220,
        "name": "Ensure to remove unused and unnecessary Java imports",
        "href": "AIP/quality-rules/7220",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7242,
        "name": "Ensure to have Action Class inherit from one single extension of Struts Action Class that is abstract or have an abstract method.",
        "href": "AIP/quality-rules/7242",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7260,
        "name": "User Interface elements must not use directly the database",
        "href": "AIP/quality-rules/7260",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7262,
        "name": "Avoid Namespaces with High Efferent Coupling (CE)",
        "href": "AIP/quality-rules/7262",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7264,
        "name": "Avoid namespaces with High Afferent Coupling (CA)",
        "href": "AIP/quality-rules/7264",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7296,
        "name": "Never define static variables in header files",
        "href": "AIP/quality-rules/7296",
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7306,
        "name": "Ensure to make the inner class a standard class.",
        "href": "AIP/quality-rules/7306",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7308,
        "name": "Ensure to make the inner class as standard class",
        "href": "AIP/quality-rules/7308",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7340,
        "name": "Avoid Classes with Destructor not explicitly virtual whenever one of its base Class has a virtual Destructor",
        "href": "AIP/quality-rules/7340",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7342,
        "name": "Avoid functions overriding virtual functions without having the 'virtual' keyword",
        "href": "AIP/quality-rules/7342",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7388,
        "name": "Avoid artifacts having recursive calls",
        "href": "AIP/quality-rules/7388",
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7434,
        "name": "Ensure to overrides equals() and hashCode()",
        "href": "AIP/quality-rules/7434",
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7678,
        "name": "Prefer using SLF4J that acts as a facade for different logging frameworks instead of using basic java log files",
        "href": "AIP/quality-rules/7678",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7714,
        "name": "Prefer not using auto-wiring to guarantee more flexibility and better performance of your application",
        "href": "AIP/quality-rules/7714",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7716,
        "name": "Ensure not using/defining singleton or factory for Spring Based application",
        "href": "AIP/quality-rules/7716",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7760,
        "name": "Avoid triggers, functions and procedures with a very low comment/code ratio",
        "href": "AIP/quality-rules/7760",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 7780,
        "name": "Ensure you provide enough comment for your Classes",
        "href": "AIP/quality-rules/7780",
        "critical": false,
        "technologyNames": [
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7786,
        "name": "Avoid long Table or View names",
        "href": "AIP/quality-rules/7786",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 7792,
        "name": "Avoid Classes with a High Number Of Children",
        "href": "AIP/quality-rules/7792",
        "critical": false,
        "technologyNames": [
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7794,
        "name": "Avoid Classes with a High Public Data Ratio",
        "href": "AIP/quality-rules/7794",
        "critical": false,
        "technologyNames": [
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7818,
        "name": "Ensure you have a good level of comments of your Functions",
        "href": "AIP/quality-rules/7818",
        "critical": false,
        "technologyNames": [
            "C",
            "JEE",
            "JavaScript"
        ]
    },
    {
        "id": 7836,
        "name": "Add comments into functions to explain what is their goal and how they work.",
        "href": "AIP/quality-rules/7836",
        "critical": false,
        "technologyNames": [
            "C",
            "C++",
            "JEE",
            "JavaScript"
        ]
    },
    {
        "id": 7838,
        "name": "Add comments into method implementation to explain what is their goal and how they work.",
        "href": "AIP/quality-rules/7838",
        "critical": false,
        "technologyNames": [
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7844,
        "name": "Avoid undocumented Classes",
        "href": "AIP/quality-rules/7844",
        "critical": false,
        "technologyNames": [
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7846,
        "name": "Ensure your methods are commented enough to provide good understanding to other contributors",
        "href": "AIP/quality-rules/7846",
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7914,
        "name": "Prefer using stored procedure instead of using direct SQL queries to database",
        "href": "AIP/quality-rules/7914",
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7916,
        "name": "Ensure your JSP/ASP pages are not directly connected to database",
        "href": "AIP/quality-rules/7916",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7918,
        "name": "Exceptions naming convention -suffix control",
        "href": "AIP/quality-rules/7918",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7920,
        "name": "Exceptions naming convention - case and character set control",
        "href": "AIP/quality-rules/7920",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8008,
        "name": "Avoid data members that are never read",
        "href": "AIP/quality-rules/8008",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8010,
        "name": "Do not overload the ampersand, comma, logical AND or logical OR operators",
        "href": "AIP/quality-rules/8010",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8032,
        "name": "Ensure you don't use multiple break statement in 'for' loops",
        "href": "AIP/quality-rules/8032",
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8046,
        "name": "Do not return non-const handles to Class data from const member Functions",
        "href": "AIP/quality-rules/8046",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8062,
        "name": "An unconditional 'throw', 'return' or 'break' shall terminate every non-empty switch-clause",
        "href": "AIP/quality-rules/8062",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8066,
        "name": "Avoid using 'using namespace' or 'using' declarations in header files",
        "href": "AIP/quality-rules/8066",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8070,
        "name": "Do not alter a control variable in the body of a 'for' statement",
        "href": "AIP/quality-rules/8070",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8076,
        "name": "Avoid using 'new[]', prefer 'std::vector' or 'std::array'",
        "href": "AIP/quality-rules/8076",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8102,
        "name": "Ensure not having hard-coded network resources names in the source files (JEE)",
        "href": "AIP/quality-rules/8102",
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8148,
        "name": "Avoid artifacts having Incorrect Type Conversion or Cast",
        "href": "AIP/quality-rules/8148",
        "critical": true,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1020000,
        "name": "Ensure you keep simple the design of the component/module to reduce number of independent paths",
        "href": "AIP/quality-rules/1020000",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020002,
        "name": "Ensure you have enough comment your code (HTML5/Javascript)",
        "href": "AIP/quality-rules/1020002",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020018,
        "name": "Make sure that you do not use Web SQL databases",
        "href": "AIP/quality-rules/1020018",
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020072,
        "name": "Make sure to not access the database from Javascript directly, instead create dedicated modules for the same",
        "href": "AIP/quality-rules/1020072",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020076,
        "name": "Aggregate method parameters into an object to improve readability and maintainability of your code",
        "href": "AIP/quality-rules/1020076",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020086,
        "name": "Enrich your code with comments to give an overview of the code to improve maintainability",
        "href": "AIP/quality-rules/1020086",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020200,
        "name": "Ensure the data property to return objects from a function",
        "href": "AIP/quality-rules/1020200",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020312,
        "name": "Ensure not using anonymous functions to attach events because they are difficult to debug, maintain, test or reuse",
        "href": "AIP/quality-rules/1020312",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020502,
        "name": "Prefer using angular.fromJson and angular.toJson instead of standard JS APIs to improve maintainability and robustness of your code",
        "href": "AIP/quality-rules/1020502",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020506,
        "name": "Prefer using 'this' instead of $scope in controllers to generate views to ensure consistency and structuredness in code",
        "href": "AIP/quality-rules/1020506",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020508,
        "name": "Prefer using AngularJS wrapper service $document to maintain structuredness of code",
        "href": "AIP/quality-rules/1020508",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020510,
        "name": "Prefer using AngularJS wrapper service $window to maintain structuredness of code",
        "href": "AIP/quality-rules/1020510",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020512,
        "name": "Prefer using AngularJS wrapper service $timeout to maintain structuredness of code",
        "href": "AIP/quality-rules/1020512",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020516,
        "name": "Prefer using AngularJS wrapper service angular.isArray instead of default JS implementation to maintain structuredness of code",
        "href": "AIP/quality-rules/1020516",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020518,
        "name": "Prefer using AngularJS wrapper service angular.isDate instead of default JS implementation to maintain structuredness of code",
        "href": "AIP/quality-rules/1020518",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020520,
        "name": "Prefer using AngularJS wrapper service angular.isFunction instead of default JS implementation to maintain structuredness of code",
        "href": "AIP/quality-rules/1020520",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020522,
        "name": "Prefer using AngularJS wrapper service angular.isString instead of default JS implementation to maintain structuredness of code",
        "href": "AIP/quality-rules/1020522",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020524,
        "name": "Prefer using AngularJS wrapper service angular.isObject instead of default JS implementation to maintain structuredness of code",
        "href": "AIP/quality-rules/1020524",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020526,
        "name": "Prefer using AngularJS wrapper service angular.isNumber instead of default JS implementation to maintain structuredness of code",
        "href": "AIP/quality-rules/1020526",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020528,
        "name": "Prefer using AngularJS wrapper service angular.isRegex instead of default JS implementation to maintain structuredness of code",
        "href": "AIP/quality-rules/1020528",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020532,
        "name": "Prefer using Factory() provider recipe instead of Service() to ensure structuredness and efficiency",
        "href": "AIP/quality-rules/1020532",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020830,
        "name": "Prefer using Angular Renderer2 instead of directly interacting with the DOM",
        "href": "AIP/quality-rules/1020830",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020836,
        "name": "Always prefer using modules over namespaces for structuring you code instead of exporting namespaces",
        "href": "AIP/quality-rules/1020836",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020848,
        "name": "Always ensuure using \"pipeable\" operators which can be imported from \"rxjs/operators\" instead of \"patch\" operator",
        "href": "AIP/quality-rules/1020848",
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1024000,
        "name": "Prefer using FrameLayout, RelativeLayout or CustomLayout in place of AbsoluteLayout",
        "href": "AIP/quality-rules/1024000",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1027032,
        "name": "Ensure not having hardcoded network resources names in the source files (.NET)",
        "href": "AIP/quality-rules/1027032",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027038,
        "name": "Avoid if \u2026 else if constructs not terminated with an else clause (.NET, VB)",
        "href": "AIP/quality-rules/1027038",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027086,
        "name": "Avoid having the same implementation in a conditional structure",
        "href": "AIP/quality-rules/1027086",
        "critical": false,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1039044,
        "name": "BannedAPI should not be used because they are considered deprecated and unsafe",
        "href": "AIP/quality-rules/1039044",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039050,
        "name": "Prefer using @Override annotation to mark methods overriding or implementing a method declared in a super type to avoid unintentional errors",
        "href": "AIP/quality-rules/1039050",
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1065000,
        "name": "Avoid using \"continue\" statement",
        "href": "AIP/quality-rules/1065000",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065002,
        "name": "\"enum\" members other than the first one should not be explicitly initialized unless all members are explicitly initialized.",
        "href": "AIP/quality-rules/1065002",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065012,
        "name": "Avoid using 'setjmp' or 'longjmp' (C/C++)",
        "href": "AIP/quality-rules/1065012",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065028,
        "name": "Ensure that Switch statements have at least 2 case clauses",
        "href": "AIP/quality-rules/1065028",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065030,
        "name": "All if \u2026 else if constructs shall be terminated with an else clause (C/C++)",
        "href": "AIP/quality-rules/1065030",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065032,
        "name": "Ensure to declare arrays with a defined size",
        "href": "AIP/quality-rules/1065032",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065040,
        "name": "Make sure to not use unnamed namespaces in header files so that results are as expected",
        "href": "AIP/quality-rules/1065040",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065044,
        "name": "Ensure that in global space only extern linkages, namespace and main function are present",
        "href": "AIP/quality-rules/1065044",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065048,
        "name": "Where multiple handlers are provided in a single try-catch statement or function-try-block, any ellipsis (catch-all) handler shall occur last.",
        "href": "AIP/quality-rules/1065048",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065060,
        "name": "Ensure to use an integral value to iterate in loops",
        "href": "AIP/quality-rules/1065060",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065064,
        "name": "Ensure to split the expressions and assignments into multiple lines for better readability and maintainability.",
        "href": "AIP/quality-rules/1065064",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065066,
        "name": "Avoid having  a method call or additional expressions in a statement using \"++\" or \"--\" operators (C/C++)",
        "href": "AIP/quality-rules/1065066",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065076,
        "name": "Avoid declaring data members in non-POD classes as public or protected",
        "href": "AIP/quality-rules/1065076",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065080,
        "name": "Ensure to use C++ style notation casts to avoid unexpected type conversions",
        "href": "AIP/quality-rules/1065080",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065086,
        "name": "Ensure that pointer types are not cast to integral types",
        "href": "AIP/quality-rules/1065086",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065088,
        "name": "Member functions shall not return non-const handles to class-data.",
        "href": "AIP/quality-rules/1065088",
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065090,
        "name": "Ensure that you use 'enum' types with  [ ], =, == and !=, the unary & operator, and <, <=, >, >=.",
        "href": "AIP/quality-rules/1065090",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065126,
        "name": "Avoid using goto to jump backwards into a statement in the same function(C/C++)",
        "href": "AIP/quality-rules/1065126",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065128,
        "name": "Mke sure you do not have unused labels in your code",
        "href": "AIP/quality-rules/1065128",
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1101016,
        "name": "Ensure that you have a limited number of paramenters in OR clauses or IN statements to ensure good query performance",
        "href": "AIP/quality-rules/1101016",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101036,
        "name": "Ensure using ANSI standard Operators such as <>,<=,>= in SQL where clauses to ensure portability",
        "href": "AIP/quality-rules/1101036",
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 1101042,
        "name": "Prefer not having table names using characters outside of [a-z,0-9,_] for better readability and changeability",
        "href": "AIP/quality-rules/1101042",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101044,
        "name": "Prefer not having view names using characters outside of [a-z,0-9,_] for better readability and changeability",
        "href": "AIP/quality-rules/1101044",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101046,
        "name": "Ensure to have your packages named based on the same naming convention for better readability",
        "href": "AIP/quality-rules/1101046",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101048,
        "name": "Ensure to have your package functions named based on the same naming convention for better readability",
        "href": "AIP/quality-rules/1101048",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101050,
        "name": "Ensure to have your package stored procedures named based on the same naming convention for better readability",
        "href": "AIP/quality-rules/1101050",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101064,
        "name": "Ensure that you do not have triggers acting on other triggers and cascading, review your design to avoid such cases",
        "href": "AIP/quality-rules/1101064",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101074,
        "name": "Ensure your table aliases do not have numbers to improve readability",
        "href": "AIP/quality-rules/1101074",
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101098,
        "name": "Avoid Artifacts with a Complex SELECT Clause (SQL)",
        "href": "AIP/quality-rules/1101098",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101100,
        "name": "Avoid Functions and Procedures doing an Insert, Update or Delete without managing a transaction (SQL)",
        "href": "AIP/quality-rules/1101100",
        "critical": false,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101958,
        "name": "Avoid artifacts having db.collection.ensureIndex() to create new indexes",
        "href": "AIP/quality-rules/1101958",
        "critical": false,
        "technologyNames": [
            "ASP.NET",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1101964,
        "name": "When using compound indexes, avoid having different index ordering in collection access",
        "href": "AIP/quality-rules/1101964",
        "critical": false,
        "technologyNames": [
            "ASP.NET",
            "C#",
            "VB.NET"
        ]
    }
]
