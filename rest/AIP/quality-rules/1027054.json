{
    "id": 1027054,
    "name": "Always use System.Uri instead of string to build URLs",
    "href": "AIP/quality-rules/1027054",
    "critical": false,
    "severity": 10,
    "maxWeight": 6,
    "extension": {
        "name": "com.castsoftware.dotnet",
        "href": "AIP/extensions/com.castsoftware.dotnet"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule raises a violation when a call is made to a method that has a string parameter whose name contains \"uri\", \"Uri\", \"urn\", \"Urn\", \"url\", or \"Url\" and the declaring type of the method contains a corresponding method overload that has a System.Uri parameter.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "A string representation of a URI is prone to parsing and encoding errors and can lead to security vulnerabilities. The Uri class provides these services in a safe and secure manner. When there is a choice between two overloads that differ only regarding the representation of a URI, the user should choose the overload that takes a Uri argument.",
    "reference": "https://docs.microsoft.com/en-us/visualstudio/code-quality/ca2234?view=vs-2019",
    "remediation": "To fix a violation of this rule, call the overload that takes the Uri argument.",
    "remediationSample": "using System;\n\nnamespace DesignLibrary\n{\n   class History\n   {\n      internal void AddToHistory(string uriString) {}\n      internal void AddToHistory(Uri uriType) {}\n   }\n\n\npublic class Browser\n   {\n      History uriHistory = new History();\n\npublic void SaferWay()\n      {\n         try\n         {\n            Uri newUri = new Uri(\"http://www.adventure-works.com\");\n            uriHistory.AddToHistory(newUri);\n         }\n         catch(UriFormatException uriException) {}\n      }\n    }",
    "sample": "using System;\n\nnamespace DesignLibrary\n{\n   class History\n   {\n      internal void AddToHistory(string uriString) {}\n      internal void AddToHistory(Uri uriType) {}\n   }\n\npublic class Browser\n   {\n      History uriHistory = new History();\n\n      public void ErrorProne()\n      {\n         uriHistory.AddToHistory(\"http://www.adventure-works.com\");\n      }\n   }\n}",
    "total": "Number of methods and fields and properties initialized using a lambda function",
    "alternativeName": "Always use System.Uri instead of string to build URLs",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1063120,
            "name": "PCI-Requirement-6.5.6 - All high risk vulnerabilities",
            "href": "AIP/technical-criteria/1063120",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "href": "AIP/technical-criteria/66064",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "id": "PCI-Requirement-6.5.6",
            "name": "All high risk vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.6",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.6",
            "name": "All high risk vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.6",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
