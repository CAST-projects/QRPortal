{
    "id": 1065110,
    "name": "Ensure arrays and containers are accessed using unsigned values",
    "href": "AIP/quality-rules/1065110",
    "critical": true,
    "severity": 30,
    "maxWeight": 8,
    "extension": {
        "name": "com.castsoftware.cpp",
        "href": "AIP/extensions/com.castsoftware.cpp"
    },
    "description": "The rule will raise a violation when signed counters/iterators/parameters are used",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "When using standard template library vectors, the programmer is responsible for ensuring integer indexes are within the bounds of the vector to prevent out-of-bounds write. Even when checks are performed for range, there are possibilities for the indices to be of a signed type and hence go out of bounds.\nTypically, this can result in the corruption of data, a crash, or code execution. The software may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent write operation then produces undefined or unexpected results.",
    "reference": "https://cwe.mitre.org/data/definitions/787.html\nhttps://cwe.mitre.org/data/definitions/119.html\nhttps://cwe.mitre.org/data/definitions/120.html\nhttps://wiki.sei.cmu.edu/confluence/display/cplusplus/CTR50-CPP.+Guarantee+that+container+indices+and+iterators+are+within+the+valid+range",
    "remediation": "Always use unsigned type for range check.",
    "remediationSample": "1. #include <cstddef>\n  \nvoid insert_in_table(int *table, std::size_t tableSize, \nstd::size_t pos, // compliant - unsigned pos\nint value) {\n  if (pos >= tableSize) {\n    // Handle error\n    return;\n  }\n  table[pos] = value;\n}\n\n\n2. \n#include <vector>\n  \nvoid insert_in_table(std::vector<int> &table, std::size_t pos, int value) {\n  if (pos >= table.size()) {\n    // Handle error\n    return;\n  }\n  table[pos] = value;\n}",
    "sample": "1. \nvoid insert_in_table(int *table, std::size_t tableSize, \nint pos, //Non-compilant\nint value) {\n  if (pos >= tableSize) {\n    // Handle error\n    return;\n  }\n  table[pos] = value;\n}\n\n\n2. \n#include <vector>\n  \nvoid insert_in_table(std::vector<int> &table, long long pos, int value) {\n  if (pos >= table.size()) {\n    // Handle error\n    return;\n  }\n  table[pos] = value;\n}",
    "total": "Number of C++ methods and Functions",
    "alternativeName": "Ensure arrays and containers are accessed using unsigned values",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 20140522,
            "name": "Green",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062145,
            "name": "ASCRM-CWE-120 - Buffer Copy without Checking Size of Input",
            "href": "AIP/technical-criteria/1062145",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062174,
            "name": "ASCSM-CWE-120 - Buffer Copy without Checking Size of Input",
            "href": "AIP/technical-criteria/1062174",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061021,
            "name": "CWE-119 - Improper Restriction of Operations within the Bounds of a Memory Buffer",
            "href": "AIP/technical-criteria/1061021",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1066219,
            "name": "CWE-119 - Improper Restriction of Operations within the Bounds of a Memory Buffer",
            "href": "AIP/technical-criteria/1066219",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061022,
            "name": "CWE-120 - Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
            "href": "AIP/technical-criteria/1061022",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1066220,
            "name": "CWE-120 - Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
            "href": "AIP/technical-criteria/1066220",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061090,
            "name": "CWE-787 - Out-of-bounds Write",
            "href": "AIP/technical-criteria/1061090",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1066887,
            "name": "CWE-787 - Out-of-bounds Write",
            "href": "AIP/technical-criteria/1066887",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063116,
            "name": "PCI-Requirement-6.5.2 - Buffer overflows",
            "href": "AIP/technical-criteria/1063116",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "href": "AIP/technical-criteria/66069",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCRM-CWE-120",
            "name": "Buffer Copy without Checking Size of Input",
            "href": "AIP/quality-standards/CISQ/items/ASCRM-CWE-120",
            "standard": "CISQ"
        },
        {
            "id": "ASCSM-CWE-120",
            "name": "Buffer Copy without Checking Size of Input",
            "href": "AIP/quality-standards/CISQ/items/ASCSM-CWE-120",
            "standard": "CISQ"
        },
        {
            "id": "CWE-119",
            "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
            "href": "AIP/quality-standards/CWE/items/CWE-119",
            "standard": "CWE"
        },
        {
            "id": "CWE-120",
            "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
            "href": "AIP/quality-standards/CWE/items/CWE-120",
            "standard": "CWE"
        },
        {
            "id": "CWE-787",
            "name": "Out-of-bounds Write",
            "href": "AIP/quality-standards/CWE/items/CWE-787",
            "standard": "CWE"
        },
        {
            "id": "CWE-119",
            "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-119",
            "standard": "ISO-5055"
        },
        {
            "id": "CWE-120",
            "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-120",
            "standard": "ISO-5055"
        },
        {
            "id": "CWE-787",
            "name": "Out-of-bounds Write",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-787",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-SI-16",
            "name": "Memory Protection",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-16",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-16",
            "name": "Memory Protection",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-16",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-119",
            "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-119",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "CWE-120",
            "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-120",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "CWE-787",
            "name": "Out-of-bounds Write",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-787",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "PCI-Requirement-6.5.2",
            "name": "Buffer overflows",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.2",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.2",
            "name": "Buffer overflows",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.2",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        },
        {
            "id": "STIG-V-222612",
            "name": "The application must not be vulnerable to overflow attacks.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222612",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
