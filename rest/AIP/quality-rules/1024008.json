{
    "id": 1024008,
    "name": "Always use onActivityResult to pass the login results when using Facebook SDK",
    "href": "AIP/quality-rules/1024008",
    "critical": true,
    "severity": 20,
    "maxWeight": 7,
    "extension": {
        "name": "com.castsoftware.android",
        "href": "AIP/extensions/com.castsoftware.android"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "In the onActivityResult method, you need to call callbackManager.onActivityResult to pass the results of the login request to LoginManager via callbackManager. \n\nThe method that should be called from the Activity's or Fragment's onActivityResult method.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Android Protected Confirmation doesn't provide a secure information channel for the user. Your app cannot assume any confidentiality guarantees beyond those that the Android platform offers. In particular, don't use this workflow to display sensitive information that you wouldn't ordinarily show on the user's device. \n\nAfter the user confirms the message, its integrity is assured, but your app must still use data-in-transit encryption to assure the confidentiality of the signed message",
    "reference": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M4-Insecure_Authentication \n\nhttps://developers.facebook.com/docs/reference/androidsdk/current/facebook/com/facebook/callbackmanager.html/ ",
    "remediationSample": "public class FrameActivity extends BaseActivity { \n\n public static CallbackManager callbackManager; \n@Override \nprotected void onCreate(Bundle savedInstanceState) { \n// FacebookSdk.sdkInitialize is called in the Application onCreate \n\ncallbackManager = CallbackManager.Factory.create(); \n} \n@Override \npublic void onActivityResult(int requestCode, int resultCode, Intent data) { \n    super.onActivityResult(requestCode, resultCode, data); \n    callbackManager.onActivityResult(requestCode, resultCode, data); // FIXED \n\n} ",
    "sample": "public class FrameActivity extends BaseActivity { \n\n public static CallbackManager callbackManager; \n@Override \nprotected void onCreate(Bundle savedInstanceState) { \n// FacebookSdk.sdkInitialize is called in the Application onCreate \n\ncallbackManager = CallbackManager.Factory.create(); \n} \n@Override \npublic void onActivityResult(int requestCode, int resultCode, Intent data) { \n    super.onActivityResult(requestCode, resultCode, data); \n     \n\n} ",
    "total": "Number of Android artifacts",
    "alternativeName": "Always use onActivityResult to pass the login results when using Facebook SDK",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-IA-9",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "M4-2016",
            "name": "Insecure Authentication",
            "href": "AIP/quality-standards/OWASP/items/M4-2016",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
