{
    "id": 1101098,
    "name": "Avoid Artifacts with a Complex SELECT Clause (SQL)",
    "href": "AIP/quality-rules/1101098",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Number of violation occurrences",
    "description": "Avoid Artifacts with a SELECT clause returning more than 9 columns, with a 'SELECT *' query or with a 'SELECT ALL' query for Artifacts. Such queries are considered complex. Changing threshold value requires the update of an internal configuration file, please contact CAST support to get guidance.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Complex select clauses, i.e select clauses with many column can be difficult to read and does not help the reader who needs to identify the relevant columns to be retrieved.\nAlso a query that retrieves many columns can potentially cause performance problems:\nSuch performance problems may arise when the execution of the query returns a large result sets (many rows with many columns may then become a huge amount of data to transport over the network).",
    "remediation": "Review the SELECT statement to reduce the number of selected columns.",
    "remediationSample": "Create View Return_Columns As\n  Select col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 \n   from table1, table2, table3\n        where id = 1\nGO",
    "sample": "Create Procedure Return_Columns As\nBegin\n\n  Select col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 \n   from table1, table2, table3\n        where id = 1\n\nEnd\nGO",
    "total": "Number of Artifacts with SQL code except Views.",
    "alternativeName": "Avoid Artifacts with a Complex SELECT Clause (SQL)",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61011,
            "name": "Complexity - SQL Queries",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1101000,
            "name": "SQL",
            "href": "AIP/technologies/1101000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "M7-2016",
            "name": "Poor Code Quality",
            "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M7-Poor_Code_Quality",
            "description": "Code quality issues are fairly prevalent within most mobile code. The good news is that most code quality issues are fairly benign and result in bad programming practice. It is typically difficult to detect these types of issues through manual code review. Instead, attackers will use third-party tools that perform static analysis or perform fuzzing. These types of tools will typically identify memory leaks, buffer overflows, and other less severe issues that result in bad programming practice. Hackers with extreme low-level knowledge and expertise are able to effectively exploit these types of issues. The typical primary goal is to execute foreign code within the mobile code's address space."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
