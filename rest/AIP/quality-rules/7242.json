{
    "id": 7242,
    "name": "Avoid implementing Action Classes inheriting directly from Struts Action",
    "href": "AIP/quality-rules/7242",
    "critical": false,
    "severity": 10,
    "maxWeight": 2,
    "associatedValueName": "Parent Class full name",
    "description": "All Action Classes should inherit from a single Class, inheriting from the Struts Action Class (org.apache.struts.action.Action). When a class inherit from an action class, all other action class must inherit from the same one. This base class must be abstract or have an abstract method.",
    "output": "This report lists all Action Classes inheriting from different Class.\nIt provides the following information:\n - Class full name\n - parent Class full name",
    "rationale": "It is a good practice to extend the struts Action class, and all specific Actions should inherit from it. With such inheritance tree, the basic action class (those inheriting from Struts Action class) implements the methods shared by all the Action class to avoid code redundancy.",
    "reference": "http://www.jaxmag.com/itr/online_artikel/psecom,id,648,nodeid,147.html\nhttp://www.sitepoint.com/article/struts-first-steps/2",
    "remediation": "Have Action Class inherit from one single extension of Struts Action Class that is abstract or have an abstract method.",
    "remediationSample": "Public  class MyBaseAction extends Action {\n   public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest  request, HttpServletResponse response) throws Exception {\n      //Call all common methods\n      commonTasks();\n      return executeSpecificTask(mapping,form,\n                                                   request,response);\n      }\n\n     private void commonTasks() {\n     //Code for common tasks\n    }\n\n   //Provide implementation of this method in sub-classes\n   public abstract ActionForward executeSpecificTask (ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception;\n}\n\nPublic  class MyAction extends MyBaseAction { // FIXED\n    public ActionForward executeSpecificTask (ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {\n      // some code\n   }\n}",
    "sample": "Public  class MyAction extends Action { // VIOLATION\n   public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest  request, HttpServletResponse response) throws Exception {\n      // Some code\n   }\n}",
    "total": "Number of action classes (inherit from org.apache.struts.action.Action)",
    "alternativeName": "Ensure to have Action Class inherit from one single extension of Struts Action Class that is abstract or have an abstract method.",
    "businessCriteria": [
        {
            "id": 66032,
            "name": "Architectural Design",
            "href": "AIP/business-criteria/66032"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66009,
            "name": "Architecture - Reuse",
            "href": "AIP/technical-criteria/66009",
            "weight": 2,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
