{
    "id": 1025052,
    "name": "Avoid using unnormalized input strings",
    "href": "AIP/quality-rules/1025052",
    "critical": false,
    "severity": 30,
    "maxWeight": 6,
    "extension": {
        "name": "com.castsoftware.securityanalyzer",
        "href": "AIP/extensions/com.castsoftware.securityanalyzer"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "Using CAST data-flow engine, this quality rule detects execution paths from batch arguments down to direct usage of a string, without calling an Unicode normalize method.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "The software uses input before it is canonicalized, which prevents the software from detecting data that becomes invalid after the canonicalization step.\nThis can be used by an attacker to bypass the validation and launch attacks that expose weaknesses that would otherwise be prevented.",
    "reference": "CWE-20: Improper Input Validation\nhttps://cwe.mitre.org/data/definitions/20.html\n\nCWE-180: Incorrect Behavior Order: Validate Before Canonicalize\nhttps://cwe.mitre.org/data/definitions/180.html\n\nUnicode Technical Report #36 - UNICODE SECURITY CONSIDERATIONS\nhttps://unicode.org/reports/tr36/\n\nWhen \"Zo\u00eb\" !== \"Zo\u00eb\". Or why you need to normalize Unicode strings\nhttps://withblue.ink/2019/03/11/why-you-need-to-normalize-unicode-strings.html\n\nJava reference : java.text.Normalizer.Normalize method\nhttps://docs.oracle.com/javase/8/docs/api/java/text/Normalizer.html\n\n.Net reference : String.Normalize method\nhttps://learn.microsoft.com/en-us/dotnet/api/system.string.normalize",
    "remediation": "Assume all input is malicious.\nEnsure that the system is Unicode aware and can properly process Unicode data. Do not make an assumption that data will be in ASCII.\nEnsure that filtering or input validation is applied to canonical data, using normalization methods found in standard libraries.",
    "remediationSample": "public static void main(String[] args) throws Exception\n{\n    String s = java.text.Normalizer.normalize(args[0], java.text.Normalizer.Form.NFKC);    // FIXED: s is normalized\n}",
    "sample": "public static void main(String[] args) throws Exception\n{ \n    String s = args[0];    // VIOLATION: use s without prior normalization\n}",
    "total": "Number of potentially vulnerable methods",
    "alternativeName": "Reports usage of String tainted input before Unicode normalization",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-20",
            "name": "Improper Input Validation",
            "href": "AIP/quality-standards/CWE/items/CWE-20",
            "standard": "CWE"
        },
        {
            "id": "CWE-180",
            "name": "Incorrect Behavior Order: Validate Before Canonicalize",
            "href": "AIP/quality-standards/CWE/items/CWE-180",
            "standard": "CWE"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-10",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "A03-2021",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A03-2021",
            "standard": "OWASP"
        },
        {
            "id": "API8-2019",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/API8-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "STIG-V-222604",
            "name": "The application must protect from command injection.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222604",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
