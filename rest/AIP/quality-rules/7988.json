{
    "id": 7988,
    "type": "quality-rule",
    "name": "Avoid using snprintf() function family",
    "href": "AIP/quality-rules/7988",
    "critical": false,
    "maxWeight": 6,
    "associatedValueName": "Number of violation patterns",
    "description": "This rule searches for C/C++ functions, methods, constructors, and destructors that call the 'snprintf' group of functions.",
    "output": "Associated to each C/C++ function/method/constructor/destructor with violations, the Quality Rule provides:\n- Number of violation patterns\n- Bookmarks for violation patterns found in the source code:\n  - 'snprintf()' functio call",
    "rationale": "The 'snprintf()' function is not a standard function C library (ISO1990, ANSI 1989 standard) and then is difficult to port on different platforms. Different behavior can be encountered:\n- some implementations do not protect against buffer overflows\n- the return value can vary from a system to another\n- the resulting string is not always null-terminated\nThen, it is important to make sure the technical description of the function matches the development expectations and to protect the code properly.",
    "reference": "Build Security In (https://buildsecurityin.us-cert.gov/bsi/articles/knowledge/coding)",
    "remediation": "The main issue with the 'snprintf()' function is about the portability. Even if some implementations of the 'snprintf()' function are safer than the 'sprintf()' function, the best solution would be to check buffer bounds (see rule related to 'sprintf()'function).",
    "remediationSample": "int foo(char *source)\n{\n  int retcode = 1;\n  char target[20];\n  if ( snprintf(target, sizeof(target) - 1, \"%s\", source) > sizeof(target) - 1)\n  {\n    /* Manage buffer overflow situation */\n    retcode = 0;\n  }\n  return retcode;\n}",
    "sample": "void foo(char *source)\n{\n  char target[20];\n  snprintf(target, sizeof(target) - 1, \"%s\", source);\n}",
    "total": "Number of C/C++ functions, constructors, destructors, and methods",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        
    ]
}
