{
    "id": 8408,
    "name": "Avoid reflected cross-site scripting (non persistent)",
    "href": "AIP/quality-rules/8408",
    "critical": true,
    "severity": 30,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.securityanalyzer",
        "href": "AIP/extensions/com.castsoftware.securityanalyzer"
    },
    "associatedValueName": "Call stack from user input source down to the target method",
    "description": "This quality rule identifies code paths where user-controllable input is directly reflected back to the user's browser without proper sanitization or encoding. The rule specifically targets reflected (non-persistent) cross-site scripting vulnerabilities, where malicious scripts are immediately returned in the HTTP response rather than stored on the server.\nUsing static analysis and data-flow tracking, this rule detects dangerous paths from user input sources (HTTP parameters, headers, cookies) to HTML output methods (response writers, direct HTML generation) that lack proper output encoding or input validation.",
    "output": "List all methods that make resource calls forged by user input\n\nIt provides the following information:\n - Method full name\n - Call stack from user input source down to the target method.",
    "rationale": "It creates severe security risks.\nConsequences:\n-Session hijacking: attackers can steal authentication cookies and impersonate users\n-Data theft: sensitive information displayed on the page can be extracted and sent to malicious servers\n-Defacement: page content can be modified to display fraudulent information\n-Credential harvesting: fake login forms can be injected to capture user credentials\n-Malware distribution: users can be redirected to malicious websites or prompted to download malware\n-etc.\nThe vulnerability is particularly dangerous because the malicious code executes with the same privileges as the legitimate website, bypassing browser security controls.",
    "reference": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\nhttps://cwe.mitre.org/data/definitions/79.html\n\nOpen Web Application Security Project (OWASP) \nhttps://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)\n\nOWASP Top 10:2021 - A03:2021 \u2013 Injection\nhttps://owasp.org/Top10/A03_2021-Injection/\n\nCross Site Scripting Prevention Cheat Sheet - Cross Site Scripting Prevention Cheat Sheet\nhttps://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\n\nCISQ rule: ASCSM-CWE-79.",
    "remediation": "To prevent reflected XSS vulnerabilities, implement defense-in-depth strategies:\nPrimary Defense - Output Encoding:\n-Apply context-appropriate encoding to all user data before outputting to HTML\n-Use HTML entity encoding for HTML content\n-Use JavaScript encoding for JavaScript contexts\n-Use URL encoding for URL parameters\nFramework-Specific Recommendations:\n-Use built-in security features provided by your web framework\n-Leverage templating engines with automatic escaping\n-Avoid direct string concatenation for HTML generation",
    "remediationSample": "// ----------------------------------------------------------------------------\n// 1) Java sample\n\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.annotation.WebServlet;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport org.apache.commons.text.StringEscapeUtils;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\n@WebServlet(\"/search\")\npublic class SearchServlet_secure extends HttpServlet {\n  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    String query = request.getParameter(\"q\");\n    response.setContentType(\"text/html\");\n    PrintWriter out = response.getWriter();\n\n    // SECURE: HTML encode user input before output\n    String safeQuery = StringEscapeUtils.escapeHtml4(query);\n    out.println(\"<h2>Search results for: \" + safeQuery + \"</h2>\");\n  }\n}\n\n\n// ----------------------------------------------------------------------------\n// 2) C# sample\n\npublic static void Xss_secure()\n{\n  string userInput = Console.ReadLine();\n  // Encoded using HttpUtility.HtmlEncode\n  Console.WriteLine(\"You entered: \" + HttpUtility.HtmlEncode(userInput));\n}",
    "sample": "// ----------------------------------------------------------------------------\n// 1) Java sample\n\nimport jakarta.servlet.annotation.WebServlet;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\n@WebServlet(\"/search\")\npublic class SearchServlet_unsecure extends HttpServlet {\n  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {\n    String query = request.getParameter(\"q\");\n    response.setContentType(\"text/html\");\n    PrintWriter out = response.getWriter();\n\n    // VULNERABLE: Direct output without encoding\n    out.println(\"<h2>Search results for: \" + query + \"</h2>\");\n  }\n}\n\n// ----------------------------------------------------------------------------\n// 2) C# sample\n\npublic static void Xss_unsecure()\n{\n  string userInput = Console.ReadLine();\n  // VULNERABLE: Direct output without encoding\n  Console.WriteLine(\"You entered: \" + userInput);\n}",
    "total": "Number of potentially vulnerable methods",
    "alternativeName": "Ensure you don't use user input without validation",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062191,
            "name": "ASCSM-CWE-79 - Cross-site Scripting Improper Input Neutralization",
            "href": "AIP/technical-criteria/1062191",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061015,
            "name": "CWE-79 - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/technical-criteria/1061015",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1066179,
            "name": "CWE-79 - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/technical-criteria/1066179",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062303,
            "name": "OWASP-2013-A3 - Cross-Site Scripting (XSS)",
            "href": "AIP/technical-criteria/1062303",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062327,
            "name": "OWASP-2017-A7 - Cross-Site Scripting (XSS)",
            "href": "AIP/technical-criteria/1062327",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062343,
            "name": "OWASP-2021-A03 - Injection",
            "href": "AIP/technical-criteria/1062343",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063121,
            "name": "PCI-Requirement-6.5.7 - Cross-site scripting (XSS)",
            "href": "AIP/technical-criteria/1063121",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "id": "AIP-CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/quality-standards/AIP-STRUCTURAL-FLAW/items/AIP-CWE-79",
            "standard": "AIP-STRUCTURAL-FLAW"
        },
        {
            "id": "ASCSM-CWE-79",
            "name": "Cross-site Scripting Improper Input Neutralization",
            "href": "AIP/quality-standards/CISQ/items/ASCSM-CWE-79",
            "standard": "CISQ"
        },
        {
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/quality-standards/CWE/items/CWE-79",
            "standard": "CWE"
        },
        {
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-79",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-10",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-79",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "href": "AIP/quality-standards/OWASP/items/A3-2013",
            "standard": "OWASP"
        },
        {
            "id": "A7-2017",
            "name": "Cross-Site Scripting (XSS)",
            "href": "AIP/quality-standards/OWASP/items/A7-2017",
            "standard": "OWASP"
        },
        {
            "id": "A03-2021",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A03-2021",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.7",
            "name": "Cross-site scripting (XSS)",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.7",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.7",
            "name": "Cross-site scripting (XSS)",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.7",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        },
        {
            "id": "STIG-V-222602",
            "name": "The application must protect from Cross-Site Scripting (XSS) vulnerabilities.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222602",
            "standard": "STIG-V5"
        },
        {
            "id": "STIG-V-222602",
            "name": "The application must protect from Cross-Site Scripting (XSS) vulnerabilities.",
            "href": "AIP/quality-standards/STIG-V6/items/STIG-V-222602",
            "standard": "STIG-V6"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
