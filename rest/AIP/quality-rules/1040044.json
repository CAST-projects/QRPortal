{
    "id": 1040044,
    "name": "Avoid using UnZipTransformer of spring-integration-zip prior to version 1.0.1",
    "href": "AIP/quality-rules/1040044",
    "critical": true,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check the use of UnZipTransformer transform function provided by spring-integration-zip in versions prior to 1.0.1",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "spring-integration-zip , versions prior to 1.0.1, exposes an arbitrary file write vulnerability, that can be achieved using a specially crafted zip archive (affects other archives as well, bzip2, tar, xz, war, cpio, 7z), that holds path traversal filenames. So when the filename gets concatenated to the target extraction directory, the final path ends up outside of the target folder.\n\nThis specifically applies to the unzip transformer.\n\nThis can only happen if an application using this library accepts and unpacks zip files from untrusted sources.",
    "reference": "https://pivotal.io/security/cve-2018-1261\nhttp://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1261\nhttp://cwe.mitre.org/data/definitions/22.html",
    "remediation": "Upgrade to Spring Integration Zip Community Extension Project version 1.0.1.RELEASE",
    "remediationSample": "import org.springframework.integration.zip.transformer // version 1.0.2\n\npublic final class Main {\n\n   ...\n   UnZipTransformer unZipTransformer = new UnZipTransformer();\n\n   unZipTransformer.transform(message);\n   ...\n}",
    "sample": "import org.springframework.integration.zip.transformer // version 1.0.1\n\npublic final class Main { k\n\n   ...\n   UnZipTransformer unZipTransformer = new UnZipTransformer();\n\n   unZipTransformer.transform(message); // VIOLATION HERE\n   ...\n}",
    "total": "Number of Java Methods having spring-integration-zip version prior to 1.0.1",
    "alternativeName": "Upgrade to the spring-integration-zip version 1.0.2 to unsafe unzip",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1062104,
            "name": "CISQ-Security",
            "href": "AIP/business-criteria/1062104"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061004,
            "name": "ISO-5055-Security",
            "href": "AIP/business-criteria/1061004"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062177,
            "name": "ASCSM-CWE-22 - Path Traversal Improper Input Neutralization",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061010,
            "name": "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062304,
            "name": "OWASP-2013-A4 Insecure Direct Object References",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062325,
            "name": "OWASP-2017-A5 Broken Access Control",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-22",
            "name": "Path Traversal Improper Input Neutralization",
            "url": null,
            "description": "Objective\nAvoid failure to sanitize user input in use in path manipulation operations\n\nConsequence\nSoftware that is unaware of file path control incurs the risk of exposition of sensitive data, the risk of corruption of critical files, such as programs, libraries, or important data used in protection mechanisms\n\nMeasure Element\nNumber of instances where an external value is entered into the application through the user interface ReadsUI action, transformed throughout the application along the sequence composed of ActionElements with DataRelations relations, some of which being part of named callable and method control elements, and ultimately used in the file path creation statement; none of the callable or method control element of the transformation sequence being a vetted sanitization control element from the list of vetted sanitization control elements.\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-22",
            "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
            "url": "https://cwe.mitre.org/data/definitions/22.html",
            "description": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-22",
            "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
            "url": "https://cwe.mitre.org/data/definitions/22.html",
            "description": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-22",
            "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
            "url": "https://cwe.mitre.org/data/definitions/22.html",
            "description": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."
        },
        {
            "standard": "OWASP",
            "id": "A4-2013",
            "name": "Insecure Direct Object References",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References",
            "description": "A direct object reference occurs when a developer exposes a reference to an internal implementation object, such as a file, directory, or database key. Without an access control check or other protection, attackers can manipulate these references to access unauthorized data."
        },
        {
            "standard": "OWASP",
            "id": "A5-2017",
            "name": "Broken Access Control",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A5-Broken_Access_Control",
            "description": "Restrictions on what authenticated users are allowed to do are often not properly enforced. Attackers can exploit these flaws to access unauthorized functionality and/or data, such as access other users' accounts, view sensitive files, modify other users' data, change access rights, etc."
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
