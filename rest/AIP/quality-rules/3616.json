{
    "id": 3616,
    "name": "Data Access must be based on Stored Procedure Calls",
    "href": "AIP/quality-rules/3616",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Accessed SQL object",
    "description": "Data Access must be based on Stored Procedure Calls.",
    "output": "This report lists all Dynamic SQL\nIt provides the following information: Object full name",
    "rationale": "By using Stored Procedures the database engine is more able to optimize the access plan and to reuse them. It also limits the parsing phase of the SQL order. This generally results in better performance.\nFrom a security point of view, it is generally safer to use SP that do not use dynamic SQL rather than dynamic SQL, as this limits the risk of SQL-injection.",
    "remediation": "Transform the SQL into a SP and use parameters. Then call the SP.\nDo not transform the SQL in a SP that in turn uses dynamic SQL (e.g. @exec or EXECUTE_IMMEDIATE) as this deny all the benefits of the change.",
    "remediationSample": "class MyClass\n{\n   public void fct( String sVal )\n   {\n      exec \"MySP +sVal\"\n   }",
    "sample": "class MyClass\n{\n   private String s = \"select col1from MyTable where col2 =\";\n   public void fct( String sVal )\n   {\n      s +=  \"'\" + sVal + \"'\"; \n      exec s;\n   }",
    "total": "Total number of artifacts accessing the database",
    "alternativeName": "Data Access must be based on Stored Procedure Calls",
    "businessCriteria": [
        {
            "id": 66032,
            "name": "Architectural Design",
            "href": "AIP/business-criteria/66032"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61001,
            "name": "Architecture - Multi-Layers and Data Access",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCMM-MNT-12",
            "name": "Named Callable and Method Control Element with Layer-skipping Call",
            "url": null,
            "description": null
        },
        {
            "standard": "CISQ",
            "id": "ASCPEM-PRF-10",
            "name": "Non-SQL Named Callable and Method Control Element with Excessive Number of Data Resource Access",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-1054",
            "name": "Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-1073",
            "name": "Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses",
            "url": null,
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-1054",
            "name": "Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer",
            "url": null,
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-1073",
            "name": "Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
