{
    "id": 1060110,
    "name": "Avoid filtering sensitive data using front-end",
    "href": "AIP/quality-rules/1060110",
    "critical": false,
    "maxWeight": 7,
    "description": "The rule will raise a violation if user-defined sensitive data is called by a API request and uses front-end to filter data",
    "output": "All Jquery selectors and HTML functions with a name like %filter% that Access sensitive data via APIs. The following information will be provided:\n- Jquery Selector or HTML function",
    "rationale": "APIs rely on clients to perform data filtering. Since APIs are used as data sources, sometimes developers try to implement them in a generic way without thinking about the sensitivity of the exposed data.\n\nWhen you rely on the front-end for filtering sensitive data there is an underlying API that is returning all the data, which may be more than needed. This helps the attacker to understand the schema or intercept data that they are not intended to know.",
    "reference": "https://github.com/OWASP/API-Security/blob/master/2019/en/src/0xa3-excessive-data-exposure.md",
    "remediation": "Never rely on the client side to filter sensitive data.",
    "total": "All Jquery selectors and HTML functions with name like %filter%",
    "alternativeName": "Avoid filtering sensitive data using front-end",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-201",
            "name": "Insertion of Sensitive Information Into Sent Data",
            "url": "https://cwe.mitre.org/data/definitions/201.html",
            "description": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor."
        },
        {
            "standard": "CWE",
            "id": "CWE-213",
            "name": "Exposure of Sensitive Information Due to Incompatible Policies",
            "url": "https://cwe.mitre.org/data/definitions/213.html",
            "description": "The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed."
        },
        {
            "standard": "CWE",
            "id": "CWE-359",
            "name": "Exposure of Private Personal Information to an Unauthorized Actor",
            "url": "https://cwe.mitre.org/data/definitions/359.html",
            "description": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected."
        },
        {
            "standard": "OWASP",
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure",
            "description": "Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser."
        },
        {
            "standard": "OWASP",
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure",
            "description": "Many web applications do not properly protect sensitive data, such as credit cards, tax IDs, and authentication credentials. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data deserves extra protection such as encryption at rest or in transit, as well as special precautions when exchanged with the browser."
        },
        {
            "standard": "OWASP",
            "id": "API3-2019",
            "name": "Excessive Data Exposure",
            "url": null,
            "description": "Looking forward to generic implementations, developers tend to expose all object properties without considering their individual sensitivity, relying on clients to perform the data filtering before displaying it to the user."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
