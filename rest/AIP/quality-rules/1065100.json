{
    "id": 1065100,
    "name": "Avoid move constructor and move assignment operator to exit with an exception",
    "href": "AIP/quality-rules/1065100",
    "critical": false,
    "severity": 10,
    "maxWeight": 3,
    "extension": {
        "name": "com.castsoftware.cpp",
        "href": "AIP/extensions/com.castsoftware.cpp"
    },
    "description": "The rule will raise a violation when a move constructor or move assignment operator does not declare itself noexcept",
    "rationale": "Move constructor and move assignment operator are intended to be noexcept. If they throw exceptions, strong exception safety can not be guaranteed, because the original type values could be already modified or partially modified.",
    "reference": "AUTOSAR 2014 C++, A15-5-1: A class destructor, \u201cdelete\u201d operators, move constructor, move assignment operator and \u201cswap\u201d function shall not exit with an exception. They shall be all specified as \u201cnoexcept\u201d.",
    "remediation": "DEclare them as noexcept",
    "remediationSample": "#include <stdexcept>\nclass C1\n{\npublic:\nC1() = default;\nC1(C1&& rhs)\nnoexcept // Compliant - move constructor declared to be noexcept\n{\n }\n C1& operator=(C1&& rhs) noexcept // Compliant - move assignment operator\n // declared to be noexcept\n {\n return *this;\n }",
    "sample": "class C3\n {\n public:\n C3() = default;\n C3(C3&& rhs) // Non-compliant - move constructor throws\n {\n // ...\n throw std::runtime_error(\"Error\");\n }\n C3& operator=(C3&& rhs) // Non-compliant - move assignment operator throws\n {\n // ...\n throw std::runtime_error(\"Error\");\n return *this;",
    "alternativeName": "Avoid move constructor and move assignment operator to exit with an exception",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 3,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "AUTOSAR-CPP-2014-Exceptions",
            "name": "Exceptions",
            "href": "AIP/quality-standards/C-CPP/items/AUTOSAR-CPP-2014-Exceptions",
            "standard": "C-CPP"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-11",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
