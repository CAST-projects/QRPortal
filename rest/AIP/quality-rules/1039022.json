{
    "id": 1039022,
    "name": "Avoid using Insecure PBE Iteration Count",
    "href": "AIP/quality-rules/1039022",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "The iteration count used by a password-based key derivation function should not be too low to decrease attack possibilities.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "An iteration count has traditionally served the purpose of increasing the cost of producing keys from a password,     thereby also increasing the difficulty of attack. According to PKCS #5: Password-Based Cryptography Specification,         Version 2.0, a minimum of 1000 iterations is recommended. This will increase the cost of exhaustive search for passwords significantly, without a noticeable impact in the cost of deriving individual keys.",
    "reference": "https://cwe.mitre.org/data/definitions/916.html \nhttps://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure \nhttps://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nThis rule is compliant with: \nCWE-916: Use of Password Hash With Insufficient Computational Effort \nOWASP Top 10 2013 A6 Sensitive Data Exposure \nOWASP Top 10 2017 A3 Sensitive Data Exposure",
    "remediation": "According to PKCS #5: Password-Based Cryptography Specification, Version 2.0, a minimum of 1000 iterations is recommended.",
    "remediationSample": "An iteration count is greater or equal to 1000",
    "sample": "int iterationCount = 10; \n    PBEParameterSpec pbeps = new PBEParameterSpec(salt, iterationCount);",
    "total": "Number of Java artifacts",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-916",
            "name": "Use of Password Hash With Insufficient Computational Effort",
            "url": "https://cwe.mitre.org/data/definitions/916.html",
            "description": "The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive."
        },
        {
            "standard": "OWASP",
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure",
            "description": "Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser."
        },
        {
            "standard": "OWASP",
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure",
            "description": "Many web applications do not properly protect sensitive data, such as credit cards, tax IDs, and authentication credentials. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data deserves extra protection such as encryption at rest or in transit, as well as special precautions when exchanged with the browser."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
