{
    "id": 1019002,
    "name": "Avoid using debug information in production environment",
    "href": "AIP/quality-rules/1019002",
    "critical": false,
    "maxWeight": 5,
    "description": "This rule will violate if debug information is included in the defaults. Please make sure to exclude it before deployment.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Attackers can leverage the additional information they gain from debugging output to mount attacks targeted on the framework or other resources used by the application.\nSetting IncludeExceptionDetailInFaults to true enables clients to obtain information about internal service method exceptions; it is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the FaultException<TDetail> of type ExceptionDetail. Clients must expect the possibility of an unknown SOAP fault to obtain the debugging information properly.",
    "reference": "CWE-215 : http://cwe.mitre.org/data/definitions/215.html\n\nhttps://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.servicebehaviorattribute.includeexceptiondetailinfaults?view=netframework-4.8",
    "remediation": "Set the includeExceptionDetailInFaults to False",
    "remediationSample": "Remediation in Config File:\n\n<serviceDebug includeExceptionDetailInFaults=\"false\" httpHelpPageEnabled=\"True\"/> // Fixed\n\n___________________________________________\n\nRemediation in source Code:\nServiceHost host = new ServiceHost(typeof(MyWCFService));\n\nServiceDebugBehavior debug = host.Description.Behaviors.Find<ServiceDebugBehavior>();\n\n// if not found - add behavior with setting turned on \nif (debug == null)\n{\n    host.Description.Behaviors.Add(\n         new ServiceDebugBehavior() { IncludeExceptionDetailInFaults = false }); //Fixed\n}\nelse\n{  \n    // make sure setting is turned ON\n    if (!debug.IncludeExceptionDetailInFaults)\n    {\n        debug.IncludeExceptionDetailInFaults = false; //Fixed\n    }\n}\n\nhost.Open();\n....\n[ServiceBehavior(ConcurrencyMode = ConcurrencyMode.Single,InstanceContextMode = InstanceContextMode.Single,IncludeExceptionDetailInFaults=false)]",
    "sample": "Sample in the config file \n\n<configuration>  \n<system.serviceModel>    \n<behaviors><serviceBehaviors>        \n<behavior name=\"MyServiceBehavior\">          \n<serviceDebug includeExceptionDetailInFaults=\"true\" httpHelpPageEnabled=\"True\"/>\n..\n..\n</configuration>\n\n_____________________________________________________\n\nSample in Source Code(Non-IIS Hosting Scenarios):\nServiceHost host = new ServiceHost(typeof(MyWCFService));\n\nServiceDebugBehavior debug = host.Description.Behaviors.Find<ServiceDebugBehavior>();\n\nif (debug == null)\n{\n    host.Description.Behaviors.Add(\n         new ServiceDebugBehavior() { IncludeExceptionDetailInFaults = true }); // Violation\n}\nelse\n{  \n    if (!debug.IncludeExceptionDetailInFaults)\n    {\n        debug.IncludeExceptionDetailInFaults = true; //Violation\n    }\n}\n\nhost.Open();\n....\n[ServiceBehavior(ConcurrencyMode = ConcurrencyMode.Single,InstanceContextMode = InstanceContextMode.Single,IncludeExceptionDetailInFaults=true)]",
    "total": "Number of WCF configurations",
    "alternativeName": "Avoid using debug information in production environment",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1019000,
            "name": "WCF",
            "href": "AIP/technologies/1019000"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
