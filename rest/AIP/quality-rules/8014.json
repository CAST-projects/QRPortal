{
    "id": 8014,
    "name": "Avoid unchecked return code (SY-SUBRC) after AUTHORITY-CHECK",
    "href": "AIP/quality-rules/8014",
    "critical": true,
    "associatedValueName": "Number of violation patterns",
    "description": "This rule searches in ABAP code for AUTHORITY-CHECK declarations that are not followed by a test of SY-SUBC system field.\n    The rule takes in account the following cases:\n- Use of a temporary variable\n\nAUTHORITY-CHECK OBJECT 'F_BKPF_BUK'\n    ID 'BUKRS' FIELD p_bukrs\n    ID 'ACTVT' FIELD p_actvt.\n\nTmp = SY-SUBRC.\n\nIF Tmp NE 0.\n    list of statements\nEND-IF.\n\n- Use of WRITE statement before return code checking\n\nAUTHORITY-CHECK OBJECT 'F_BKPF_BUK'\n    ID 'BUKRS' FIELD p_bukrs\n    ID 'ACTVT' FIELD p_actvt.\n    \nWRITE: / Do some testing.\n\nIF SUBRC NE 0.\n    list of statements\nEND-IF.\n",
    "output": "Associated to each ABAP Artifact with violations, the Quality Rule provides:\n- The number of violation patterns",
    "rationale": "The AUTHORITY-CHECK object allows to verify if user who wants to execute a program has sufficient rights. If yes, then the object sets the SY-SUBRC system field to 0. Otherwise it sets a non 0 value in this system field. Not testing the SY-SUBRC system field means that the AUTHORITY-CHECK object declaration has no effect.\nFor security reason, the return code associated to AUTHORITY-CHECK object must be taken into account, especially if the value is not equal to 0.",
    "reference": "SAP",
    "remediation": "Add a test of the SY-SUBRC return code after each AUTHORITY-CHECK object and manage values that are not equal to 0.",
    "remediationSample": "AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'\n    ID 'BUKRS' FIELD p_bukrs\n    ID 'ACTVT' FIELD p_actvt.\n\nIF SY-SUBRC NE '0'.\n    MESSAGE e000(38) WITH text-e01 p_bukrs.\nENDIF.\n\n<list of statements>",
    "sample": "AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'\n    ID 'BUKRS' FIELD p_bukrs\n    ID 'ACTVT' FIELD p_actvt.\n\n<list of statements>",
    "total": "Number of ABAP Artifacts",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": -15,
            "name": "ABAP",
            "href": "AIP/technologies/-15"
        }
    ],
    "qualityStandards": [
        {
            "standard": "AIP",
            "id": "AIP-HA-INTERNAL",
            "name": "HA - internal failure mitigation",
            "url": "",
            "description": "Quality rules related to the presence of occurrences of structural coding patterns that are known to cause functional failures"
        }
    ]
}
