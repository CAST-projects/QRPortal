{
    "id": 8132,
    "name": "Avoid using CHECK, EXIT,or RETURN in SELECT ... ENDSELECT loops",
    "href": "AIP/quality-rules/8132",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule searches for artifacts implementing subsequent local conditions in SELECT..ENDSELECT loops.\nNote: The rule is applicable in SAP HANA context.",
    "output": "Associated to each ABAP artifact in violation, the Quality Rule provides: \n- Bookmarks for violation occurrences found in source code",
    "rationale": "For systems running on HANA, SAP recommends to keep the result sets small. Test executed by statements like CHECK are done locally to the client code and unnecessary data is transferred by the SELECT..ENDSELECT loop.\nVery often, you may want to determine in a program whether at least one record exists in a database table for a particular WHERE condition. For this purpose, however, empty SELECT...ENDSELECT loops (or those that only have one EXIT statement) should not be used.\nParticularly in the case of non-buffered tables or wherever the statement bypasses the buffering, this is a very low-performing solution. The reason is that, in the case of a SELECT...ENDSELECT statement, the data is not read from the database record by record, but is read in larger blocks.\nAlso, the use of EXIT or RETURN in a SELECT...ENDSELECT loop for another purpose is often questionable since the processing sequence of the database records in a SELECT...ENDSELECT loop without the addition ORDER BY is accidental.\nIn both cases much too much data is read from the database!",
    "reference": "SAP - Considerations for Custom ABAP Code When Migrating to SAP HANA - Best Practices and Recommendations",
    "remediation": "If only the existence (at least) of one record is to be checked, it is recommended to use the addition 'UP TO 1 ROWS', or reading the database with 'SELECT SINGLE'. Both solutions have the effect that only one record is read from the database. This also applies if only some subfields instead of the entire record need to be read.",
    "remediationSample": "SELECT SINGLE *\nFROM sflight\nINTO ls_flight\nWHERE carrid EQ lv_carrid AND connid EQ lv_connid AND fldate EQ lv_fldate.\nIF sy-subrc NE 0.\nWRITE:/ 'NOT FOUND'.\nENDIF.",
    "sample": "SELECT *\nFROM sflight\nINTO ls_flight\nWHERE carrid EQ lv_carrid AND connid EQ lv_connid AND fldate EQ lv_fldate.\nEXIT.\nENDSELECT.\nIF sy-subrc NE 0.\nWRITE:/ 'NOT FOUND'.\nENDIF.",
    "total": "Number of ABAP Artifacts containing OpenSQL statements",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61019,
            "name": "Efficiency - SQL and Data Handling Performance",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": -15,
            "name": "ABAP",
            "href": "AIP/technologies/-15"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
