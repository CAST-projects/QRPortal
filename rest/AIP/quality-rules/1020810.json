{
    "id": 1020810,
    "name": "Avoid bypassing angular security trust ",
    "href": "AIP/quality-rules/1020810",
    "critical": true,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "Angular includes a DomSanitizer help which prevents Cross Site Scripting Security bugs (XSS) by sanitizing values to be safe to use in the different DOM contexts. But a user can disable the built-in sanitization by calling bypassSecurityTrust... APIs. That's why using these method can introduce a security risk.\n\nthis rule checks that users cannot add unchecked HTML string. It helps detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "XSS flaws occur whenever an application includes untrusted data in a new web page without proper validation or escaping, or updates an existing web page with user-supplied data using a browser API that can create HTML or JavaScript. XSS allows attackers to execute scripts in the victim's browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites.",
    "reference": "CISQ OMG ASCSM-CWE-79, OWASP 2013 A3, 2017 A7 recommendations,  https://angular.io/api/platform-browser/DomSanitizer",
    "remediation": "Avoid using the methods bypassSecurityTrustHtml, bypassSecurityTrustStyle, bypassSecurityTrustScript, bypassSecurityTrustUrl, bypassSecurityTrustResourceUrl .",
    "remediationSample": "@Component({ \n  selector: 'my-app', \n  template: ` \n    <div [innerHtml]=\"html\"></div> \n  `, \n}) \nexport class App { \n  constructor() { \n    this.html = \"<h1>DomSanitizer</h1><script>attackerCode()</script>\" \n  } \n}",
    "sample": "import {BrowserModule, DomSanitizer} from '@angular/platform-browser'\n@Component({ \n  selector: 'my-app', \n  template: ` \n     <div [innerHtml]=\"html\"></div> \n  `, \n}) \nexport class App { \n  constructor(private sanitizer: DomSanitizer) { \n    this.html = sanitizer.bypassSecurityTrustHtml('<h1>DomSanitizer</h1><script>ourSafeCode()</script>') ; \n  } \n}",
    "total": "Number of Typescript artifacts",
    "alternativeName": "Ensure not adding unchecked HTML by not using one of these methods: bypassSecurityTrustHtml, bypassSecurityTrustStyle, bypassSecurityTrustScript, bypassSecurityTrustUrl, bypassSecurityTrustResourceUrl",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1062104,
            "name": "CISQ-Security",
            "href": "AIP/business-criteria/1062104"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061004,
            "name": "ISO-5055-Security",
            "href": "AIP/business-criteria/1061004"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062191,
            "name": "ASCSM-CWE-79 - Cross-site Scripting Improper Input Neutralization",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061015,
            "name": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062303,
            "name": "OWASP-2013-A3 Cross-Site Scripting (XSS)",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062327,
            "name": "OWASP-2017-A7 Cross-Site Scripting (XSS)",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCSM-CWE-79",
            "name": "Cross-site Scripting Improper Input Neutralization",
            "href": "AIP/quality-standards/CISQ/items/ASCSM-CWE-79",
            "standard": "CISQ"
        },
        {
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/quality-standards/CWE/items/CWE-79",
            "standard": "CWE"
        },
        {
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-79",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-79",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "href": "AIP/quality-standards/OWASP/items/A3-2013",
            "standard": "OWASP"
        },
        {
            "id": "A7-2017",
            "name": "Cross-Site Scripting (XSS)",
            "href": "AIP/quality-standards/OWASP/items/A7-2017",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.7",
            "name": "  Cross-site scripting (XSS)",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.7",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.7",
            "name": "  Cross-site scripting (XSS)",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.7",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "STIG-V-70257",
            "name": "The application must protect from Cross-Site Scripting (XSS) vulnerabilities.",
            "href": "AIP/quality-standards/STIG-V4R8/items/STIG-V-70257",
            "standard": "STIG-V4R8"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
