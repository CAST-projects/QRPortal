{
    "id": 1060114,
    "name": "Always enable authorization checks at function level for functions called on by APIs",
    "href": "AIP/quality-rules/1060114",
    "critical": true,
    "maxWeight": 9,
    "description": "The rule will raise a violation when it finds functions that are called by APIs to perform actions, if they do not implement any form of authorization check.",
    "output": "APIs calling functions that do not impose any authorization checks.",
    "rationale": "Exploitation requires the attacker to send legitimate API calls to the API endpoint that they should not have access to. These endpoints might be exposed to anonymous users or regular, non-privileged users. It\u2019s easier to discover these flaws in APIs since APIs are more structured, and the way to access certain functions is more predictable (e.g., replacing the HTTP method from GET to PUT, or changing the \u201cusers\u201d string in the URL to \"admins\").\nWhen defining APIs inside controllers and the methods called on by APIs to perform certain tasks it is important to restrict the user(authenticated or otherwise) based on her role.",
    "reference": "https://github.com/OWASP/API-Security/blob/master/2019/en/src/0xa5-broken-function-level-authorization.md",
    "remediation": "Review your API endpoints against function level authorization flaws, while keeping in mind the business logic of the application and groups hierarchy.\nPut restrictions on actions like Delete, Put after reviewing the context thoroughly.",
    "total": "All APIs",
    "alternativeName": "Always enable authorization checks at function level for functions called on by APIs",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061002,
            "name": "ISO-5055-Performance-Efficiency",
            "href": "AIP/business-criteria/1061002"
        },
        {
            "id": 1061003,
            "name": "ISO-5055-Reliability",
            "href": "AIP/business-criteria/1061003"
        },
        {
            "id": 1061004,
            "name": "ISO-5055-Security",
            "href": "AIP/business-criteria/1061004"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1061049,
            "name": "CWE-424: Improper Protection of Alternate Path",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-269",
            "name": "Improper Privilege Management",
            "url": "https://cwe.mitre.org/data/definitions/269.html",
            "description": "The software does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor."
        },
        {
            "standard": "CWE",
            "id": "CWE-285",
            "name": "Improper Authorization",
            "url": "https://cwe.mitre.org/data/definitions/285.html",
            "description": "The software does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action."
        },
        {
            "standard": "CWE",
            "id": "CWE-424",
            "name": "Improper Protection of Alternate Path",
            "url": "https://cwe.mitre.org/data/definitions/424.html",
            "description": "The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources."
        },
        {
            "standard": "CWE",
            "id": "CWE-862",
            "name": "Missing Authorization",
            "url": "https://cwe.mitre.org/data/definitions/862.html",
            "description": "The software does not perform an authorization check when an actor attempts to access a resource or perform an action."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-424",
            "name": "Improper Protection of Alternate Path",
            "url": "https://cwe.mitre.org/data/definitions/424.html",
            "description": "The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources."
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-AC-3",
            "name": "Access Enforcement",
            "url": "https://nvd.nist.gov/800-53/Rev4/control/AC-3",
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-424",
            "name": "Improper Protection of Alternate Path",
            "url": "https://cwe.mitre.org/data/definitions/424.html",
            "description": "The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources."
        },
        {
            "standard": "OWASP",
            "id": "A5-2017",
            "name": "Broken Access Control",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A5-Broken_Access_Control",
            "description": "Restrictions on what authenticated users are allowed to do are often not properly enforced. Attackers can exploit these flaws to access unauthorized functionality and/or data, such as access other users' accounts, view sensitive files, modify other users' data, change access rights, etc."
        },
        {
            "standard": "OWASP",
            "id": "A7-2013",
            "name": "Missing Function Level Access Control",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control",
            "description": "Most web applications verify function level access rights before making that functionality visible in the UI. However, applications need to perform the same access control checks on the server when each function is accessed. If requests are not verified, attackers will be able to forge requests in order to access functionality without proper authorization."
        },
        {
            "standard": "OWASP",
            "id": "API5-2019",
            "name": "Broken Function Level Authorization",
            "url": null,
            "description": "Complex access control policies with different hierarchies, groups, and roles, and an unclear separation between administrative and regular functions, tend to lead to authorization flaws. By exploiting these issues, attackers gain access to other users\u2019 resources and/or administrative functions."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
