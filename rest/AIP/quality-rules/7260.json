{
    "id": 7260,
    "name": "User Interface elements must not use directly the database",
    "href": "AIP/quality-rules/7260",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Associated Value",
    "description": "List all the artifacts belonging to User Interface classes that are using directly objects from the database.\nUser Interface classes are classes belonging to User Interface namespaces such as WinForms or namespaces used for web pages implementation. \nThe list of these namespaces are parameters of the quality rule.",
    "output": "List all artifacts belonging to one of the namespaces given as a parameter (or to sub namespaces) and that access a database object (either with code or in a property).\nDisplay the artifact full name and the database object used.",
    "rationale": "Direct access to the database from the User Interface does not respect the multi-layer architecture principles making the application more difficult to change.\nFurthermore, accessing database elements directly from the User Interface prevents access control at the database level . E.g.: use of non-optimized query against the database and can be the source of performance issue.",
    "sample": "public partial class Form1 : Form // Form is in one of the namespaces for GUI\n    {\n\n        private void Form1_Load(object sender, EventArgs e)\n        {\n            SqlConnection myConnection = new SqlConnection(myConnectionString);\n            SqlCommand myCommand = new SqlCommand(mySelectQuery, myConnection); // access to the DB => VIOLATION\n            myConnection.Open();\n            SqlDataReader myReader = myCommand.ExecuteReader(CommandBehavior.CloseConnection);\n            while (myReader.Read())\n            {\n                Console.WriteLine(myReader.GetString(0));\n            }\n            myReader.Close();\n\n        }",
    "total": "All artifacts",
    "businessCriteria": [
        {
            "id": 66032,
            "name": "Architectural Design",
            "href": "AIP/business-criteria/66032"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61001,
            "name": "Architecture - Multi-Layers and Data Access",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 141901,
            "name": ".NET (Legacy Analyzer)",
            "href": "AIP/technologies/141901"
        },
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        {
            "name": "namespace",
            "description": "List of namespace",
            "technologies": [
                {
                    "id": 0,
                    "name": "ALL TECHNOLOGIES",
                    "href": "AIP/technologies/0",
                    "values": [
                        "System.Web.UI",
                        "System.Windows.Forms"
                    ]
                }
            ]
        }
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
