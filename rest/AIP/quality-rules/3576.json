{
    "id": 3576,
    "name": "Avoid declaring public Fields",
    "href": "AIP/quality-rules/3576",
    "critical": true,
    "description": "Public Fields (defined in a class) should not be used. Const or readonly fields are excluded from the violations.",
    "output": "This report lists all Public Fields (that are not const or readonly). It provides the following information: Field full name",
    "rationale": "Public Fields can be accessed by any other Class, therefore its value can be modified at any time, without control by the Class itself. In addition, direct use of Public Fields does not let Field definition evolve without requiring updates to all Objects referencing it. This goes against OO Encapsulation concepts.",
    "reference": "CISQ rule: ASCMM-MNT-15.",
    "remediation": "Use Properties instead of Public Fields. Note that in VS.Net you can use the refactor command to do that. Use of const or readonly is tolerated.",
    "remediationSample": "// C# Sample\nclass MyClass \n{\n     private int iMyField;\n\n     public int IMyField\n     {\n          get { return iMyField; }\n          set { iMyField = value; }\n     }\n}",
    "sample": "// C# Sample\nclass MyClass \n{\n    public int m_iMyField;\n}",
    "total": "Total number of fields",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61020,
            "name": "Programming Practices - Modularity and OO Encapsulation Conformity",
            "weight": 7,
            "critical": true
        },
        {
            "id": 66066,
            "name": "Secure Coding - Encapsulation",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 141901,
            "name": ".NET (Legacy Analyzer)",
            "href": "AIP/technologies/141901"
        },
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCMM-MNT-15",
            "name": "Public Member Element",
            "url": null,
            "description": "Objective\nAvoid openly accessible data elements\n\nConsequence\nSoftware that does not follow the principles of data encapsulation incurs the risk of data corruption\n\nMeasure Element\nNumber of instances where a storable data element or member data element is declared as public through a Create action\n\n"
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70385",
            "name": "The application development team must follow a set of coding standards.",
            "url": null,
            "description": "Coding standards are guidelines established by the development team or individual developers that recommend programming style, practices and methods.  The coding standards employed will vary based upon the programming language that is being used to develop the application and the development team.\n\nCoding standards often cover the use of white space characters, variable naming conventions, function naming conventions, and comment styles.  Implementing coding standards provides many benefits to the development process.  These benefits include code readability, coding consistency among both individual and teams of developers as well as ease of code integration.  \n\nThe following are examples of what will typically be in a coding standards document.  This list is an example of what one can expect to find in typical coding standard documents and is not a comprehensive list:\n\n- Indent style conventions\n- Naming conventions\n- Line length conventions\n- Comment conventions\n- Programming best practices\n- Programming style conventions\n\nCoding standards allow developers to quickly adapt to code which has been developed by various members of a development team.  Coding standards are useful in the code review process as well as in situations where a team member leaves and duties must then be assigned to another team member.  \n\nCode conforming to a standard format is easier to read, especially if someone other than the original developer is examining the code.  In addition, formatted code can be debugged and corrected faster than unformatted code.\n\nIntroducing coding standards can help increase the consistency, reliability, and security of the application by ensuring common programming structures and tasks are handled by similar methods, as well as, reducing the occurrence of common logic errors."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
