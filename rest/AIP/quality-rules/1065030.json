{
    "id": 1065030,
    "name": "All if \u2026 else if constructs shall be terminated with an else clause (C/C++)",
    "href": "AIP/quality-rules/1065030",
    "critical": false,
    "severity": 10,
    "maxWeight": 1,
    "extension": {
        "name": "com.castsoftware.cpp",
        "href": "AIP/extensions/com.castsoftware.cpp"
    },
    "description": "This rule raises a violation when an \"if..else if\" construct does not terminate with an else statement.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "When an if statement is followed by one or more else if statements then the final else if, shall be followed by an else statement. In the case of a simple if statement the else statement need not be included. The final else statement, which should either take appropriate action or contain a suitable comment as to why no action is taken, is defensive programming.",
    "reference": "Standards Reference:\nMISRA C++ 2008, Rule 6\u20134\u20132: All if \u2026 else if constructs shall be terminated with an else clause.",
    "remediation": "Ensure logical completeness by using else block at the end of \"if...else if\" construct",
    "remediationSample": "if ( x < 0 )\n{\nlog_error ( 3 );\nx = 0;\n}\nelse if ( y < 0 )\n{\nx = 3;\n}\nelse // this else clause is required, even if the\n{ // developer expects this will never be reached\n// No change in value of x\n}",
    "sample": "if ( x < 0 )\n{\nlog_error ( 3 );\nx = 0;\n}\nelse if ( y < 0 )\n{\nx = 3;\n}\n}",
    "total": "All C++ methods and functions",
    "alternativeName": "All if \u2026 else if constructs shall be terminated with an else clause (C/C++)",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness",
            "href": "AIP/technical-criteria/61024",
            "weight": 1,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "AUTOSAR-CPP-2014-Statements",
            "name": "Statements",
            "href": "AIP/quality-standards/C-CPP/items/AUTOSAR-CPP-2014-Statements",
            "standard": "C-CPP"
        },
        {
            "id": "MISRA-CPP-2008-Statements",
            "name": "Statements",
            "href": "AIP/quality-standards/C-CPP/items/MISRA-CPP-2008-Statements",
            "standard": "C-CPP"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        10.0,
        70.0,
        90.0,
        99.0
    ]
}
