{
    "id": 1020780,
    "name": "Avoid using Node.js synchronous FileSystem API without try/catch block",
    "href": "AIP/quality-rules/1020780",
    "critical": false,
    "severity": 10,
    "maxWeight": 7,
    "extension": {
        "name": "com.castsoftware.nodejs",
        "href": "AIP/extensions/com.castsoftware.nodejs"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check all the methods with Sync prefix not used  within a try/catch block",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "To better handle errors coming from synchronous method call, you must ensure to handle these FileSystem methods using try/catch blocks.",
    "reference": "https://nodejs.org/api/fs.html#fs_file_system",
    "remediation": "Add a try/catch block.",
    "remediationSample": "// remediation\nconst fs = require('fs');\ntry {\n   fs.unlinkSync('/tmp/hello');\n   console.log('successfully deleted /tmp/hello');\n} catch (err) {\n   // handle the error\n}",
    "sample": "// remediation\nconst fs = require('fs');\n\nfs.unlinkSync('/tmp/hello'); // not sure if we are successfull or not",
    "total": "Number of function using ...",
    "alternativeName": "Ensure you call synchronous FileSystem API inside a try/catch block to manage errors.",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1063119,
            "name": "PCI-Requirement-6.5.5 - Improper error handling",
            "href": "AIP/technical-criteria/1063119",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-11",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
