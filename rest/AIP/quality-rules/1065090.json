{
    "id": 1065090,
    "name": "Avoid using 'enum' types as operands for arithmetic contexts",
    "href": "AIP/quality-rules/1065090",
    "critical": false,
    "maxWeight": 2,
    "description": "The rule will raise a violation when enums are used with arithmetic operators",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Enumerations have implementation-defined representation and so should not be used in arithmetic contexts.",
    "reference": "MISRA CPP 2008, 4-5-2: Expressions with type enum shall not be used as operands to built-in operators other than the subscript operator [ ], the assignment operator =, the equality operators == and !=, the unary & operator, and the relational operators <, <=, >, >=.",
    "remediation": "Use Enum types with: the subscript operator [ ], the assignment operator =, the equality operators == and !=, the unary & operator, and the relational operators <, <=, >, >=",
    "remediationSample": "enum { COLOUR_0, COLOUR_1, COLOUR_2, COLOUR_COUNT } colour;\nif ( COLOUR_0 == colour ) // Compliant\nif ( colour < COLOUR_COUNT ) // Compliant",
    "sample": "enum { COLOUR_0, COLOUR_1, COLOUR_2, COLOUR_COUNT } colour;\n\nif ( ( COLOUR_0 + COLOUR_1 ) == colour ) // Non-compliant",
    "total": "Number of C / C++ methods and functions",
    "alternativeName": "Ensure that you use 'enum' types with  [ ], =, == and !=, the unary & operator, and <, <=, >, >=.",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61009,
            "name": "Complexity - Algorithmic and Control Structure Complexity",
            "weight": 2,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "standard": "C-CPP",
            "id": "MISRA-CPP-2008-Standards-Conversion",
            "name": "Standards Conversion",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
