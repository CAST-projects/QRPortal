{
    "id": 1020202,
    "name": "Avoid getter functions of computed properties that do not return any value",
    "href": "AIP/quality-rules/1020202",
    "critical": false,
    "maxWeight": 5,
    "description": "The rule will raise a violation when get() function does not return a value",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Not returning value from a getter function can result in data corruption and incorrect behavior",
    "reference": "https://vuejs.org/v2/guide/computed.html#Computed-Properties",
    "remediation": "Ensure to return a value",
    "remediationSample": "new Vue({\n  el: '#app',\n  template: '<div>{{ prevYear}} {{ nextYear }}</div>',\n  data: {\n    currentYear: new Date().getFullYear()\n  },\n  computed: {\n    prevYear() {\n      return this.currentYear - 1;\n    },\n    nextYear: {\n      get() {\n        return this.currentYear + 1;\n      },\n      set(nextYear) {\n        this.currentYear = nextYear - 1;\n      }\n    }\n  }\n});",
    "sample": "new Vue({\n  el: '#app',\n  template: '<div>{{ prevYear}} {{ nextYear }}</div>',\n  data: {\n    currentYear: new Date().getFullYear()\n  },\n  computed: {\n    prevYear() { \n      this.currentYear - 1;\n    },\n    nextYear: {\n      get() { // VIOLATION\n        this.currentYear + 1;\n      },\n      set(nextYear) {\n        this.currentYear = nextYear - 1;\n      }\n    }\n  }\n});",
    "total": "Number of VueJS components",
    "alternativeName": "Ensure get() function always return a value",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
