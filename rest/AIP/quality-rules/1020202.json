{
    "id": 1020202,
    "name": "Avoid getter functions of computed properties that do not return any value",
    "href": "AIP/quality-rules/1020202",
    "critical": false,
    "severity": 10,
    "maxWeight": 5,
    "extension": {
        "name": "com.castsoftware.vuejs",
        "href": "AIP/extensions/com.castsoftware.vuejs"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "The rule will raise a violation when get() function does not return a value",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Not returning value from a getter function can result in data corruption and incorrect behavior",
    "reference": "https://vuejs.org/v2/guide/computed.html#Computed-Properties",
    "remediation": "Ensure to return a value",
    "remediationSample": "new Vue({\n  el: '#app',\n  template: '<div>{{ prevYear}} {{ nextYear }}</div>',\n  data: {\n    currentYear: new Date().getFullYear()\n  },\n  computed: {\n    prevYear() {\n      return this.currentYear - 1;\n    },\n    nextYear: {\n      get() {\n        return this.currentYear + 1;\n      },\n      set(nextYear) {\n        this.currentYear = nextYear - 1;\n      }\n    }\n  }\n});",
    "sample": "new Vue({\n  el: '#app',\n  template: '<div>{{ prevYear}} {{ nextYear }}</div>',\n  data: {\n    currentYear: new Date().getFullYear()\n  },\n  computed: {\n    prevYear() { \n      this.currentYear - 1;\n    },\n    nextYear: {\n      get() { // VIOLATION\n        this.currentYear + 1;\n      },\n      set(nextYear) {\n        this.currentYear = nextYear - 1;\n      }\n    }\n  }\n});",
    "total": "Number of VueJS getter artifacts (javascript functions inside VueJS files) of computed properties",
    "alternativeName": "Ensure get() function always return a value",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063119,
            "name": "PCI-Requirement-6.5.5 - Improper error handling",
            "href": "AIP/technical-criteria/1063119",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-11",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/quality-standards/PCI-DSS4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS4"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
