{
    "id": 1065058,
    "name": "Ensure that there is at least one exception handler to catch-all otherwise unhandled exceptions in the main function(C++)",
    "href": "AIP/quality-rules/1065058",
    "critical": false,
    "severity": 10,
    "maxWeight": 5,
    "extension": {
        "name": "com.castsoftware.cpp",
        "href": "AIP/extensions/com.castsoftware.cpp"
    },
    "description": "This QR would raise violations for almost ALL main\\WinMain functions.\nThe functions considered are main, WinMain, InitInstance, ExitInstance.\nThis will give violations if there are any statements out of try\\catch statement or if try in the main does not have catch all. Multiple try\\catch are allowed but each try should have catch-all and none of the statements should be outside try\\catch. The only exception is if main has only one statement \u201creturn <number>;\u201d or main is empty.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "If a program throws an unhandled exception it terminates in an implementation-defined manner. In particular, it is implementation-defined whether the call stack is unwound, before termination, so the destructors of any automatic objects may or may not be executed. By enforcing the provision of a \u201clast-ditch catch-all\u201d, the developer can ensure that the program terminates in a consistent manner. This rule\u2019s objective is to ensure that exceptions that were not expected are also caught.",
    "reference": "MISRA C++ 2008, 15-3-2: There should be at least one exception handler to catch all otherwise unhandled exceptions\n\n\nAUTOSAR C++ 2014, Rule A15-3-3: There shall be at least one exception handler to catch all otherwise unhandled exceptions.",
    "remediation": "Add a catchall handler in the main function",
    "remediationSample": "int32_t main( )\n{\ntry\n{\n// program code\n}\ncatch ( ... ) // Catch-all handler\n{\n// Handle unexpected exceptions\n}\nreturn 0;\n}",
    "sample": "int32_t main( )\n{\ntry\n{\n// program code\n}\ncatch \n{\n//handle runtime exception\n}\nreturn 0;\n}",
    "total": "Number of C / C++ method and function",
    "alternativeName": "Ensure that there is at least one exception handler to catch-all otherwise unhandled exceptions in the main function(C++)",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1063119,
            "name": "PCI-Requirement-6.5.5 - Improper error handling",
            "href": "AIP/technical-criteria/1063119",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 1,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "AUTOSAR-CPP-2014-Exceptions",
            "name": "Exceptions",
            "href": "AIP/quality-standards/C-CPP/items/AUTOSAR-CPP-2014-Exceptions",
            "standard": "C-CPP"
        },
        {
            "id": "MISRA-CPP-2008-Exceptions",
            "name": "Exceptions",
            "href": "AIP/quality-standards/C-CPP/items/MISRA-CPP-2008-Exceptions",
            "standard": "C-CPP"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-11",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
