{
    "id": 8102,
    "name": "Avoid hardcoded network resource names (JEE)",
    "href": "AIP/quality-rules/8102",
    "critical": true,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "This quality rule reports all artifacts that contain hardcoded network resource\n\n- URLs (of the form file:///c:/Tmp/Folder/ or http://host.com/folder) \n- Paths (Windows absolute paths of the form c:\\Tmp\\Folder) \n- JDBC URL (of the form jdbc:oracle:thin:@//myhost:1521/orcl) \n- IP addresses (IPv4 format like 0.0.0.0 to 255.255.255.255) \n- JNDI lookup path",
    "output": "List all artifacts that reference hard coded IP adresses, URL, paths\nIt provides the following information: \n - Artifact full name",
    "rationale": "Built-in resource names cause problems when the target is moved. Avoid hardcoded network resources (e.g., IP addresses, URLs, etc.)\nThe software initializes data using hard-coded values that act as network resource identifiers.\nThis issue can prevent the software from running reliably, e.g. if it runs in an environment does not use the hard-coded network resource identifiers. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\nHard coding network resorces, server IP addresses, URL etc can expose the information to attackers. Anyone who has access to the class files can decompile them and discover the sensitive information.\nHard coding sensitive information also increases the need to manage and accommodate changes to the code",
    "reference": "ASCRM 1.0, Automated Source Code Reliability Measure, Object Management Group.\nhttps://wiki.sei.cmu.edu/confluence/display/java/MSC03-J.+Never+hard+code+sensitive+information",
    "remediation": "Retrieve the hardcoded IP adresses, URLs, paths from an external file located in a secure directory",
    "remediationSample": "Remediation For Sample1: The compliant solution retrieves the server IP address from an external file located in a secure directory\nclass IPaddress {\n  public static void main(String[] args) throws IOException {\n    char[] ipAddress = new char[100];\n    int offset = 0;\n    int charsRead = 0;\n    BufferedReader br = null;\n    try {\n      br = new BufferedReader(new InputStreamReader(\n             new FileInputStream(\"serveripaddress.txt\")));\n      while ((charsRead = br.read(ipAddress, offset, ipAddress.length - offset))\n          != -1) {\n        offset += charsRead;\n        if (offset >= ipAddress.length) {\n          break;\n        }\n      }\n       \n      // ... Work with IP address\n \n    } finally {\n      Arrays.fill(ipAddress,  (byte) 0);\n      br.close();\n    }\n  }\n}\n---------------------------\nRemediation for Sample2: Using the Configuration object and use this parameter instead of the hard coded path: \n\npublic class Sample{\n  private Configuration config;\n  public Sample(Configuration myConfig) {\n    this.config = myConfig;\n  }\n  public Collection<User> listUsers() {\n    String listingFolder = config.getProperty(\"myApp.listingFolder\");\n    File userList = new File(listingFolder, \"users.txt\"); // Compliant\n    Collection<User> users = parse(userList);\n    return users;\n  }\n}",
    "sample": "Sample1: This noncompliant code example includes a hard-coded server IP address in a constant String:\n\nclass IPaddress {\n  String ipAddress = new String(\"172.16.254.1\");\n  public static void main(String[] args) {\n    //...\n  }\n}\n\n---------------\nSample2: This noncompliant code example includes a hard-coded URIs\n\npublic class TEST_SAMPLE{\n  public Collection<User> listUsers() {\n    File popleList = new File(\"/home/login/RED/people.txt\"); \n    Collection<User> people = parse(peopleList);\n    return people;\n  }\n}",
    "total": "Number of Java Artifacts",
    "alternativeName": "Ensure not having hard-coded network resources names in the source files (JEE)",
    "businessCriteria": [
        {
            "id": 66032,
            "name": "Architectural Design",
            "href": "AIP/business-criteria/66032"
        },
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1062103,
            "name": "CISQ-Reliability",
            "href": "AIP/business-criteria/1062103"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061001,
            "name": "ISO-5055-Maintainability",
            "href": "AIP/business-criteria/1061001"
        },
        {
            "id": 1061003,
            "name": "ISO-5055-Reliability",
            "href": "AIP/business-criteria/1061003"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062164,
            "name": "ASCRM-RLB-18 - Storable and Member Data Element Initialization with Hard-Coded Network Resource Configuration Data",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61004,
            "name": "Architecture - OS and Platform Independence",
            "weight": 7,
            "critical": false
        },
        {
            "id": 1061114,
            "name": "CWE-1051: Initialization with Hard-Coded Network Resource Configuration Data",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062305,
            "name": "OWASP-2013-A5 Security Misconfiguration",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062326,
            "name": "OWASP-2017-A6 Security Misconfiguration",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCRM-RLB-18",
            "name": "Storable and Member Data Element Initialization with Hard-Coded Network Resource Configuration Data",
            "url": null,
            "description": "Objective\nAvoid the existence of hard-coded network configuration elements\n\nConsequence\nSoftware featuring network configuration within its own code incurs the risk of failure when the remote resource change\n\nMeasure Element\nNumber of instances where a storable data element or member data element is initialized by a \u2018Write\u2019 action with a hard-coded value corresponding to network resource identifications\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-1051",
            "name": "Initialization with Hard-Coded Network Resource Configuration Data",
            "url": "https://cwe.mitre.org/data/definitions/1051.html",
            "description": "The software initializes data using hard-coded values that act as network resource identifiers."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-1051",
            "name": "Initialization with Hard-Coded Network Resource Configuration Data",
            "url": "https://cwe.mitre.org/data/definitions/1051.html",
            "description": "The software initializes data using hard-coded values that act as network resource identifiers."
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-1051",
            "name": "Initialization with Hard-Coded Network Resource Configuration Data",
            "url": "https://cwe.mitre.org/data/definitions/1051.html",
            "description": "The software initializes data using hard-coded values that act as network resource identifiers."
        },
        {
            "standard": "OWASP",
            "id": "A5-2013",
            "name": "Security Misconfiguration",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration",
            "description": "Good security requires having a secure configuration defined and deployed for the application, frameworks, application server, web server, database server, and platform. Secure settings should be defined, implemented, and maintained, as defaults are often insecure. Additionally, software should be kept up to date."
        },
        {
            "standard": "OWASP",
            "id": "A6-2017",
            "name": "Security Misconfiguration",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration",
            "description": "Security misconfiguration is the most commonly seen issue. This is commonly a result of insecure default configurations, incomplete or ad hoc configurations, open cloud storage, misconfigured HTTP headers, and verbose error messages containing sensitive information. Not only must all operating systems, frameworks, libraries, and applications be securely configured, but they must be patched/upgraded in a timely fashion."
        },
        {
            "standard": "OWASP",
            "id": "API7-2019",
            "name": "Security Misconfiguration",
            "url": null,
            "description": "Security misconfiguration is commonly a result of unsecure default configurations, incomplete or ad-hoc configurations, open cloud storage, misconfigured HTTP headers, unnecessary HTTP methods, permissive Cross-Origin resource sharing (CORS), and verbose error messages containing sensitive information."
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-1.3.8",
            "name": "Do not disclose private IP addresses and routing information to unauthorized parties.",
            "url": null,
            "description": "Note: Methods to obscure IP addressing may include, but are not limited to:\n- Network Address Translation (NAT)\n- Placing servers containing cardholder data behind proxy servers/firewalls,\n- Removal or filtering of route advertisements for private networks that employ registered addressing,\n- Internal use of RFC1918 address space instead of registered addresses."
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-1.3.8",
            "name": "Do not disclose private IP addresses and routing information to unauthorized parties.",
            "url": null,
            "description": "Note: Methods to obscure IP addressing may include, but are not limited to:\n- Network Address Translation (NAT)\n- Placing servers containing cardholder data behind proxy servers/firewalls,\n- Removal or filtering of route advertisements for private networks that employ registered addressing,\n- Internal use of RFC1918 address space instead of registered addresses."
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
