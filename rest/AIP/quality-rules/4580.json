{
    "id": 4580,
    "name": "Good use of Interfaces when instantiating a collection",
    "href": "AIP/quality-rules/4580",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Collection Class Fullname",
    "description": "Report any fields declaration whose type is a class that implements an interface of type java.lang.Collection, java.lang.Collection<T>, java.lang.Map or java.lang.Map<U,V> or that implements an interface that inherits from these any of the aforementioned interfaces.",
    "output": "This report lists all the fields initialized with the Collection and Map implementation class. It provides the following information:\n - Field Full Name\n - Collection Class Fullname",
    "rationale": "Using the implementation class of a collection as the type of your instance ties your code to this specific implementation and makes it difficult to change the implementation class in the future.\n\nFor example, if you use the java.util.Collection interface, you can change your implementation class from a Set to a List or to a Queue according to your needs and performance requirements.",
    "reference": "http://java.sun.com/docs/books/tutorial/collections/interfaces/index.html",
    "remediation": "Declare the type as an interface of a more appropriate collection.",
    "total": "Number of fields whose type implements or extends java.lang.Collection, java.lang.Collection<T>, java.lang.Map or java.lang.Map<U,V>",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61020,
            "name": "Programming Practices - Modularity and OO Encapsulation Conformity",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70385",
            "name": "The application development team must follow a set of coding standards.",
            "url": null,
            "description": "Coding standards are guidelines established by the development team or individual developers that recommend programming style, practices and methods.  The coding standards employed will vary based upon the programming language that is being used to develop the application and the development team.\n\nCoding standards often cover the use of white space characters, variable naming conventions, function naming conventions, and comment styles.  Implementing coding standards provides many benefits to the development process.  These benefits include code readability, coding consistency among both individual and teams of developers as well as ease of code integration.  \n\nThe following are examples of what will typically be in a coding standards document.  This list is an example of what one can expect to find in typical coding standard documents and is not a comprehensive list:\n\n- Indent style conventions\n- Naming conventions\n- Line length conventions\n- Comment conventions\n- Programming best practices\n- Programming style conventions\n\nCoding standards allow developers to quickly adapt to code which has been developed by various members of a development team.  Coding standards are useful in the code review process as well as in situations where a team member leaves and duties must then be assigned to another team member.  \n\nCode conforming to a standard format is easier to read, especially if someone other than the original developer is examining the code.  In addition, formatted code can be debugged and corrected faster than unformatted code.\n\nIntroducing coding standards can help increase the consistency, reliability, and security of the application by ensuring common programming structures and tasks are handled by similar methods, as well as, reducing the occurrence of common logic errors."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
