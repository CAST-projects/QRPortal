{
    "id": 1065054,
    "name": "Do not override the standard library functions (C/C++)",
    "href": "AIP/quality-rules/1065054",
    "critical": false,
    "severity": 10,
    "maxWeight": 2,
    "description": "The rule will raise a violation if the standard library functions are overridden.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Where the developer uses new versions of standard library functions (e.g. to enhance functionality or add checks of input values), the modified function shall have a new name. However, it is permissible to overload the name to add new parameter types if the functionality is consistent with those of the original. This ensures that the behavior associated with the name remains consistent. So, for example, if a new version of the sqrt function is written to check that the input is not negative, the new function shall not be named \u201csqrt\u201d, but shall be given a new name. It is permissible to add a new sqrt function for a type not present in the library.",
    "reference": "MISRA C++ 2008, 17-0-3: The names of standard library functions shall not be overridden.\nAUTOSAR C++, 2014, Rule M17-0-3: The names of standard library functions shall not be overridden.",
    "remediation": "It is recommended to rename the function if the modification has been done",
    "sample": "int32_t printf ( int32_t a, int32_t b )   // Non-compliant \n{\nreturn ( ( a > b ) ? a : b ); \n}",
    "total": "Number of C / C++ method and function",
    "alternativeName": "Do not override the standard library functions (C/C++)",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "href": "AIP/technical-criteria/66069",
            "weight": 2,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "AUTOSAR-CPP-2014-Libraries",
            "name": "Libraries",
            "href": "AIP/quality-standards/C-CPP/items/AUTOSAR-CPP-2014-Libraries",
            "standard": "C-CPP"
        },
        {
            "id": "MISRA-CPP-2008-Libraries",
            "name": "Libraries",
            "href": "AIP/quality-standards/C-CPP/items/MISRA-CPP-2008-Libraries",
            "standard": "C-CPP"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
