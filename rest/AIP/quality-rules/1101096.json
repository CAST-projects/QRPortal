{
    "id": 1101096,
    "name": "Avoid SQL injection in dynamic SQL for Oracle",
    "href": "AIP/quality-rules/1101096",
    "critical": true,
    "severity": 30,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.sqlanalyzer",
        "href": "AIP/extensions/com.castsoftware.sqlanalyzer"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule identifies potential risky string interpolations used to parameterize SQL dynamic queries.\n\nWe are looking for input parameters of stored procedures of functions which are concatenated directly in dynamic SQLs.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "To avoid the creation of Injection flaws, the Open Web Application Security Project (OWASP) recommends to check \"Injection flaws, such as SQL, OS, and LDAP injection occur when untrusted data is sent to an interpreter as part of a command or query. The attacker\u2019s hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization.\"\n\nThe Common Weakness Enumeration defines Improper Neutralization of Special Elements used in an SQL Command ( CWE-89 ) as follows:\n\n\"Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data. This can be used to alter query logic to bypass security checks, or to insert additional statements that modify the back-end database, possibly including execution of system commands.\nSQL injection has become a common issue with database-driven web sites. The flaw is easily detected, and easily exploited, and as such, any site or software package with even a minimal user base is likely to be subject to an attempted attack of this kind. This flaw depends on the fact that SQL makes no real distinction between the control and data planes.\"",
    "reference": "https://blogs.oracle.com/sql/improve-sql-query-performance-by-using-bind-variables\nhttps://www.sqlinjection.net/defense/pl-sql/",
    "remediation": "Binding parameters are by far the best way to protect your dynamic SQL query.",
    "remediationSample": "CREATE OR REPLACE PROCEDURE testBind_01(vname IN VARCHAR2) \nAS\nBEGIN\n\n   .....\n   EXECUTE IMMEDIATE 'UPDATE products set price = price-1 where name = :1' USING vname;\n   .....\n\nCOMMIT;\nEND;\n/\nCREATE OR REPLACE PROCEDURE testBind_02(vname IN VARCHAR2) \nAS\nvsql VARCHAR2(4000);\nBEGIN\n\n   .....\n   vsql := 'SELECT description FROM products WHERE name= :1';\n   OPEN cur FOR vsql USING vname;\n   .....\n\nEND;\n/",
    "sample": "CREATE OR REPLACE PROCEDURE testBind_01(vname IN VARCHAR2) \nAS\nBEGIN\n   .....\n   EXECUTE IMMEDIATE 'UPDATE products set price = price-1 where name = ' || vname;\n   .....\n\nEND;\n/\nCREATE OR REPLACE PROCEDURE testBind_02(vname IN VARCHAR2) \nAS\nvsql VARCHAR2(4000);\nBEGIN\n\n   .....\n   vsql := 'SELECT description FROM products WHERE name=''' || vname || '''';\n   OPEN cur FOR vsql;\n   .....\n\nEND;\n/",
    "total": "Number of Oracle stored procedures and functions having dynamic SQL",
    "alternativeName": "Preventing SQL injection in Oracle dynamic SQL",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 1062340,
            "name": "OWASP-2021-Index",
            "href": "AIP/business-criteria/1062340"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062194,
            "name": "ASCSM-CWE-89 - SQL Injection Improper Input Neutralization",
            "href": "AIP/technical-criteria/1062194",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061017,
            "name": "CWE-89 - Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "href": "AIP/technical-criteria/1061017",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062301,
            "name": "OWASP-2013-A1 - Injection",
            "href": "AIP/technical-criteria/1062301",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062321,
            "name": "OWASP-2017-A1 - Injection",
            "href": "AIP/technical-criteria/1062321",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062343,
            "name": "OWASP-2021-A03 - Injection",
            "href": "AIP/technical-criteria/1062343",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1101000,
            "name": "SQL",
            "href": "AIP/technologies/1101000"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCSM-CWE-89",
            "name": "SQL Injection Improper Input Neutralization",
            "href": "AIP/quality-standards/CISQ/items/ASCSM-CWE-89",
            "standard": "CISQ"
        },
        {
            "id": "CWE-89",
            "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "href": "AIP/quality-standards/CWE/items/CWE-89",
            "standard": "CWE"
        },
        {
            "id": "CWE-89",
            "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-89",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-89",
            "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-89",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "A03-2021",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A03-2021",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "STIG-V-222607",
            "name": "The application must not be vulnerable to SQL Injection.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222607",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
