{
    "id": 1020786,
    "name": "Avoid using serialize-to-js 0.5.0 with Node.js",
    "href": "AIP/quality-rules/1020786",
    "critical": true,
    "maxWeight": 9,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check the use of serialize-to-js and especially deserialize function and the version used by the application.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "An issue was discovered in the serialize-to-js package 0.5.0 for Node.js. Untrusted data passed into the deserialize() function can be exploited to achieve arbitrary code execution by passing a JavaScript Object with an Immediately Invoked Function Expression (IIFE).",
    "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5954\nhttps://github.com/commenthol/serialize-to-js/issues/1",
    "remediation": "Upgrade the version of serialize-to-js",
    "sample": "str = 'console.log(`exploited`)';\nvar res = deserialize(str);",
    "total": "Number of function deserialize",
    "alternativeName": "Ensure you don't deserialize data using node-serialize package version 0.5.0",
    "businessCriteria": [
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062309,
            "name": "OWASP-2013-A9 Using Components with Known Vulnerabilities",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062328,
            "name": "OWASP-2017-A8 Insecure Deserialization",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062329,
            "name": "OWASP-2017-A9 Using Components with Known Vulnerabilities",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-676",
            "name": "Use of Potentially Dangerous Function",
            "url": "https://cwe.mitre.org/data/definitions/676.html",
            "description": "The program invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely."
        },
        {
            "standard": "OWASP",
            "id": "A8-2017",
            "name": "Insecure Deserialization",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization",
            "description": "Insecure deserialization often leads to remote code execution. Even if deserialization flaws do not result in remote code execution, they can be used to perform attacks, including replay attacks, injection attacks, and privilege escalation attacks."
        },
        {
            "standard": "OWASP",
            "id": "A9-2013",
            "name": "Using Components with Known Vulnerabilities",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities",
            "description": "Components, such as libraries, frameworks, and other software modules, almost always run with full privileges. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications using components with known vulnerabilities may undermine application defenses and enable a range of possible attacks and impacts."
        },
        {
            "standard": "OWASP",
            "id": "A9-2017",
            "name": "Using Components with Known Vulnerabilities",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities",
            "description": "Components, such as libraries, frameworks, and other software modules, run with the same privileges as the application. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications and APIs using components with known vulnerabilities may undermine application defenses and enable various attacks and impacts."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
