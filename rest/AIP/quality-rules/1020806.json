{
    "id": 1020806,
    "name": "Avoid using NaN in comparison ",
    "href": "AIP/quality-rules/1020806",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "The rule list all the artifacts that are using outputs of the functions that do not return anything. This rule is compliant with CISQ OMG ASCRM-CWE-252-data, ASCRM-CWE-704, ASCMM-MNT-20 recommendations",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Using NaN for comparison will produce unexpected results. Instead, the best way to see whether a variable is equal to NaN is to use Number.isNaN(), since ES2015, or (perhaps counter-intuitively) to compare it to itself. Since NaN !== NaN, when a !== a, you know it must equal NaN.",
    "reference": "CISQ OMG ASCRM-CWE-252-data, ASCRM-CWE-704, ASCMM-MNT-20 recommendations",
    "remediation": "Use Number.isNaN() instead .",
    "remediationSample": "if (Number.isNaN(test )) { \n return Number.isNaN(x)\n }",
    "sample": "if (test === NaN) { // violation \n  return x === NaN  // violation\n }",
    "total": "Number of Typescript artifacts",
    "alternativeName": "Preferusing  Number.isNaN() instead NaN in comparison",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062152,
            "name": "ASCRM-CWE-704 - Incorrect Type Conversion or Cast",
            "href": "AIP/technical-criteria/1062152",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061081,
            "name": "CWE-704 - Incorrect Type Conversion or Cast",
            "href": "AIP/technical-criteria/1061081",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "href": "AIP/technical-criteria/66069",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCRM-CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/CISQ/items/ASCRM-CWE-704",
            "standard": "CISQ"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/CWE/items/CWE-704",
            "standard": "CWE"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-704",
            "standard": "ISO-5055"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-704",
            "standard": "OMG-ASCQM"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
