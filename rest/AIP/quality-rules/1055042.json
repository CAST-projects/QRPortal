{
    "id": 1055042,
    "name": "Avoid using NSXMLParser without restriction of XML External Entity Reference (XXE) (Swift)",
    "href": "AIP/quality-rules/1055042",
    "critical": false,
    "maxWeight": 8,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule detects the switching-on of an insecure mode of the NSXMLPaser parser. This happens when the \"setShouldResolveExternalEntities\" property of the parser is switched to \"true\".",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "According to CWE-611, XML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing.\n\nBy submitting an XML file that defines an external entity with a file:// URI, an attacker can cause the processing application to read the contents of a local file. For example, a URI such as 'file:///c:/winnt/win.ini' designates (in Windows) the file 'C:\\Winnt\\win.ini', or 'file:///etc/passwd' designates the password file in Unix-based systems. Using URIs with other schemes such as 'http://', the attacker can force the application to make outgoing requests to servers that the attacker cannot reach directly, which can be used to bypass firewall restrictions or hide the source of attacks such as port scanning.\n\nOnce the content of the URI is read, it is fed back into the application that is processing the XML. This application may echo back the data (e.g. in an error message), thereby exposing the file contents.",
    "reference": "https://cwe.mitre.org/data/definitions/611.html\nhttps://developer.apple.com/documentation/foundation/nsxmlparser/1414143-shouldresolveexternalentities?language=swift\nhttps://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)",
    "remediation": "The property \"setShouldResolveExternalEntities\" must be set to \"false\".",
    "remediationSample": "import Foundation\n\n// This Swift code that is vulnerable to XXE attacks\n\nvar success: Bool\nvar rawXmlConvToData: NSData = rawXml.data(using: NSUTF8StringEncoding)\nvar myParser: XMLParser = NSXMLParser(data: rawXmlConvToData)\nmyParser.shouldResolveExternalEntities = false // or not use the API default setting is false\nmyParser.delegate = self",
    "sample": "import Foundation\n\n// This Swift code that is vulnerable to XXE attacks\n\nvar success: Bool\nvar rawXmlConvToData: NSData = rawXml.data(using: NSUTF8StringEncoding)\nvar myParser: XMLParser = NSXMLParser(data: rawXmlConvToData)\nmyParser.shouldResolveExternalEntities = true\nmyParser.delegate = self",
    "total": "Number of Swift artifacts",
    "alternativeName": "Ensure you did not use NSXMLParser setShouldResolveExternalEntities set to false without knowing if you can trust the sources.",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 8,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1055000,
            "name": "Swift",
            "href": "AIP/technologies/1055000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-611",
            "name": "Improper Restriction of XML External Entity Reference",
            "url": null,
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-611",
            "name": "Improper Restriction of XML External Entity Reference",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "url": null,
            "description": null
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70237",
            "name": "XML-based applications must mitigate DoS attacks by using XML filters, parser options, or gateways.",
            "url": null,
            "description": null
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70269",
            "name": "The application must not be vulnerable to XML-oriented attacks.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
