{
    "id": 1027050,
    "name": "Avoid throwing ArgumentException from yielding method.",
    "href": "AIP/quality-rules/1027050",
    "critical": false,
    "severity": 10,
    "maxWeight": 5,
    "extension": {
        "name": "com.castsoftware.dotnet",
        "href": "AIP/extensions/com.castsoftware.dotnet"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check if a method throws an exception derived from ArgumentException and also uses yield statement.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code for Throw statement\n- Bookmarks for yield statements as additional bookmark",
    "rationale": "Yield methods are rewritten by the compiler (to be lazily evaluated), code that causes wrong input might be in completely different place.",
    "reference": "https://docs.microsoft.com/dotnet/csharp/language-reference/keywords/yield",
    "remediation": "Split the method in two if it contains both ArgumentNullException and yield",
    "remediationSample": "public static IEnumerable<TFoo> TakeWhile<TFoo>(this IEnumerable<TFoo> foo)\n{\n    if (foo == null) { throw new ArgumentNullException(nameof(foo)); }\n\n    return checkThisFoo<TFoo>(foo);\n}\n\nprivate static IEnumerable<TFoo> checkThisFoo<TFoo>(IEnumerable<TFoo> foo)\n{\n    foreach (var bar in foo)\n    {\n        if (!doSomething(bar)) { break; }\n        yield return bar; // NO VIOLATION\n    }\n}",
    "sample": "public static IEnumerable<TFoo> TakeWhile<TFoo>(this IEnumerable<TFoo> foo)\n{\n    if (foo == null) { throw new ArgumentNullException(nameof(foo)); }\n\n    foreach (var bar in foo)\n    {\n        if (!doSomething(bar)) { break; }\n        yield return bar; // VIOLATION\n    }\n}",
    "total": "Number of Methods",
    "alternativeName": "Split the method in two if it contains both ArgumentNullException and yield",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-754",
            "name": "Improper Check for Unusual or Exceptional Conditions",
            "href": "AIP/quality-standards/CWE/items/CWE-754",
            "standard": "CWE"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-11",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
