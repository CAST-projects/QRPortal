{
    "id": 2351462,
    "name": "ColdFusion: Avoid instanciation in loop",
    "href": "AIP/quality-rules/2351462",
    "critical": true,
    "description": "Reports all templates with loops (for, while, do while) that contain object instantiations (object creation).",
    "output": "This report lists all Templates that instanciate objects inside loops.\nIt provides the following information: \n- Template full name\n- Number of loops having an object creation",
    "rationale": "One of the fundamental OO performance management principles is this: Avoid excessive object creation. This doesn't mean that you should give up the benefits of object-oriented programming by not creating any objects, but you should be wary of object creation inside of tight loops when executing performance-critical code. Object creation is expensive enough that you should avoid unnecessarily creating temporary or intermediate objects in situations where performance is an issue.",
    "reference": "http://www.bennadel.com/blog/737-How-ColdFusion-CreateObject-Really-Works-With-Java-Objects.htm",
    "remediation": "Whenever possible, redesign the loop.",
    "total": "Number of Templates",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66068,
            "name": "Efficiency - Expensive Calls in Loops",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 2351000,
            "name": "NO LABEL",
            "href": "AIP/technologies/2351000"
        }
    ],
    "qualityStandards": [
        
    ]
}
