{
    "id": 1065056,
    "name": "Avoid throwing exceptions outside of main()",
    "href": "AIP/quality-rules/1065056",
    "critical": false,
    "severity": 10,
    "maxWeight": 1,
    "extension": {
        "name": "com.castsoftware.cpp",
        "href": "AIP/extensions/com.castsoftware.cpp"
    },
    "description": "The rule will raise a violation if exceptions are thrown outside of main()",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Throwing an exception during start-up or termination results in the program being terminated in\nan implementation-defined manner. Before the program starts executing the body of main, it is in a start-up phase, constructing and initializing static objects. Similarly, after main has returned, it is in a termination phase where static objects are being destroyed. If an exception is thrown in either of these phases it leads to the program being terminated in an implementation-defined manner. \n\nSpecifically from Section 15.3(13) of ISO/IEC 14882:2003 [1], if main is implemented as a function-try-block, exceptions raised during start-up and close down are not caught by the catch block(s) of main.",
    "reference": "MISRA C++ 2008, 15-3-1: Exceptions shall be raised only after start-up and before termination of the program.\n\nAUTOSAR C++ 2014, M15-3-1: Exceptions shall be raised only after start-up and before termination of the program.",
    "remediation": "Ensure to handle exceptions inside main()",
    "remediationSample": "Example\nclass C\n{\npublic:\nC ( )\n{\n...\n}\n\nint main( ... )\n{\ntry\n{\n// program code\nreturn 0;\n}\ncatch ( ... )\n{\n// Handle exception\nreturn 0;\n}\n}\n\n\n~C ( )\n{\n...\n};",
    "sample": "Example\nclass C\n{\npublic:\nC ( )\n{\nthrow ( 0 ); // Non-compliant \u2013 thrown before main starts\n}\n~C ( )\n{\nthrow ( 0 ); // Non-compliant \u2013 thrown after main exits\n}\n};\nC c; // An exception thrown in C's constructor or destructor will\n// cause the program to terminate, and will not be caught by\n// the handler in main",
    "total": "Number of C / C++ classes",
    "alternativeName": "Ensure to handle exceptions inside main()",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 1,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "AUTOSAR-CPP-2014-Exceptions",
            "name": "Exceptions",
            "href": "AIP/quality-standards/C-CPP/items/AUTOSAR-CPP-2014-Exceptions",
            "standard": "C-CPP"
        },
        {
            "id": "MISRA-CPP-2008-Exceptions",
            "name": "Exceptions",
            "href": "AIP/quality-standards/C-CPP/items/MISRA-CPP-2008-Exceptions",
            "standard": "C-CPP"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-11",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
