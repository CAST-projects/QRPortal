{
    "id": 1040048,
    "name": "Avoid unsafe object binding (Spring)",
    "href": "AIP/quality-rules/1040048",
    "critical": true,
    "severity": 20,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.springsecurity",
        "href": "AIP/extensions/com.castsoftware.springsecurity"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule reports classes that bind method parameters with one of the following annotations:\n - @ModelAttribute\n - @RequestParam\n - @RequestBody\n - @RequestHeader\n - @CookieValue\nwithout implementing an @Initbinder method which calls WebDataBinder.setAllowedFields() or WebDataBinder.setDisallowedFields().\n\nThe rule does not apply to method parameters which are primitive data type or Data Transfer Object or any of the following Object:\n - java.lang.Boolean\n - java.lang.String\n - java.time.LocalDate",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Unsafe binding of objects to requests may expose unintended setters to remote attackers, allowing them to directly access objects, attributes and even objects within objects via broadly binding setters to an incoming request.\nUsing object binding methods, built into MVC controllers, exposes all public setters to allow easily wiring values submitted by users in forms, to the objects and attributes they are intended to create or alter. This approach allows application code to skip the boilerplate code of having to parse requests for user values, and manually setting them individually into objects being created.\nHowever, this may also pose a significant risk to application logic and flow - naively mass binding objects in such a manner may also accidentally expose unintended objects or attributes, which could then be tampered with by an attacker.",
    "reference": "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes\nhttps://cwe.mitre.org/data/definitions/915.html\n\nOWASP Cheat Sheet Series - Mass Assignment Cheat Sheet\nhttps://cheatsheetseries.owasp.org/cheatsheets/Mass_Assignment_Cheat_Sheet.html\n\nSpring framework documentation - 1.3.5. DataBinder\nhttps://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-initbinder",
    "remediation": "Review all mass-assigned objects to ensure no unintended public setters or constructors are unintentionally exposed by this approach.\nEnsure that, where required, access to attributes and objects is correctly restricted by application code.\nRestriction can be made:\neither with Allow-list the bindable, non-sensitive fields.\nor with Block-list the non-bindable, sensitive fields.",
    "remediationSample": "@Controller\npublic class MyController {\n\n    @InitBinder \n    public void initBinder(WebDataBinder binder) {\n        binder.setDisallowedFields(\"price\");                             // Call to setAllowedFields() or setDisallowedFields()\n    }\n\n    @RequestMapping(value=\"saveItem\", method = RequestMethod.POST)                       // FIXED\n    public String saveItem(@ModelAttribute(\"country\") Item item) {\n        db.save(item); //If the parameter \"price=0\" is added, the assigned price of item is 0.\n        return \"success\";\n    }\n\n    // ...\n}",
    "sample": "@Controller\npublic class MyController {\n\n    @RequestMapping(value=\"saveItem\", method = RequestMethod.POST)                       // VIOLATION\n    public String saveItem(@ModelAttribute(\"country\") Item item) {\n        db.save(item); //If the parameter \"price=0\" is added, the assigned price of item is 0.\n        return \"success\";\n    }\n\n    // ...\n}",
    "total": "Number of Java @Controller classes",
    "alternativeName": "Ensure restricting fields when binding an object",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062348,
            "name": "OWASP-2021-A08 - Software and Data Integrity Failures",
            "href": "AIP/technical-criteria/1062348",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063122,
            "name": "PCI-Requirement-6.5.8 - Improper access control",
            "href": "AIP/technical-criteria/1063122",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-915",
            "name": "Improperly Controlled Modification of Dynamically-Determined Object Attributes",
            "href": "AIP/quality-standards/CWE/items/CWE-915",
            "standard": "CWE"
        },
        {
            "id": "A08-2021",
            "name": "Software and Data Integrity Failures",
            "href": "AIP/quality-standards/OWASP/items/A08-2021",
            "standard": "OWASP"
        },
        {
            "id": "API6-2019",
            "name": "Mass Assignment",
            "href": "AIP/quality-standards/OWASP/items/API6-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.8",
            "name": "Improper access control",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.8",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.8",
            "name": "Improper access control",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.8",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
