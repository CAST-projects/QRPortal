{
    "id": 8538,
    "name": "Avoid second order expression language injection",
    "href": "AIP/quality-rules/8538",
    "critical": true,
    "severity": 30,
    "maxWeight": 9,
    "associatedValueName": "Call stack from user input source down to the target method",
    "description": "This metric uses CAST data-flow engine to detect a call path where input data coming from data stored in database is sent to an expression language statement without prior validation and sanitization.",
    "output": "List all methods that make resource calls forged by user input\n\nIt provides the following information:\n - Method full name\n - Call stack from user input source down to the target method.",
    "rationale": "The software constructs all or part of an expression language statement via user-controllable inputs. These inputs are not neutralized or are incorrectly neutralized. As a consequence, a user may execute unauthorized commands.",
    "reference": "CWE-917: Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')\nhttps://cwe.mitre.org/data/definitions/917.html\n\nOpen Web Application Security Project (OWASP) \nhttps://www.owasp.org/index.php/Top_10-2017_A1-Injection",
    "remediation": "Assume all input is malicious. \nAvoid using inputs. If it is not possible, use an \"accept known good\" input validation strategy, i.e., use stringent white-lists that limit the character set based on the expected value of the parameter in the request. This will indirectly limit the scope of an attack.",
    "remediationSample": "// Example using Spring Expression Language\nSpelExpressionParser parser = new SpelExpressionParser();\nSpelExpression expression = parser.parseRaw(hardCodedInput);",
    "sample": "// Example using Spring Expression Language\nString taintedInput = resultSet.getString(1);\nSpelExpressionParser parser = new SpelExpressionParser();\nSpelExpression expression = parser.parseRaw(taintedInput);",
    "total": "Number of potentially vulnerable methods",
    "alternativeName": "Ensure your application properly neutralize expression language content before it is processed",
    "businessCriteria": [
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 1062340,
            "name": "OWASP-2021-Index",
            "href": "AIP/business-criteria/1062340"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1061104,
            "name": "CWE-917 - Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
            "href": "AIP/technical-criteria/1061104",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062301,
            "name": "OWASP-2013-A1 - Injection",
            "href": "AIP/technical-criteria/1062301",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062321,
            "name": "OWASP-2017-A1 - Injection",
            "href": "AIP/technical-criteria/1062321",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062343,
            "name": "OWASP-2021-A03 - Injection",
            "href": "AIP/technical-criteria/1062343",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-400",
            "name": "Uncontrolled Resource Consumption",
            "href": "AIP/quality-standards/CWE/items/CWE-400",
            "standard": "CWE"
        },
        {
            "id": "CWE-917",
            "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
            "href": "AIP/quality-standards/CWE/items/CWE-917",
            "standard": "CWE"
        },
        {
            "id": "CWE-917",
            "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-917",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-AU-7",
            "name": "Audit Reduction and Report Generation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-AU-7",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-917",
            "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-917",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "A03-2021",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A03-2021",
            "standard": "OWASP"
        },
        {
            "id": "API8-2019",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/API8-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
