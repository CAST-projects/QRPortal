{
    "id": 1020884,
    "name": "Ensure that browser cannot cache or store a page when using express (TypeScript)",
    "href": "AIP/quality-rules/1020884",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule checks that the no-cache header is set either explicitly or by using helmet.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "In order to prevent the client browser to cache pages that could be misused or outdated and then give bad information to the user, you have to turn on the no cache option.\n\nSecurity misconfiguration is the most commonly seen issue. This is commonly a result of insecure default configurations, incomplete or ad hoc configurations, open cloud storage, misconfigured HTTP headers, and verbose error messages containing sensitive information. Not only must all operating systems, frameworks, libraries, and applications be securely configured, but they must be patched/upgraded in a timely fashion.",
    "reference": "https://helmetjs.github.io/docs/nocache/ \nhttps://expressjs.com/en/advanced/best-practice-security.html",
    "remediation": "Ensure you are manually setting up the no-Cache headers in your express instance or use third-party helmet package",
    "remediationSample": "import * as express from \"express\"\nvar app = express(); \n\n// direclty use nocache package \nimport * as nocache from 'nocache'\napp.use(nocache()) \n\n// or with helmet \nimport * as helmet from \"helmet\"\napp.use(helmet({\n  noCache: True\n})) \n\n// or more specifically\napp.use(helmet.noCache()) \n\napp.get('/', function(req, res){ \n    res.send(\"<html><body><p>hello world</p><script type='text/javascript'>alert('got you')</script></body></html>\"); \n}); \n\napp.listen(3000);",
    "sample": "import * as express from \"express\";\nvar app = express(); \n\napp.get('/', function(req, res){ \n    res.send(\"<html><body>hello world<script type='text/javascript'>alert('got you')</script></body></html>\"); \n}); \n\napp.listen(3000);",
    "total": "Number of TypeScript source codes using express",
    "alternativeName": "Ensure setting up the No Cache headers in your express instance or use third-party helmet package to avoid catching bad information.",
    "businessCriteria": [
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062305,
            "name": "OWASP-2013-A5 Security Misconfiguration",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062326,
            "name": "OWASP-2017-A6 Security Misconfiguration",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "A5-2013",
            "name": "Security Misconfiguration",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A6-2017",
            "name": "Security Misconfiguration",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
