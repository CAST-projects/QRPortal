{
    "id": 1008106,
    "name": "Avoid obsolete L-spec (RPG400)",
    "href": "AIP/quality-rules/1008106",
    "critical": false,
    "maxWeight": 5,
    "description": "This rule searches all the artefact having obsolete L-spec.",
    "output": "This report lists RPG400 artefact using L-spec.\nIt provides the following information:\nRPG400 artifact full name",
    "rationale": "This is no longer used or supported, and hence not advisable to use anymore.",
    "remediation": "Try to replace this statements by a F-specs using the FORMLEN and FORMOFL keywords or if possible remove it.",
    "remediationSample": "*.. 1 ...+... 2 ...+... 3 ...+... 4 ...+... 5 ...+... 6 ...+... 7 ...+... 8 \n  ...+... 9 ...+... 10 \n  FFilename++IPEASFRlen+LKlen+AIDevice+.File \n  continuation++++++++++++++++++++Comments++++++++++++ \n  FINVOICES  O    F  132        PRINTER OFLIND(OF) FORMLEN(51) FORMOFL(44)",
    "sample": "RPG/400 \n  *.. 1 ...+... 2 ...+... 3 ...+... 4 ...+... 5 ...+... 6 ...+... 7 ...+... 8 \n  ...+... 9 ...+... 10 \n  FFilenameIPEAF....RlenLK1AIOvKlocEDevice+......KExit++Entry+A....U1....... \n  FINVOICESO   F     132     OF    LPRINTER \n \n  LFilenameFlnFlOlnOl........................................................ \n  LINVOICES 51FL 44OL",
    "total": "Total number of RPG400 Artefact",
    "alternativeName": "Avoid obsolete L-spec (RPG400)",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061004,
            "name": "ISO-5055-Security",
            "href": "AIP/business-criteria/1061004"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1061055,
            "name": "CWE-477: Use of Obsolete Function",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness",
            "weight": 1,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1008000,
            "name": "RPG400",
            "href": "AIP/technologies/1008000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-477",
            "name": "Use of Obsolete Function",
            "url": "https://cwe.mitre.org/data/definitions/477.html",
            "description": "The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-477",
            "name": "Use of Obsolete Function",
            "url": "https://cwe.mitre.org/data/definitions/477.html",
            "description": "The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained."
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-477",
            "name": "Use of Obsolete Function",
            "url": "https://cwe.mitre.org/data/definitions/477.html",
            "description": "The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained."
        },
        {
            "standard": "OWASP",
            "id": "M7-2016",
            "name": "Poor Code Quality",
            "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M7-Poor_Code_Quality",
            "description": "Code quality issues are fairly prevalent within most mobile code. The good news is that most code quality issues are fairly benign and result in bad programming practice. It is typically difficult to detect these types of issues through manual code review. Instead, attackers will use third-party tools that perform static analysis or perform fuzzing. These types of tools will typically identify memory leaks, buffer overflows, and other less severe issues that result in bad programming practice. Hackers with extreme low-level knowledge and expertise are able to effectively exploit these types of issues. The typical primary goal is to execute foreign code within the mobile code's address space."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        10.0,
        50.0,
        90.0,
        100.0
    ]
}
