{
    "id": 1020610,
    "name": "Avoid declaring same OData model twice",
    "href": "AIP/quality-rules/1020610",
    "critical": false,
    "maxWeight": 9,
    "description": "A violation is reported when the same OData model is declared twice: once in the application manifest, once at the level of the User object.",
    "output": "Associated to each violation, the following information is provided:\n      - The number of violation occurrences\n      - Bookmarks for violation occurrences found in the source code",
    "rationale": "It is not possible to create a constant that can be used by both the manifest and the declaration of the class, a change of URL of the service would generate multiple code modifications.",
    "remediation": "You should use only the existing instance of the OData model in the User class",
    "sample": "Definition 1 in the user object: (user.js)\n\n      function (Object, ODataModel, Filter, FilterOperator) {\n      ....\n      constructor: function () {\n      var that = this;\n      this._oModel = new ODataModel(\"/abc/sap/abc/odata/smpl/v1/clientsite\", {\n      disableHeadRequestForToken: true\n      });\n      this.onDataLoaded = that._loadUserAccount();\n      this.onFuncLocLoaded = this.onDataLoaded.then(function () {\n      return that._loadFuncLoc();\n      });\n      },\n\n\n      Same Definition in application manifest.json:\n\n      \"_version\": \"1.4.0\",\n      \"sap.app\":\n      ...\n      \"dataSources\": {\n      \"mainService\": {\n      \"uri\": \"/abc/sap/abc/odata/smpl/v1/clientsite\",\n      \"type\": \"OData\",\n      \"settings\": {\n      \"odataVersion\": \"2.0\",\n      \"localUri\": \"localService/metadata.xml\"\n      }\n      }\n      },\n      \"sourceTemplate\": {\n      ....",
    "total": "Number of SAPUI5 Source Artifacts (Controllers, Components, Objects, JSViews...)",
    "alternativeName": "Avoid declaring same OData model twice",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness",
            "href": "AIP/technical-criteria/61024",
            "weight": 9,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
