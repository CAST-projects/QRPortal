{
    "id": 7496,
    "name": "Use table-per-subclass strategy when subclasses have many properties",
    "href": "AIP/quality-rules/7496",
    "critical": false,
    "maxWeight": 8,
    "description": "Reports all persistent entities (Hibernate or JPA) that don't use table-per-subclass strategy for its subclasses when the maximum added attributes of subclasses is greater or equal to 3. This number is a thresholds that can be changed as will.\nThis verification is limited to the first level of entities inheritance tree. For example, if the entity inheritance tree contains an entity C that inherit from entity B, that inherit from entity A. only the number of fields of entity B will be analyzed, not those from entity C.",
    "output": "List all Hibernate and/or Entities that don't use joined-subclass for its subclasses when the maximum added attributes of subclasses exceed the threshold parameter.\n\nIt provides the following information:\n Hibernate or JPA Entity Full Name",
    "rationale": "If you require polymorphic associations or queries, and subclasses declare many properties (subclasses differ mainly by the data they hold), lean toward the table-per-subclass approach.\n\nNote that By default, choose table-per-class-hierarchy for simple problems. For more complex cases (or when you're overruled by a data modeler insisting upon the importance of nullability constraints), you should consider the table-per-subclass strategy. But at that point, ask yourself whether it might be better to remodel inheritance as delegation in the object model. Complex inheritance is often best avoided for all sorts of reasons unrelated to persistence or ORM.",
    "reference": "http://www.developer.com/open/print.php/10930_3559931_5\nHibernate in Action (ISBN 1932394-15-X) p 105",
    "remediation": "Use the table-per-subclass strategy to map the hierarchy.",
    "remediationSample": "<class name=\"Animal\" table=\"ANIMAL\">\n    <id name=\"id\" type=\"long\" column=\"ANIMAL_ID\">\n        <generator class=\"native\"/>\n    </id>\n    <property name=\"amount\" column=\"AMOUNT\"/>\n\n    // FIXED table-per-subclass strategy is used\n    <joined-subclass name=\"Dog\" table=\"DOG\">\n        <key column=\"DOG_ID\"/>\n        <property name=\"race\" column=\"RACE\"/>\n    </joined-subclass>\n\n    <joined-subclass name=\"Cat\" table=\"CAT\">\n        <key column=\"CAT_ID\"/>\n        <property name=\"color\" column=\"COLOR\"/>\n        <property name=\"country\" column=\"COUNTRY\"/>\n        <property name=\"age\" column=\"AGE\"/>\n        <property name=\"owner\" column=\"OWNER\">\n    </joined-subclass>\n</class>",
    "sample": "----> animal.hbm.xml\n\n<class name=\"Animal\" table=\"ANIMAL\">\n    <id name=\"id\" type=\"long\" column=\"ANIMAL_ID\">\n        <generator class=\"native\"/>\n    </id>\n    <discriminator column=\"TYPE\" type=\"string\"/>\n    <property name=\"amount\" column=\"AMOUNT\"/>\n\n    // VIOLATION: one of the subclass attributes count \n    // is greater or equal to 3 and table-per-subclass\n    // strategy is not used\n\n    <subclass name=\"Dog\" discriminator-value=\"DOG\">\n        <property name=\"race\" column=\"RACE\"/>\n    </subclass>\n\n    <subclass name=\"Cat\" discriminator-value=\"CAT\">\n        <property name=\"color\" column=\"COLOR\"/>\n        <property name=\"country\" column=\"COUNTRY\"/>\n        <property name=\"age\" column=\"AGE\"/>\n        <property name=\"owner\" column=\"OWNER\">\n    </subclass>\n</class>",
    "total": "Number of hibernate and/or JPA entities that are subclassed (subclass or joined-subclass) and that are not inheriting from another entity",
    "alternativeName": "Ensure to use table-per-subclass strategy when subclasses have many properties",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61019,
            "name": "Efficiency - SQL and Data Handling Performance",
            "weight": 8,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        {
            "name": "Nbr_property",
            "description": null,
            "technologies": [
                {
                    "id": 0,
                    "name": "ALL TECHNOLOGIES",
                    "href": "AIP/technologies/0",
                    "values": [
                        3
                    ]
                }
            ]
        }
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
