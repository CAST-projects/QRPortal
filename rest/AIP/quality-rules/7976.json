{
    "id": 7976,
    "name": "Never use gets() function",
    "href": "AIP/quality-rules/7976",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule searches for C/C++ functions, methods, constructors, and destructors that call the 'gets()' function.",
    "output": "Associated to each C/C++ function/method/constructor/destructor with violations, the Quality Rule provides:\n- Number of violation occurrences\n- Bookmarks for violation occurrences found in the source code:\n  - function call",
    "rationale": "The 'gets()' function reads characters until a newline is encountered and stores them into a string buffer. This function is intrinsically unsafe and should not be used because it is not possible to specify the size of the string buffer. This can lead to buffer overflows.",
    "reference": "Build Security In (https://buildsecurityin.us-cert.gov/bsi/articles/knowledge/coding)",
    "remediation": "In C code, replace 'gets()' function calls with 'fgets(buf, sizeof(buf), stdin)'. If the string buffer has been statically defined, then use 'sizeof(buf)-1' in the 'fgets()' function.\nIn C++ code, use input stream instead and specify the number of characters to be read.",
    "remediationSample": "void foo()\n{\n  char strbuf[10];\n  fgets(strbuf, sizeof(strbuf)-1, stdin);\n}",
    "sample": "void foo()\n{\n  char strbuf[10];\n  gets(strbuf);\n}",
    "total": "Number of C/C++ functions, constructors, destructors, and methods",
    "alternativeName": "Never use gets() function",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCRM-CWE-120",
            "name": "Buffer Copy without Checking Size of Input",
            "url": null,
            "description": null
        },
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-120",
            "name": "Buffer Copy without Checking Size of Input",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-120",
            "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-676",
            "name": "Use of Potentially Dangerous Function",
            "url": null,
            "description": null
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-SI-16",
            "name": "Memory Protection",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.2",
            "name": "Buffer overflows",
            "url": null,
            "description": null
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70277",
            "name": "The application must not be vulnerable to overflow attacks.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        {
            "name": "name_fonction",
            "description": null,
            "technologies": [
                {
                    "id": 0,
                    "name": "ALL TECHNOLOGIES",
                    "href": "AIP/technologies/0",
                    "values": [
                        "gets"
                    ]
                }
            ]
        }
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
