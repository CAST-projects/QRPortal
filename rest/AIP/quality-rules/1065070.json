{
    "id": 1065070,
    "name": "Avoid using Trigraphs",
    "href": "AIP/quality-rules/1065070",
    "critical": false,
    "severity": 10,
    "maxWeight": 3,
    "extension": {
        "name": "com.castsoftware.cpp",
        "href": "AIP/extensions/com.castsoftware.cpp"
    },
    "description": "This rule will raise a violation when trigraphs are used.",
    "rationale": "Trigraphs are denoted to be a sequence of 2 question marks followed by a specified third character (e.g. ??\u2019 represents a ~character. They can cause accidental confusion with other uses of two question marks.\n\nThe Trigraphs are: ??=, ??/, ??\u2019, ??(, ??), ??!, ??<, ??>, ??-.",
    "reference": "MISRA C++, 2008, Rule 2\u20133\u20131: Trigraphs shall not be used. \n\nAUTOSAR 2014, C++, Rule A2-5-1: Trigraphs shall not be used.\n\nMISRA C, 2012, 4.2: Trigraphs should not be used.",
    "remediation": "Do not use Trigraphs",
    "remediationSample": "void fn2()\n{\n std::cout << \"Enter date dd/mm/yy\"; // VIOLATION FIXED\n}",
    "sample": "#include <iostream>\nvoid fn1()\n{\nstd::cout << \"Enter date ??/??/??\"; // VIOLATION, ??/??/?? becomes \\\\??\n// after trigraph translation\n}\nvoid fn2()\n{\n std::cout << \"Enter date dd/mm/yy\"; // Compliant",
    "alternativeName": "Avoid using Trigraphs",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "href": "AIP/technical-criteria/66069",
            "weight": 3,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "AUTOSAR-CPP-2014-Lexical-Conventions",
            "name": "Lexical Conventions",
            "href": "AIP/quality-standards/C-CPP/items/AUTOSAR-CPP-2014-Lexical-Conventions",
            "standard": "C-CPP"
        },
        {
            "id": "MISRA-CPP-2008-Lexical-Conventions",
            "name": "Lexical Conventions",
            "href": "AIP/quality-standards/C-CPP/items/MISRA-CPP-2008-Lexical-Conventions",
            "standard": "C-CPP"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
