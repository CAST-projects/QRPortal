{
    "id": 7272,
    "name": "Provide a private default Constructor for utility Classes (.NET)",
    "href": "AIP/quality-rules/7272",
    "critical": false,
    "severity": 10,
    "maxWeight": 4,
    "associatedValueName": "Number of violation occurrences",
    "description": "Utility classes must have a private default constructor, but must not have other constructors. Default constructors are constructors without any parameters. Utility classes are static classes: all their fields and methods (excluding constructors) are static (this excludes classes marked as static as this case is handled by the compiler).",
    "output": "This Quality Rule will list all static classes (classes with all methods/fields marked as static and with at least one static method) that do not have one private default constructor. It will also list classes that, in addition to the private default constructor, have other constructors. Classes marked with the static keyword are out of the scope of this Quality Rule and should not be returned (because this is checked by the compiler). Const fields are taken into account in the same way as other fields.",
    "rationale": "Utility classes are not meant to be instantiated because all the functionalities that they provide are accessible without instantiating the class. Instantiating these classes means that the developer has effectively misued the class. It also consumes memory unnecessarily. Providing a private default constructor ensures that the class is not instantiated.",
    "remediation": "Add a private default constructor to ensure that the class can't be instantiated.",
    "remediationSample": "public class MyUtilityClass\n   {\n      static public bool MyUtilityFunction1() {\n            //Do Something Usefull \n            return true;\n      }\n      private MyUtilityClass() {   // FIXED\n            // Avoid instantiation of the class\n      }\n   }",
    "sample": "public class MyUtilityClass\n   {\n      static public bool MyUtilityFunction1() {\n            //Do Something Usefull \n            return true;\n      }\n   } }  // VIOLATION",
    "total": "Number of utility classes (all their fields and methods are static)",
    "alternativeName": "Ensure adding a private default constructor then the class can't be instantiated.",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61018,
            "name": "Efficiency - Memory, Network and Disk Space Management",
            "href": "AIP/technical-criteria/61018",
            "weight": 4,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
