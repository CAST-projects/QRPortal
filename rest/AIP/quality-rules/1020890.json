{
    "id": 1020890,
    "name": "Ensure that CSRF Protection is enabled when using express (TypeScript)",
    "href": "AIP/quality-rules/1020890",
    "critical": true,
    "severity": 30,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.typescript",
        "href": "AIP/extensions/com.castsoftware.typescript"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "CSRF attacks can be prevented by embedding additional authentication data into requests that allow the web application to detect requests from unauthorized locations.\n\nThis rule checks that a CSRF protection module such as csurf or express-csrf is used.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Cross-site request forgery, also known as one-click attack or session riding and abbreviated as CSRF (sometimes pronounced sea-surf[1]) or XSRF, is a type of malicious exploit of a website where unauthorized commands are transmitted from a user that the web application trusts.\nIn a CSRF attack, an innocent end-user is tricked by an attacker into submitting a web request that they did not intend. This may cause actions to be performed on the website that can include inadvertent client or server data leakage, change of session state, or manipulation of an end user's account.",
    "reference": "https://expressjs.com/en/advanced/best-practice-security.html \nhttps://www.owasp.org/index.php/Top_10_2013-A8-Cross-Site_Request_Forgery_(CSRF)\nhttp://cwe.mitre.org/data/definitions/352.html",
    "remediation": "Ensure your application is using \"csurf\" or \"express-csrf\" library.",
    "remediationSample": "// using csurf library\nimport * as cookieParser from 'cookie-parser'\nimport * as csrf from 'csurf'\nimport * as bodyParser from 'body-parser'\nimport * as express from 'express'\n \n// setup route middlewares\nvar csrfProtection = csrf({ cookie: true })\nvar parseForm = bodyParser.urlencoded({ extended: false })\n \n// create express app\nvar app = express()\n \n// parse cookies\n// we need this because \"cookie\" is true in csrfProtection\napp.use(cookieParser())\n \napp.get('/form', csrfProtection, function (req, res) {\n  // pass the csrfToken to the view\n  res.render('send', { csrfToken: req.csrfToken() })\n})\n \napp.post('/process', parseForm, csrfProtection, function (req, res) {\n  res.send('data is being processed')\n})\n\n// or example with express-csrf library \n\nimport * as csrf from 'express-csrf' \n\napp = express(); \n\napp.dynamicHelpers({ \n    csrf: csrf.token \n}); \n\napp.use(express.cookieParser()); \napp.use(express.bodyParser()); \napp.use(express.session()); \napp.use(csrf.check()); \n\napp.listen(3000);",
    "sample": "import * as express from \"express\"\nvar app = express(); \n\napp.listen(3000);",
    "total": "Number of TypeScript source codes using express",
    "alternativeName": "Ensure you have enable CSRF Protection to avoid Cross-Site forgery risk.",
    "businessCriteria": [
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 1062340,
            "name": "OWASP-2021-Index",
            "href": "AIP/business-criteria/1062340"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062308,
            "name": "OWASP-2013-A8 - Cross-Site Request Forgery (CSRF)",
            "href": "AIP/technical-criteria/1062308",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062322,
            "name": "OWASP-2017-A2 - Broken Authentication",
            "href": "AIP/technical-criteria/1062322",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062347,
            "name": "OWASP-2021-A07 - Identification and Authentication Failures",
            "href": "AIP/technical-criteria/1062347",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-352",
            "name": "Cross-Site Request Forgery (CSRF)",
            "href": "AIP/quality-standards/CWE/items/CWE-352",
            "standard": "CWE"
        },
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-IA-9",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A2-2017",
            "name": "Broken Authentication",
            "href": "AIP/quality-standards/OWASP/items/A2-2017",
            "standard": "OWASP"
        },
        {
            "id": "A8-2013",
            "name": "Cross-Site Request Forgery (CSRF)",
            "href": "AIP/quality-standards/OWASP/items/A8-2013",
            "standard": "OWASP"
        },
        {
            "id": "A07-2021",
            "name": "Identification and Authentication Failures",
            "href": "AIP/quality-standards/OWASP/items/A07-2021",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.9",
            "name": "Cross-site request forgery (CSRF)",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.9",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.9",
            "name": "Cross-site request forgery (CSRF)",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.9",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "STIG-V-222603",
            "name": "The application must protect from Cross-Site Request Forgery (CSRF) vulnerabilities.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222603",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
