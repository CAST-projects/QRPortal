{
    "id": 1021100,
    "name": "Avoid URL redirection to untrusted site (Python)",
    "href": "AIP/quality-rules/1021100",
    "critical": true,
    "severity": 20,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.python",
        "href": "AIP/extensions/com.castsoftware.python"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "Unvalidated redirects occur when an application redirects a user to a destination URL specified by a user supplied parameter that is not validated. Such vulnerabilities can be used to facilitate phishing attacks.\n\nSupported frameworks are: FastAPI.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Attackers may use phishing techniques or steal credentials. A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect.",
    "reference": "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')\nhttps://cwe.mitre.org/data/definitions/601.html\n\nOpen Web Application Security Project (OWASP)\n\nCWE CATEGORY: OWASP Top Ten 2013 Category A10 - Unvalidated Redirects and Forwards\nhttps://www.owasp.org/index.php/Top_10_2013-A10-Unvalidated_Redirects_and_Forwards\n\nnot in Top Ten 2017\n\nCWE CATEGORY: OWASP Top Ten 2021 Category A01:2021 - Broken Access Control\nhttps://cwe.mitre.org/data/definitions/1345.html",
    "remediation": "Assume all input is malicious.\nAvoid using inputs. If it is not possible, use an \"accept known good\" input validation strategy, i.e., use stringent white-lists that limit the character set based on the expected value of the parameter in the request. This will indirectly limit the scope of an attack.",
    "remediationSample": "redirect_urls = {id1: \"...\", id2: \"...\"}\n\n@app.get(\"/redirect\")\nasync def redirect_custom(url_id):\n    validated_url = redirect_urls.get(url_id)\n    return RedirectResponse(validated_url )",
    "sample": "@app.get(\"/redirect\")\nasync def redirect_custom(url):\n    return RedirectResponse(url)",
    "total": "Number of Python artifacts",
    "alternativeName": "Ensure your application does not redirect to an untrusted site",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1066701,
            "name": "CWE-601 - URL Redirection to Untrusted Site ('Open Redirect')",
            "href": "AIP/technical-criteria/1066701",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062310,
            "name": "OWASP-2013-A10 - Unvalidated Redirects and Forwards",
            "href": "AIP/technical-criteria/1062310",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062341,
            "name": "OWASP-2021-A01 - Broken Access Control",
            "href": "AIP/technical-criteria/1062341",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063114,
            "name": "PCI-Requirement-6.5.1 - Injection flaws, particularly SQL injection",
            "href": "AIP/technical-criteria/1063114",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "AIP/technologies/1021000"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-601",
            "name": "URL Redirection to Untrusted Site ('Open Redirect')",
            "href": "AIP/quality-standards/CWE/items/CWE-601",
            "standard": "CWE"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-10",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A01-2021",
            "name": "Broken Access Control",
            "href": "AIP/quality-standards/OWASP/items/A01-2021",
            "standard": "OWASP"
        },
        {
            "id": "A10-2013",
            "name": "Unvalidated Redirects and Forwards",
            "href": "AIP/quality-standards/OWASP/items/A10-2013",
            "standard": "OWASP"
        },
        {
            "id": "API8-2019",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/API8-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
