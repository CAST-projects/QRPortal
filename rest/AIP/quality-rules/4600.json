{
    "id": 4600,
    "name": "Avoid using Exit and Halt Methods on a Web/Application Server",
    "href": "AIP/quality-rules/4600",
    "critical": true,
    "severity": 20,
    "maxWeight": 9,
    "description": "Java artifacts should not use 'java.System.exit()' or 'Runtime.getRuntime().exit(0)' or 'Runtime.getRuntime().halt(0)'  for application deployed on a Web Server or an Application Server (when web.xml and/or ejb-jar.xml file are present)\n\n.",
    "output": "This report lists  Java methods call or using 'java.System.exit()', 'Runtime.getRuntime().exit(0)' or 'Runtime.getRuntime().halt(0)'\nIt provides the following information:\n\n - method full name",
    "rationale": "Using the exit and halt methods in web application is a bad idea because it terminates not only program but also the Java Virtual Machine. Therefore it will shutdown the current application as well as other critical applications if any, running in the same JVM. This can result in DoS (Denial Of Service) attacks. Additionally, programs should perform necessary cleanup actions when forcibly terminated.",
    "reference": "http://cwe.mitre.org/data/definitions/382.html\n\nhttps://wiki.sei.cmu.edu/confluence/display/java/ERR09-J.+Do+not+allow+untrusted+code+to+terminate+the+JVM\n\nhttps://javarevisited.blogspot.com/2014/11/dont-use-systemexit-on-java-web-application.html\n\nhttps://www.baeldung.com/java-system-exit\n\nhttps://docs.oracle.com/javase/7/docs/api/java/lang/Runtime.html",
    "remediation": "Don't use 'java.System.exit()', 'Runtime.getRuntime().exit(0)' and 'Runtime.getRuntime().halt(0)' to know what happened when you exit your program",
    "remediationSample": "public class ok_UseExit\n{\n    {\n        if (System.currentTimeMillis() >500000)\n           return; \n    }\n    \n    public OK_UseExit()\n    {\n        return;\n    }\n    \n    public void ok_go()\n    {\n         return;\n    }\n}",
    "sample": "sample #1\n\npublic class KO_UseExit\n{\n    {\n        if (System.currentTimeMillis() >500000)\n            System.exit(0);\n    }\n    \n    public KO_UseExit()\n    {\n        System.exit(0);\n    }\n    \n    public void ko_go()\n    {\n        System.exit(0);\n    }\n}\n\n-------------------------------------------------\nsample # 2\n\npublic class KO_UseExit\n{\n    {\n        if (System.currentTimeMillis() >500000)\n           Runtime.getRuntime().exit(0);\n    }\n    \n    public KO_UseExit()\n    {\n       Runtime.getRuntime().exit(0);\n    }\n    \n    public void ko_go()\n    {\n     Runtime.getRuntime().exit(0);\n    }\n}\n\n\n--------------------------------------------------------\n\nsample # 3\n\npublic class KO_UseExit\n{\n    {\n        if (System.currentTimeMillis() >500000)\n          Runtime.getRuntime().halt(0)\n    \n    public KO_UseExit()\n    {\n       Runtime.getRuntime().halt(0)\n    }\n    \n    public void ko_go()\n    {\n     Runtime.getRuntime().halt(0)\n    }\n}",
    "total": "Number of Java Artifacts",
    "alternativeName": "Ensure you don't use 'java.System.exit()' to know what happened when you exit your program",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 2,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "href": "AIP/technical-criteria/66064",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-382",
            "name": "J2EE Bad Practices: Use of System.exit()",
            "href": "AIP/quality-standards/CWE/items/CWE-382",
            "standard": "CWE"
        },
        {
            "id": "PCI-Requirement-6.5.6",
            "name": "All high risk vulnerabilities identified in the vulnerability identification process (as defined in PCI DSS Requirement 6.1).",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.6",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.6",
            "name": "All high risk vulnerabilities identified in the vulnerability identification process (as defined in PCI DSS Requirement 6.1).",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.6",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
