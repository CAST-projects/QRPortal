{
    "id": 1039052,
    "name": "Avoid Http Session without expiration",
    "href": "AIP/quality-rules/1039052",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "The lack of proper session expiration may improve the likely success of certain attacks. For example, an attacker may intercept a session ID, possibly via a network sniffer or Cross-site Scripting attack. In some scenario, a user might access a web site from a shared computer (such as at a library, Internet cafe, or open work environment). Insufficient Session Expiration could allow an attacker to use the browser's back button to access web pages previously accessed by the victim.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "HTTP Session is active for long, will create multiple issue - 1) Security 2)Memory usage 3) Results into break of the authentication using session set to never expire or denial of service.",
    "reference": "https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication\nhttps://cwe.mitre.org/data/definitions/613.html",
    "remediation": "Always set a definite timeout for sessions.",
    "remediationSample": "HttpSession sesssion = request.getSession(true);\nsesssion.setMaxInactiveInterval(90);",
    "sample": "Sample 1: \nHttpSession sesssion = request.getSession(true);\nsesssion.setMaxInactiveInterval(-1);\n\nSample 2: \n<session-config>\n    <session-timeout>-1</session-timeout>\n</session-config>\n\nSample 3: \nHttpSession sesssion = request.getSession(true);\nsesssion.setMaxInactiveInterval(0);",
    "total": "Number of Java artifacts",
    "alternativeName": "Always set an expiration time for an Http Session to improve security",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-613",
            "name": "Insufficient Session Expiration",
            "url": "https://cwe.mitre.org/data/definitions/613.html",
            "description": "According to WASC, Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization."
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-AC-12",
            "name": "Session Termination",
            "url": "https://nvd.nist.gov/800-53/Rev4/control/AC-12",
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A2-2013",
            "name": "Broken Authentication and Session Management",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A2-Broken Authentication and Session Management",
            "description": "Application functions related to authentication and session management are often not implemented correctly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users' identities."
        },
        {
            "standard": "OWASP",
            "id": "M4-2016",
            "name": "Insecure Authentication",
            "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M4-Insecure_Authentication",
            "description": "Many older or poorly configured XML processors evaluate external entity references within XML documents. External entities can be used to disclose internal files using the file URI handler, internal file shares, internal port scanning, remote code execution, and denial of service attacks."
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "url": null,
            "description": "Note: Requirement 6.5.10 is a best practice until June 30, 2015, after which it becomes a requirement."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
