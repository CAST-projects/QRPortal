{
    "id": 8502,
    "name": "Avoid reflection injection through API requests",
    "href": "AIP/quality-rules/8502",
    "critical": true,
    "maxWeight": 9,
    "associatedValueName": "Call stack from user input source down to the target method",
    "description": "Using CAST data-flow engine, this metric detects paths from API request down to reflection code, paths which are open vulnerabilities to operating system injection flaws.",
    "output": "List all methods that miss calling the required input validation calls\n\nIt provides the following information:\n - Method full name\n - Call stack from user input source down to the target method.",
    "rationale": "The software constructs all or part of a dynamic evaluation using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended code when it is sent to a downstream component.\nThis could allow attackers to access or execute unexpected, dangerous commands directly on the operating system.\n\nThe application uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code.",
    "reference": "CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')\nhttps://cwe.mitre.org/data/definitions/470.html\n\nOpen Web Application Security Project (OWASP) \nhttps://www.owasp.org/index.php/Unsafe_use_of_Reflection\nhttps://www.owasp.org/index.php/Top_10-2017_A1-Injection\n\nCISQ: ASCSM-CWE-470",
    "remediation": "Assume all input is malicious. \nAvoid using inputs. If it is not possible, use an \"accept known good\" input validation strategy, i.e., use stringent white-lists that limit the character set based on the expected value of the parameter in the request. This will indirectly limit the scope of an attack.",
    "remediationSample": "String ctl; // constant value\nClass cmdClass = Class.forName(ctl + command);\nWorker ao = (Worker) cmdClass.newInstance();\nao.doAction(request);",
    "sample": "String ctl; // value given by an API request\n...\nClass cmdClass = Class.forName(ctl + \"Command\");\nWorker ao = (Worker) cmdClass.newInstance();\nao.doAction(request);",
    "total": "Number of potentially vulnerable methods",
    "alternativeName": "Ensure you have sanitized the data received to be reflected in your application",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-78",
            "name": "OS Command Injection Improper Input Neutralization",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-78",
            "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-88",
            "name": "Argument Injection or Modification",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-470",
            "name": "Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')",
            "url": null,
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-78",
            "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
            "url": null,
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-88",
            "name": "Argument Injection or Modification",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A1-2013",
            "name": "Injection",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A1-2017",
            "name": "Injection",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "API8-2019",
            "name": "Injection",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "url": null,
            "description": null
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70261",
            "name": "The application must protect from command injection.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
