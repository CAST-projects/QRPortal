{
    "id": 7772,
    "name": "Avoid Artifacts with High Essential Complexity",
    "href": "AIP/quality-rules/7772",
    "critical": false,
    "maxWeight": 6,
    "associatedValueName": "Essential Complexity",
    "description": "Avoid Artifacts with High Essential Complexity (EC greater than X). Essential Complexity measures the number of non-structured independent paths. Non-structured paths are paths of the control flow graph in which an instruction that interrupts the flow is present. The threshold is a parameter and can be changed at will.",
    "output": "This report lists all Artifacts with an Essential Complexity greater than X. It provides the following information: Artifact full name, EC",
    "rationale": "Essential Complexity equals the minimum number of tests to check the Artifact's non-structured behavior. High EC means more testing and higher risk of errors.",
    "remediation": "Review the design of the Artifact to reduce the number of non-structured independent paths. E.g.: Reduce the number of BREAK or GOTO statements.",
    "total": "Number of Artifacts",
    "alternativeName": "Avoid Artifacts with High Essential Complexity",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 141901,
            "name": ".NET (Legacy Analyzer)",
            "href": "AIP/technologies/141901"
        },
        {
            "id": -15,
            "name": "ABAP",
            "href": "AIP/technologies/-15"
        },
        {
            "id": -19,
            "name": "ASP",
            "href": "AIP/technologies/-19"
        },
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        },
        {
            "id": -4,
            "name": "Cobol",
            "href": "AIP/technologies/-4"
        },
        {
            "id": -10,
            "name": "Forms",
            "href": "AIP/technologies/-10"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138663,
            "name": "JavaScript",
            "href": "AIP/technologies/138663"
        },
        {
            "id": 140998,
            "name": "Microsoft T-SQL",
            "href": "AIP/technologies/140998"
        },
        {
            "id": 139287,
            "name": "PL/SQL",
            "href": "AIP/technologies/139287"
        },
        {
            "id": -8,
            "name": "PowerBuilder",
            "href": "AIP/technologies/-8"
        },
        {
            "id": -13,
            "name": "SQL Server",
            "href": "AIP/technologies/-13"
        },
        {
            "id": 1101000,
            "name": "SQLAnalyzer",
            "href": "AIP/technologies/1101000"
        },
        {
            "id": 141001,
            "name": "Sybase T-SQL",
            "href": "AIP/technologies/141001"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        },
        {
            "id": -9,
            "name": "Visual Basic",
            "href": "AIP/technologies/-9"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "M7-2016",
            "name": "Poor Code Quality",
            "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M7-Poor_Code_Quality",
            "description": "Code quality issues are fairly prevalent within most mobile code. The good news is that most code quality issues are fairly benign and result in bad programming practice. It is typically difficult to detect these types of issues through manual code review. Instead, attackers will use third-party tools that perform static analysis or perform fuzzing. These types of tools will typically identify memory leaks, buffer overflows, and other less severe issues that result in bad programming practice. Hackers with extreme low-level knowledge and expertise are able to effectively exploit these types of issues. The typical primary goal is to execute foreign code within the mobile code's address space."
        }
    ],
    "parameters": [
        {
            "name": "Maximum Essential Complexity",
            "description": "Max Essential Complexity per artifact",
            "technologies": [
                {
                    "id": 0,
                    "name": "ALL TECHNOLOGIES",
                    "href": "AIP/technologies/0",
                    "values": [
                        5.0
                    ]
                }
            ]
        }
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
