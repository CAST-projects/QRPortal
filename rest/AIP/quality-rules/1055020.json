{
    "id": 1055020,
    "name": "Avoid using kSecAttrAccessibleAlways attribute when storing data in the Keychain (Swift)",
    "href": "AIP/quality-rules/1055020",
    "critical": true,
    "associatedValueName": "Number of violation patterns",
    "description": "To ensure that Keychain access is limited, avoid using kSecAttrAccessibleAlways This rule is compliant with OWASP M2 2016 recommendation.",
    "output": "This report lists all uses of kSecAttrAccessibleAlways options. \nIt provides the following information: \nObject full name, number of violations",
    "rationale": "To save a password or any other type of sensitive information in an iOS app, you have to use the iOS Keychain. This is Apple\u2019s way of storing things securely for you.",
    "reference": "https://developer.apple.com/security/",
    "remediation": "Prefer using designation like kSecAttrAccessibleWhenUnlocked, or kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly, etc...",
    "remediationSample": "var query: [String: Any] = [kSecClass as String: kSecClassInternetPassword,\n                            kSecAttrAccount as String: account,\n                            kSecAttrServer as String: server,\n                            kSecValueData as String: password,\n                            kSecAttrAccessible as String: kSecAttrAccessibleWhenUnlocked]    \n\nSecItemAdd(query,r)",
    "sample": "var query: [String: Any] = [kSecClass as String: kSecClassInternetPassword,\n                            kSecAttrAccount as String: account,\n                            kSecAttrServer as String: server,\n                            kSecValueData as String: password,\n                            kSecAttrAccessible as String: kSecAttrAccessibleAlways]    \n\nSecItemAdd(query,r)",
    "total": "Number of functions",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1055000,
            "name": "Swift",
            "href": "AIP/technologies/1055000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "M2-2016",
            "name": "Insecure Data Storage",
            "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M2-Insecure_Data_Storage",
            "description": "Insecure data storage vulnerabilities occur when development teams assume that users or malware will not have access to a mobile device's filesystem and subsequent sensitive information in data-stores on the device. Filesystems are easily accessible. Organizations should expect a malicious user or malware to inspect sensitive data stores. Usage of poor encryption libraries is to be avoided. Rooting or jailbreaking a mobile device circumvents any encryption protections. When data is not protected properly, specialized tools are all that is needed to view application data."
        }
    ]
}
