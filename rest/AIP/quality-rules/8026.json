{
    "id": 8026,
    "name": "Avoid Classes with an assignment operator and the default Destructor or copy constructor",
    "href": "AIP/quality-rules/8026",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule searches for classes which implement an assignment operator (operator=) but which let the compiler generate a default version for the destructor or the copy constructor.",
    "output": "Associated to each C++ class with violations, the Quality Rule provides:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in source code:\n  - operator=",
    "rationale": "If you need an assignment operator, you also need a destructor and copy constructor. If you need an assignment operator, it's because you need something like a deep copy, or some other management of resources. Thus it is almost certain that you will need a destructor and a copy constructor. \n\nIf you don't need an assignment operator (because the default-generated assignment operator would be correct), you should let the compiler generate it: tt will not contain bugs, and you will often not have to update it when the class is modified.",
    "reference": "\"C++ Notes: OOP: Copy Constructors\":http://www.fredosaurus.com/notes-cpp/oop-condestructors/copyconstructors.html",
    "remediation": "Prevent default generation of the destructor and copy constructor:\n- Provide your own version\n- Or declare it private without implementing it to prevent the operation (for copy constructor)",
    "total": "Number of C++ classes",
    "alternativeName": "Avoid Classes with an assignment operator and the default Destructor or copy constructor",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCRM-RLB-6",
            "name": "Storable or Member Data Element containing Pointer Item Element without Proper Copy Control Element",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-1098",
            "name": "Data Element containing Pointer Item without Proper Copy Control Element",
            "url": null,
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-1098",
            "name": "Data Element containing Pointer Item without Proper Copy Control Element",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
