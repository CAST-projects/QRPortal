{
    "id": 1065080,
    "name": "Avoid using C-style and functional notation casts (C++)",
    "href": "AIP/quality-rules/1065080",
    "critical": false,
    "maxWeight": 5,
    "description": "This rule will raise a violation when C-style casts or functional casts are used\n\nException:\nA C-style cast to void may be used to signify that the return value for a non-void function call is being ignored",
    "output": "Information will be provided on:\n1. Methods where a violation has occurred\n2. Bookmarks for violation occurrences found in the source code",
    "rationale": "C-style (cast notation), and functional notation casts that do not invoke a converting constructor are capable of performing casts between unrelated types.\nAlso, C++ style casts clearly communicate the intent and hence improve readability.",
    "reference": "Standards References:\nMISRA C++ 2008, 5-2-4: C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used.",
    "remediation": "Use C++ style casts:\nstatic_cast<type>(expression)\nconst_cast<type>(expression)\ndynamic_cast<type>(expression)\nreinterpret_cast<type>(expression)",
    "remediationSample": "(void)g ( ); // Compliant by exception\n\nA * a3 = const_cast<A*>( &a1); // compliant",
    "sample": "class A\n{\npublic:\nexplicit A( int32_t );\n};\nint32_t g ( )\n{\nreturn 7;\n}\nvoid f ( )\n{\nA * a2 = ( A* )( &a1 ); // Non-compliant\n\n}",
    "total": "Number of Methods or Functions",
    "alternativeName": "Ensure to use C++ style notation casts to avoid unexpected type conversions",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062152,
            "name": "ASCRM-CWE-704 - Incorrect Type Conversion or Cast",
            "href": "AIP/technical-criteria/1062152",
            "weight": 5
        },
        {
            "id": 1062187,
            "name": "ASCSM-CWE-681 - Numeric Types Incorrect Conversion",
            "href": "AIP/technical-criteria/1062187",
            "weight": 5
        },
        {
            "id": 1061078,
            "name": "CWE-681: Incorrect Conversion between Numeric Types",
            "href": "AIP/technical-criteria/1061078",
            "weight": 5
        },
        {
            "id": 1061081,
            "name": "CWE-704: Incorrect Type Conversion or Cast",
            "href": "AIP/technical-criteria/1061081",
            "weight": 5
        },
        {
            "id": 61010,
            "name": "Complexity - OO Inheritance and Polymorphism",
            "href": "AIP/technical-criteria/61010",
            "weight": 4
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "MISRA-CPP-2008-Expressions",
            "name": "Expressions",
            "href": "AIP/quality-standards/C-CPP/items/MISRA-CPP-2008-Expressions",
            "standard": "C-CPP"
        },
        {
            "id": "ASCRM-CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/CISQ/items/ASCRM-CWE-704",
            "standard": "CISQ"
        },
        {
            "id": "ASCSM-CWE-681",
            "name": "Numeric Types Incorrect Conversion",
            "href": "AIP/quality-standards/CISQ/items/ASCSM-CWE-681",
            "standard": "CISQ"
        },
        {
            "id": "CWE-681",
            "name": "Incorrect Conversion between Numeric Types",
            "href": "AIP/quality-standards/CWE/items/CWE-681",
            "standard": "CWE"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/CWE/items/CWE-704",
            "standard": "CWE"
        },
        {
            "id": "CWE-681",
            "name": "Incorrect Conversion between Numeric Types",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-681",
            "standard": "ISO-5055"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-704",
            "standard": "ISO-5055"
        },
        {
            "id": "CWE-681",
            "name": "Incorrect Conversion between Numeric Types",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-681",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-704",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "M7-2016",
            "name": "Poor Code Quality",
            "href": "AIP/quality-standards/OWASP/items/M7-2016",
            "standard": "OWASP"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
