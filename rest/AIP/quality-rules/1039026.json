{
    "id": 1039026,
    "name": "Avoid creating cookie without setting httpOnly option (JEE)",
    "href": "AIP/quality-rules/1039026",
    "critical": true,
    "maxWeight": 8,
    "associatedValueName": "Number of violation occurrences",
    "description": "Cross-site scripting attacks often access cookies in an attempt to steal session identifiers or authentication tokens. \nThis is why all major browsers support the HttpOnly cookie property that prevents client-side scripts from accessing the cookie. \nWhen HttpOnly is not enabled, attackers may more easily access user cookies.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "If read access is not properly restricted, then attackers can steal the sensitive information. If write access is not properly restricted, \nthen attackers can modify and possibly delete the data, causing incorrect results and possibly a denial of service.",
    "reference": "https://cwe.mitre.org/data/definitions/1004.html \nhttps://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure \nhttps://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure\nThis rule is compliant with CWE-1004, OWASP 2013 A6 and 2017 A3 - Sensitive Data Exposure",
    "remediation": "Always setting httpOnly option when creating a cookie",
    "remediationSample": "Cookie cookie = new Cookie(\"userName\",userName); \ncookie.setSecure(true); \ncookie.setHttpOnly(true); // HttpOnly flag \n\n_________________________________________ \nSolution (Servlet 3.0 configuration): \n<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" version=\"3.0\" > \n[...] \n<session-config > \n <cookie-config > \n  <http-only>true</http-only> \n  <secure>true</secure> \n </cookie-config> \n</session-config> \n</web-app>",
    "sample": "Sample\n\nCookie cookie = new Cookie(\"userName\",userName); \nresponse.addCookie(cookie);",
    "total": "Number of Java Methods",
    "alternativeName": "Always enable HttpOnly when creating cookies to avoid Cross-site scripting attacks",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062306,
            "name": "OWASP-2013-A6 Sensitive Data Exposure",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062323,
            "name": "OWASP-2017-A3 Sensitive Data Exposure",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-1004",
            "name": "Sensitive Cookie Without 'HttpOnly' Flag",
            "url": "https://cwe.mitre.org/data/definitions/1004.html",
            "description": "The software uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag."
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-AC-3",
            "name": "Access Enforcement",
            "url": "https://nvd.nist.gov/800-53/Rev4/control/AC-3",
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure",
            "description": "Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser."
        },
        {
            "standard": "OWASP",
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure",
            "description": "Many web applications do not properly protect sensitive data, such as credit cards, tax IDs, and authentication credentials. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data deserves extra protection such as encryption at rest or in transit, as well as special precautions when exchanged with the browser."
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70201",
            "name": "The application must set the HTTPOnly flag on session cookies.",
            "url": null,
            "description": "HTTPOnly is a flag included in a Set-Cookie HTTP response header. If the HTTPOnly flag is included in the HTTP response header, the cookie cannot be accessed through client side scripts like JavaScript.\n\nIf the HTTPOnly flag is set, even if a cross-site scripting (XSS) flaw in the application exists, and a user accidentally accesses a link that exploits this flaw, the browser will not reveal the cookie to a third party.\n\nThe HTTPOnly setting is browser dependent however most popular browsers support the feature. If a browser does not support HTTPOnly and a website attempts to set an HTTPOnly cookie, the HTTPOnly flag will be ignored by the browser, thus creating a traditional, script accessible cookie. As a result, the cookie (typically the session cookie) becomes vulnerable to theft or modification by a malicious script running on the client system."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
