{
    "id": 1003122,
    "type": "quality-rule",
    "name": "Avoid FrontController that adds all its commands within the Controller constructor (Flex)",
    "href": "AIP/quality-rules/1003122",
    "critical": false,
    "maxWeight": 5,
    "description": "adobe.ac.pmd.rules.cairngorm.FatControllerRule",
    "rationale": "Try to split them into methods where you add commands depending on their functional area.",
    "reference": "http://opensource.adobe.com/wiki/display/flexpmd/FlexPMD",
    "sample": "package control\n{\n   import control.GetItems1Command;\n   import control.GetItems1Event;\n   import control.GetItems2Command;\n   import control.GetItems2Event;\n   // A lot of other imports\n   \n   public class MyFrontController // VIOLATION\n   {\n      public function MyFrontController()\n      {\n         addCommand( \n            GetItems1Event.EVENT_NAME,\n            GetItems1Command );\n\n         addCommand( \n            GetItems2Event.EVENT_NAME,\n            GetItems2Command );\n\n         // A lot of other addCommand\n      }\n   } \n}",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1007000,
            "name": "Flex",
            "href": "AIP/technologies/1007000"
        }
    ],
    "qualityStandards": [
        
    ]
}
