{
    "id": 7938,
    "name": "Override all overloads of a base Class virtual Method",
    "href": "AIP/quality-rules/7938",
    "critical": false,
    "maxWeight": 2,
    "associatedValueName": "Number of missing overridden methods",
    "description": "This rule searches for derived C++ classes containing at least one virtual method which should be redeclared for the following reasons:\n- They overload one or several overload(s)/signature(s) of a given virtual method of the parent classes (ex: 'mymethod()' and 'mymethod(int)')\n- Only some of these overloads/signatures (of the given virtual method) are redefined in the child class (i.e. for a given method at least one signature/overload is missing).",
    "output": "Associated to each C++ class with violations, the Quality Rule provides:\n- The number of missing overridden methods\n- Bookmarks for violation occurrences found in the source code:\n  - Parent class method which must be overridden",
    "rationale": "When a virtual method is overridden then the overloads of that method in the base class are not visible from the derived class. If all overloaded functions are not brought into the derived class by overriding them or using a declaration, then you can get surprising results when calling member methods with the same name.",
    "reference": "Industrial Strength C++ 7.16\nEffective C++, Item 37",
    "remediation": "Redefine the method in the child class.",
    "sample": "class Base \n{ \n   public: \n       virtual void foo( short ); \n       virtual void foo( double ); \n}; \nclass Derived : public Base \n{ \n   public: \n       virtual void foo( short );  // => VIOLATION foo(double) not redefined!\n       void bar() \n       { \n         foo( 0.1 ); // calls Derived::foo( short )! \n       } \n};",
    "total": "Number of C++ classes having at least one virtual method",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61003,
            "name": "Programming Practices - OO Inheritance and Polymorphism",
            "weight": 2,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70385",
            "name": "The application development team must follow a set of coding standards.",
            "url": null,
            "description": "Coding standards are guidelines established by the development team or individual developers that recommend programming style, practices and methods.  The coding standards employed will vary based upon the programming language that is being used to develop the application and the development team.\n\nCoding standards often cover the use of white space characters, variable naming conventions, function naming conventions, and comment styles.  Implementing coding standards provides many benefits to the development process.  These benefits include code readability, coding consistency among both individual and teams of developers as well as ease of code integration.  \n\nThe following are examples of what will typically be in a coding standards document.  This list is an example of what one can expect to find in typical coding standard documents and is not a comprehensive list:\n\n- Indent style conventions\n- Naming conventions\n- Line length conventions\n- Comment conventions\n- Programming best practices\n- Programming style conventions\n\nCoding standards allow developers to quickly adapt to code which has been developed by various members of a development team.  Coding standards are useful in the code review process as well as in situations where a team member leaves and duties must then be assigned to another team member.  \n\nCode conforming to a standard format is easier to read, especially if someone other than the original developer is examining the code.  In addition, formatted code can be debugged and corrected faster than unformatted code.\n\nIntroducing coding standards can help increase the consistency, reliability, and security of the application by ensuring common programming structures and tasks are handled by similar methods, as well as, reducing the occurrence of common logic errors."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
