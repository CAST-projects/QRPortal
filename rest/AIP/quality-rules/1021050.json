{
    "id": 1021050,
    "name": "Avoid using unsecured cookie",
    "href": "AIP/quality-rules/1021050",
    "critical": true,
    "associatedValueName": "Single Value",
    "description": "Cross-site scripting attacks often access cookies in an attempt to steal session identifiers or authentication tokens. This is why all major browsers support the secure cookie property that prevents client-side scripts from accessing the cookie. The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session. This rule is compliant with OWASP 2013 A6 and 2017 A3 - Sensitive Data Exposure.",
    "output": "Line and column for each violation.\nAssociated value => number of violations found",
    "rationale": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",
    "remediation": "Always setting secure option when creating a cookie or set the environment variable CSRF_COOKIE_SECURE to 'True' in the Django settings file.",
    "remediationSample": "def view_method(request):\n  res = HttpResponse()\n  res.set_cookie(\"emailCookie\", email, secure=True)\n  return res\n...\nor alternatively keep the formulation and modify the settings file (such as settings.py) with:\nCSRF_COOKIE_SECURE = True ",
    "sample": "from django.http.response import HttpResponse\n...\ndef view_method(request):\n  res = HttpResponse()\n  res.set_cookie(\"emailCookie\", email)\n  return res\n... ",
    "total": "python functions",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66066,
            "name": "Secure Coding - Encapsulation",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "AIP/technologies/1021000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-614",
            "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
            "url": "https://cwe.mitre.org/data/definitions/614.html",
            "description": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session."
        },
        {
            "standard": "OWASP",
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure",
            "description": "Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser."
        },
        {
            "standard": "OWASP",
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure",
            "description": "Many web applications do not properly protect sensitive data, such as credit cards, tax IDs, and authentication credentials. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data deserves extra protection such as encryption at rest or in transit, as well as special precautions when exchanged with the browser."
        }
    ]
}
