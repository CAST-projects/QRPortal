{
    "id": 7434,
    "name": "Ensure to override both equals() and hashCode()",
    "href": "AIP/quality-rules/7434",
    "critical": true,
    "severity": 20,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.jee",
        "href": "AIP/extensions/com.castsoftware.jee"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "All Java objects are expected to obey a number of invariants related to equality. One of these invariants is that equal objects must have equal hashcodes.\nFor example, a class that is made persistent requires both hashCode() and equals() methods to be defined. This issue can prevent the software from running reliably, due to incorrect or unexpected comparison results. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n\nThis rule reports all classes that override\n- only boolean equals(Object) but not overriding hashCode()\nor \n- only int hashCode() but not overriding equals()",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Often classes are used in HashMap to provide an efficient storage and retrieval. The Java platform architects anticipated the importance of hash-based collection classes -- such as Hashtable, HashMap, and HashSet -- in typical Java applications, and comparing against many objects with equals() can be computationally expensive.\nIf your java class is used or can be used in a hash-based collection, override both of these methods to avoid any issues that can be painful to find when the issue appear in production because the error is not in the code that is present, but in the code that is absent.",
    "reference": "https://www.geeksforgeeks.org/override-equalsobject-hashcode-method/\nhttps://howtodoinjava.com/java/basics/java-hashcode-equals-methods/",
    "remediation": "Always override hashCode() when overriding equals() method",
    "remediationSample": "class Example {\n   int id;\n\n   public int getId() {\n      return id;\n   }\n    public boolean equals(Object obj) {\n         return (obj instanceof Example\n            && id == ((Example) obj).getId());\n   }\n   public int hashCode() {  // FIXED\n       return id/10;\n   }\n}",
    "sample": "class Example {\n   int id;\n\n   public int getId() {\n      return id;\n   }\n    public boolean equals(Object obj) {\n         return (obj instanceof Example\n            && id == ((Example) obj).getId());\n   }\n       // VIOLATION: missing hashCode()\n}",
    "total": "Number of classes that override equals() or (not exclusive) hashCode()",
    "alternativeName": "Ensure to overrides equals() and hashCode()",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062168,
            "name": "ASCRM-RLB-4 - Persistant Storable Data Element without Proper Comparison Control Element",
            "href": "AIP/technical-criteria/1062168",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061147,
            "name": "CWE-1097 - Persistent Storable Data Element without Associated Comparison Control Element",
            "href": "AIP/technical-criteria/1061147",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61010,
            "name": "Complexity - OO Inheritance and Polymorphism",
            "href": "AIP/technical-criteria/61010",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCRM-RLB-4",
            "name": "Persistant Storable Data Element without Proper Comparison Control Element",
            "href": "AIP/quality-standards/CISQ/items/ASCRM-RLB-4",
            "standard": "CISQ"
        },
        {
            "id": "CWE-581",
            "name": "Object Model Violation: Just One of Equals and Hashcode Defined",
            "href": "AIP/quality-standards/CWE/items/CWE-581",
            "standard": "CWE"
        },
        {
            "id": "CWE-1097",
            "name": "Persistent Storable Data Element without Associated Comparison Control Element",
            "href": "AIP/quality-standards/CWE/items/CWE-1097",
            "standard": "CWE"
        },
        {
            "id": "CWE-1097",
            "name": "Persistent Storable Data Element without Associated Comparison Control Element",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-1097",
            "standard": "ISO-5055"
        },
        {
            "id": "CWE-1097",
            "name": "Persistent Storable Data Element without Associated Comparison Control Element",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-1097",
            "standard": "OMG-ASCQM"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
