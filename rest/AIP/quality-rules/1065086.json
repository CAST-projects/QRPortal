{
    "id": 1065086,
    "name": "Avoid casting and converting a pointer type to an integral type (C/C++)",
    "href": "AIP/quality-rules/1065086",
    "critical": false,
    "severity": 10,
    "maxWeight": 5,
    "extension": {
        "name": "com.castsoftware.cpp",
        "href": "AIP/extensions/com.castsoftware.cpp"
    },
    "description": "This rule will raise a violation when a pointer type is cast into an integer type",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "The size of integer that is required when a pointer is converted to an integer is implementation-defined. Casting between a pointer and an integer type should be avoided where possible to prevent data loss, but maybe unavoidable when addressing memory-mapped registers or other hardware-specific features.\nNote that C++ does not permit a pointer to be converted to any floating type.",
    "reference": "Standards Reference:\nMISRA C++ 2008, Rule 5-2-9: A cast should not convert a pointer type to an integral type.\nMISRA C 2012, 11.4: A conversion should not be performed between a pointer to object and an integer type\nAUTOSAR C++, 2014, M5-2-9: A cast should not convert a pointer type to an integral type.",
    "remediation": "Do not cast a pointer type to an integer.\n\nNote: When you have to necessarily do that ensure that the memory allocated to the int is sufficient",
    "sample": "struct S\n{\nint32_t i;\nint32_t j;\n};\nvoid f ( S * s )\n{\nint32_t p = reinterpret_cast< int32_t >( s ); // Non-compliant\n}\n\n______________________________________________________\nC:\nint *p",
    "total": "Number of C++ methods and Functions",
    "alternativeName": "Ensure that pointer types are not cast to integral types",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062152,
            "name": "ASCRM-CWE-704 - Incorrect Type Conversion or Cast",
            "href": "AIP/technical-criteria/1062152",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61029,
            "name": "Complexity - Dynamic Instantiation",
            "href": "AIP/technical-criteria/61029",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "id": "AUTOSAR-CPP-2014-Expressions",
            "name": "Expressions",
            "href": "AIP/quality-standards/C-CPP/items/AUTOSAR-CPP-2014-Expressions",
            "standard": "C-CPP"
        },
        {
            "id": "MISRA-C-2012-Expressions",
            "name": "Expressions",
            "href": "AIP/quality-standards/C-CPP/items/MISRA-C-2012-Expressions",
            "standard": "C-CPP"
        },
        {
            "id": "MISRA-CPP-2008-Expressions",
            "name": "Expressions",
            "href": "AIP/quality-standards/C-CPP/items/MISRA-CPP-2008-Expressions",
            "standard": "C-CPP"
        },
        {
            "id": "ASCRM-CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/CISQ/items/ASCRM-CWE-704",
            "standard": "CISQ"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/CWE/items/CWE-704",
            "standard": "CWE"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-704",
            "standard": "ISO-5055"
        },
        {
            "id": "CWE-704",
            "name": "Incorrect Type Conversion or Cast",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-704",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "M7-2016",
            "name": "Poor Code Quality",
            "href": "AIP/quality-standards/OWASP/items/M7-2016",
            "standard": "OWASP"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
