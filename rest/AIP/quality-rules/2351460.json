{
    "id": 2351460,
    "name": "ColdFusion: Avoid using SQL queries inside a loop",
    "href": "AIP/quality-rules/2351460",
    "critical": true,
    "description": "This rule retrieves all templates using at least one SQL query (cfquery) inside a cfloop.",
    "output": "This report lists all Templates that have SQL queries inside loops.\nIt provides the following information: Template full name\n Number of loops having a SQL query",
    "rationale": "Having an SQL query inside a loop is usually the source of performance and scalability problems especially if the number of iterations become very high (for example if it is dependent on the data returned from the database). This iterative pattern has proved to be very dangerous for application performance and scalability. Database servers handle in a much better set-oriented pattern rather than pure iterative ones.",
    "remediation": "The remediation is often to replace the iterative approach based on a loop with a set-oriented one and thus modify the query.",
    "total": "Number of Templates",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66068,
            "name": "Efficiency - Expensive Calls in Loops",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 2351000,
            "name": "NO LABEL",
            "href": "AIP/technologies/2351000"
        }
    ],
    "qualityStandards": [
        
    ]
}
