{
    "id": 1020064,
    "name": "Avoid Superclass knowing Subclass (Javascript)",
    "href": "AIP/quality-rules/1020064",
    "critical": false,
    "maxWeight": 9,
    "associatedValueName": "Number of violation occurrences",
    "description": "A Superclass is not allowed to have knowledge of one of its Subclasses. The Superclass has knowledge of the Subclass if the Superclass directly calls a Subclass-method, uses a Subclass-attribute or refers to the name of the Subclass.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Referencing down the inheritance tree is against Object-Oriented coding practices. It is a way of having two-way inheritance between class and subclass. This is an indication of poor class design and class inheritance. Such practices increase the complexity of the application.",
    "reference": "CISQ rule: ASCRM-RLB-14.",
    "remediation": "Review the design of the Class hierarchy",
    "sample": "class Base { \nsomething() \n{ c = new MySubclass() } \n} \n\nclass MySubclass extends Base { \n}",
    "total": "Number of Javascript Classes",
    "alternativeName": "Ensure that there are no references to subclass in the superclass to subdue complexity of your code",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1062103,
            "name": "CISQ-Reliability",
            "href": "AIP/business-criteria/1062103"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061001,
            "name": "ISO-5055-Maintainability",
            "href": "AIP/business-criteria/1061001"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062160,
            "name": "ASCRM-RLB-14 - Parent Class Element with References to Child Class Element",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061121,
            "name": "CWE-1062: Parent Class with References to Child Class",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61003,
            "name": "Programming Practices - OO Inheritance and Polymorphism",
            "weight": 9,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCRM-RLB-14",
            "name": "Parent Class Element with References to Child Class Element",
            "url": null,
            "description": "Objective\nAvoid parent class references to child class(es)\n\nConsequence\nSoftware that does not follow the principles of inheritance and polymorphism results in unexpected behaviors\n\nMeasure Element\nNumber of instances where a parent class element that is used in the 'to' association of an Extends class relation, references the child class element used in the 'from' association of an Extends class relation, directly or indirectly through a parent and child class element, using a callable or data relation (the reference statement is made directly to the child class element or to any one of its own method or member elements)\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-1062",
            "name": "Parent Class with References to Child Class",
            "url": "https://cwe.mitre.org/data/definitions/1062.html",
            "description": "The code has a parent class that contains references to a child class, its methods, or its members."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-1062",
            "name": "Parent Class with References to Child Class",
            "url": "https://cwe.mitre.org/data/definitions/1062.html",
            "description": "The code has a parent class that contains references to a child class, its methods, or its members."
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-1062",
            "name": "Parent Class with References to Child Class",
            "url": "https://cwe.mitre.org/data/definitions/1062.html",
            "description": "The code has a parent class that contains references to a child class, its methods, or its members."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
