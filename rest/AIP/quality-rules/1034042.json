{
    "id": 1034042,
    "name": "Avoid second order HTTP header injection (PHP)",
    "href": "AIP/quality-rules/1034042",
    "critical": true,
    "severity": 30,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.php.security",
        "href": "AIP/extensions/com.castsoftware.php.security"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This metric uses Psalm data-flow engine to detect a call path where result from database query is sent to a raw HTTP header without prior validation and sanitization.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "The risk of a header injection depends hugely on your environment.\n\nIf your webserver supports something like XSendFile / X-Accel, an attacker could potentially access arbitrary files on the systems.\n\nIf your system does not do that, there may be other concerns, such as:\n\n    - Cookie Injection\n    - Open Redirects\n    - Proxy Cache Poisoning",
    "reference": "Unvalidated Redirects and Forwards Cheat Sheet\nhttps://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\n\nOWASP Wiki for Cache Poisoning\nhttps://owasp.org/www-community/attacks/Cache_Poisoning\n\nCWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\nhttps://cwe.mitre.org/data/definitions/113.html\n\nCWE-601: URL Redirection to Untrusted Site ('Open Redirect')\nhttps://cwe.mitre.org/data/definitions/601.html\n\nCWE-644: Improper Neutralization of HTTP Headers for Scripting Syntax\nhttps://cwe.mitre.org/data/definitions/644.html",
    "remediation": "Make sure only the value and not the key can be set by an attacker. (e.g. header('Location: ' . $_GET['target']);)\n\nVerify the set values are sensible. Consider using an allow list. (e.g. for redirections)",
    "remediationSample": "<?php\n\n/**\n* @psalm-taint-escape header\n*/\nfunction my_escaping_function_for_headers(string input) : string {\n    // Check that input is part of a hard-coded white-list of permitted headers\n};\n\nfunction sendHeader(PDOStatement $stmt) {\n    $stmt->execute();\n    $row = $stmt->fetch();\n    $header = $row[\"header\"];\n    $header = my_escaping_function_for_headers($header);  // USE A FUNCTION ANNOTATED WITH @psalm-taint-escape header\n    header($header);                                      // FIXED\n}",
    "sample": "<?php\n\nfunction sendHeader(PDOStatement $stmt) {\n    $stmt->execute();\n    $row = $stmt->fetch();\n    $header = $row[\"header\"];\n    header($header);                                      // VIOLATION\n}",
    "total": "Number of PHP artifacts",
    "alternativeName": "Ensure you sanitize HTTP headers constructed from database query",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1066213,
            "name": "CWE-113 - Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
            "href": "AIP/technical-criteria/1066213",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1066701,
            "name": "CWE-601 - URL Redirection to Untrusted Site ('Open Redirect')",
            "href": "AIP/technical-criteria/1066701",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1066744,
            "name": "CWE-644 - Improper Neutralization of HTTP Headers for Scripting Syntax",
            "href": "AIP/technical-criteria/1066744",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062301,
            "name": "OWASP-2013-A1 - Injection",
            "href": "AIP/technical-criteria/1062301",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062321,
            "name": "OWASP-2017-A1 - Injection",
            "href": "AIP/technical-criteria/1062321",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062343,
            "name": "OWASP-2021-A03 - Injection",
            "href": "AIP/technical-criteria/1062343",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063114,
            "name": "PCI-Requirement-6.5.1 - Injection flaws, particularly SQL injection",
            "href": "AIP/technical-criteria/1063114",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "AIP/technologies/1017000"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-113",
            "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
            "href": "AIP/quality-standards/CWE/items/CWE-113",
            "standard": "CWE"
        },
        {
            "id": "CWE-601",
            "name": "URL Redirection to Untrusted Site ('Open Redirect')",
            "href": "AIP/quality-standards/CWE/items/CWE-601",
            "standard": "CWE"
        },
        {
            "id": "CWE-644",
            "name": "Improper Neutralization of HTTP Headers for Scripting Syntax",
            "href": "AIP/quality-standards/CWE/items/CWE-644",
            "standard": "CWE"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-10",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "A03-2021",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A03-2021",
            "standard": "OWASP"
        },
        {
            "id": "API8-2019",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/API8-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        },
        {
            "id": "STIG-V-222609",
            "name": "The application must not be subject to input handling vulnerabilities.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222609",
            "standard": "STIG-V5"
        },
        {
            "id": "STIG-V-222609",
            "name": "The application must not be subject to input handling vulnerabilities.",
            "href": "AIP/quality-standards/STIG-V6/items/STIG-V-222609",
            "standard": "STIG-V6"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
