{
    "id": 1007284,
    "name": "Avoid Cookie Misconfiguration (httpOnly flag) (PHP)",
    "href": "AIP/quality-rules/1007284",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Reasoning",
    "description": "httpOnly flag prevents that the cookie is accessed by malicious scripts, for example during a Cross-Site Scripting attack. This QR detects scenarios where httpOnly flag can be used but has not.",
    "output": "This report lists all artifacts that cause cookie misconfiguration (http flag). \nThis QR provides the following information:\nArtifact Full Name",
    "rationale": "Cookies are often used to store a session identifier of the web application's state for a specific user. In order to harden against related attacks, such as session riding that can lead to the compromise of user data or the takeover of adminstrator sessions, a secure configuration of sensitive cookies is crucial. It has been detected that a new cookie is set insecure within the HTTP response header which can be improved by enabling additional flags.",
    "reference": "https://cwe.mitre.org/data/definitions/200.html",
    "remediation": "For additional security, set httpOnly flag - the httpOnly flag can be set to TRUE in the 7th parameter.",
    "total": "Number of Artifacts",
    "alternativeName": null,
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "AIP/technologies/1017000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-1004",
            "name": "Sensitive Cookie Without 'HttpOnly' Flag",
            "url": "https://cwe.mitre.org/data/definitions/1004.html",
            "description": "The software uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag."
        },
        {
            "standard": "OWASP",
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure",
            "description": "Many web applications do not properly protect sensitive data, such as credit cards, tax IDs, and authentication credentials. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data deserves extra protection such as encryption at rest or in transit, as well as special precautions when exchanged with the browser."
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70201",
            "name": "The application must set the HTTPOnly flag on session cookies.",
            "url": null,
            "description": "HTTPOnly is a flag included in a Set-Cookie HTTP response header. If the HTTPOnly flag is included in the HTTP response header, the cookie cannot be accessed through client side scripts like JavaScript.\n\nIf the HTTPOnly flag is set, even if a cross-site scripting (XSS) flaw in the application exists, and a user accidentally accesses a link that exploits this flaw, the browser will not reveal the cookie to a third party.\n\nThe HTTPOnly setting is browser dependent however most popular browsers support the feature. If a browser does not support HTTPOnly and a website attempts to set an HTTPOnly cookie, the HTTPOnly flag will be ignored by the browser, thus creating a traditional, script accessible cookie. As a result, the cookie (typically the session cookie) becomes vulnerable to theft or modification by a malicious script running on the client system."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
