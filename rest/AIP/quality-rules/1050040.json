{
    "id": 1050040,
    "name": "Avoid using SecTransform API",
    "href": "AIP/quality-rules/1050040",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "The SecTransform API must not be used for Security are deprecated and must not be used within an iOS application.",
    "output": "This report lists all uses of SecTransform functions like:\n- SecTransformCreateReadTransformWithReadStream\n- SecTransformRef\n- SecTransformGetTypeID\n- SecEncodeTransformCreate\n- SecDecodeTransformCreate\n- SecEncryptTransformCreate\n- SecDecryptTransformCreate\n- SecEncryptTransformGetTypeID\n- SecDecryptTransformGetTypeID\n- SecSignTransformCreate\n- SecVerifyTransformCreate\n- SecDigestTransformCreate\n- SecDigestTransformGetTypeID\n- SecTransformCreate\n- SecTransformRegister\n- SecTransformCreateFP\n- SecTransformInstanceBlock\n- SecTransformImplementationRef\n- SecTransformCreateGroupTransform\n- SecTransformFindByName\n- SecGroupTransformRef\n- SecGroupTransformGetTypeID\n- SecTransformSetAttribute\n- SecTransformGetAttribute\n- SecTransformCustomSetAttribute\n- SecTransformCustomGetAttribute\n- SecTransformPushbackAttribute\n- SecTransformAttributeRef\n- SecTransformStringOrAttributeRef\n- SecTransformMetaAttributeType\n- SecTransformSetDataAction\n- SecTransformSetAttributeAction\n- SecTransformSetTransformAction\n- SecTransformActionBlock\n- SecTransformAttributeActionBlock\n- SecTransformDataBlock\n- SecTransformConnectTransforms\n- SecTransformExecute\n- SecTransformExecuteAsync\n- SecTransformNoData\n- SecTransformCopyExternalRepresentation\n- SecTransformCreateFromExternalRepresentation \nAssociated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Mobile apps that communicate over the Internet often fail to properly implement SSL/TLS, if they implement it at all. These failures could leave users\u2019 communications open to interception and even session hijacking. Using SSL/TLS properly involves careful checking of the server\u2019s certificate chain. \nThus, an app or library that validates SSL/TLS certificates should do the following checks to ensure strong.",
    "reference": "https://developer.apple.com/documentation/security/security_transforms?language=objc",
    "remediation": "Prefer using SecKey API instead.",
    "total": "Number of Objective-C artifacts",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1050001,
            "name": "Objective-C",
            "href": "AIP/technologies/1050001"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-327",
            "name": "Broken or Risky Cryptographic Algorithm Usage",
            "url": null,
            "description": "Objective\nAvoid failure to use vetted cryptographic libraries\n\nConsequence\nSoftware using broken or risky cryptographic algorithm incurs the risk of sensitive data being compromised\n\nMeasure Element\nNumber of instances where the application uses the cryptographic deployed component which is not part of the list of vetted cryptographic deployed components.\n\n"
        },
        {
            "standard": "OWASP",
            "id": "M5-2016",
            "name": "Insufficient Cryptography",
            "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M5-Insufficient_Cryptography",
            "description": "In order to exploit this weakness, an adversary must successfully return encrypted code or sensitive data to its original unencrypted form due to weak encryption algorithms or flaws within the encryption process."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
