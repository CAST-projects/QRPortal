{
    "id": 8220,
    "name": "Avoid using deprecated method, constructor, field, type or package",
    "href": "AIP/quality-rules/8220",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "A violation is reported if a deprecated class, method, field variable or type used/called in the java code:\n   ",
    "output": "A violation is reported if a deprecated java entity is used/called by a method, constructor, field or type. \n  ",
    "rationale": "The purpose is to avoid to use the deprecated  enity as currently good and appropriate new version of the same is available. The deprecated entity may be dropped sometime in near future without any intimation.\n",
    "reference": "https://stackoverflow.com/questions/9031832/how-to-declare-or-mark-a-java-method-as-deprecated\n             https://stackoverflow.com/questions/14627313/what-does-deprecated-mean-on-method-parameters-and-local-variables\n",
    "remediation": "Check the documentation of the deprecated entity and avoid not to use the same. Some other way can be approached or new method, type or class can be used instead",
    "remediationSample": " \n-Sample 1\nprivate void dumpResponse(ServerResponse response) {\n  \n  try {\n    String resp = new String(response.getByteArray());\n    logger.debug(\"Response Dump: \"+resp);\n    response.setResponseStream(new StringBufferInputStream(resp)); // as StringBufferInputStream is Deprecated the preferred way to create a stream from a string is via the StringReader class.\n  } catch (CommunicationException e) {\n    e.printStackTrace();\n  }\n  \n}\n \n---------------------------------------------------------------------------------\npublic class MyTest {\n  \n  public static void main(String[] args) {\n    \n    List list = new List();\n    list.addItem(\"MyItemOne\"); // addItem is deprecated use add\n    list.addItem(\"MyItemTwo\"); // addItem is deprecated use add\n    list.addItem(\"MyItemThree\"); // addItem is deprecated use add\n    \n    list.clear(); // clear is deprecated use removeall\n  }\n}\n\n",
    "sample": " class Test\n            {\n                public void funUsingDerecatedField()\n                {\n                    value = 10;\n                }\n                @Deprecated\n                int value;\n            }\n            public class DeprecatedUse {\n                public static void main(String[] args) {\n                      Test obj = new Test();\n            obj.funUsingDerecatedField(); // VIOLATION as function using a deprecated field is called\n                }\n            }\n           \n",
    "total": "Number of Java Artifacts",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 6,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-477",
            "name": "Use of Obsolete Function",
            "url": "https://cwe.mitre.org/data/definitions/477.html",
            "description": "The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained."
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70385",
            "name": "The application development team must follow a set of coding standards.",
            "url": null,
            "description": "Coding standards are guidelines established by the development team or individual developers that recommend programming style, practices and methods.  The coding standards employed will vary based upon the programming language that is being used to develop the application and the development team.\n\nCoding standards often cover the use of white space characters, variable naming conventions, function naming conventions, and comment styles.  Implementing coding standards provides many benefits to the development process.  These benefits include code readability, coding consistency among both individual and teams of developers as well as ease of code integration.  \n\nThe following are examples of what will typically be in a coding standards document.  This list is an example of what one can expect to find in typical coding standard documents and is not a comprehensive list:\n\n- Indent style conventions\n- Naming conventions\n- Line length conventions\n- Comment conventions\n- Programming best practices\n- Programming style conventions\n\nCoding standards allow developers to quickly adapt to code which has been developed by various members of a development team.  Coding standards are useful in the code review process as well as in situations where a team member leaves and duties must then be assigned to another team member.  \n\nCode conforming to a standard format is easier to read, especially if someone other than the original developer is examining the code.  In addition, formatted code can be debugged and corrected faster than unformatted code.\n\nIntroducing coding standards can help increase the consistency, reliability, and security of the application by ensuring common programming structures and tasks are handled by similar methods, as well as, reducing the occurrence of common logic errors."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
