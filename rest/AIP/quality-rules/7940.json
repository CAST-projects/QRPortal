{
    "id": 7940,
    "name": "Avoid Stateful Beans not removed",
    "href": "AIP/quality-rules/7940",
    "critical": true,
    "description": "Reports all classes that define an instance variable or local variable whose type is a local or remote business interface of a Stateful Session and that don't invoke the remove method in any of its methods. \nIt will also report these classes when the Stateful Session Bean doesn't implement the remove method.\n\nThe remove method is defined by means of the @Remove annotation or remove-method deployment descriptor element on the Sateful Session Bean.\n\nNote that in the case of several EJB instance there is not grantee that all EJB instance will be removed. \nWe only check there is at least one call to remove method for the concerned class",
    "output": "This report lists all classes that define a variable whose type is a remote or local business interface of a stateful bean and that don't call the remove method.\n\nIt provides the following information:\n     Class Full Name",
    "rationale": "Since stateful session beans cannot be pooled and reused like stateless\nbeans, there is a real danger of accumulating too many of them if the remove method is not implemented or if this method is not called.",
    "reference": "EJB 3 in Action (ISBN 1-933988-34-7) page 94\nhttp://what-when-how.com/enterprise-javabeans-3/stateful-session-beans-ejb-3/",
    "remediation": "Call this method from the client side",
    "remediationSample": "@Remote\npublic interface MyRemoteBean {\n    public int aMethod();\n    public void removeMethod();\n}\n\n@Stateful\npublic class MyBean implements MyRemoteBean {\n    ...\n    public int aMethod() {\n        ...\n    }\n\n    @Remove\n    public void removeMethod() {\n        ...\n    }\n}\n\npublic class Client {\n\n    private static @EJB MyRemoteBean myClientBean;\n\n    public static void main(String[] args) {\n        Client client = new Client(args);\n        client.callServer();\n    }\n\n    public Client(String[] args) {}\n\n    public void callServer() {\n\n        try {\n            int res=myClientBean.aMethod();\n            myClientBean.removeMethod(); // FIXED\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    }\n}",
    "sample": "@Remote\npublic interface MyRemoteBean {\n    public int aMethod();\n    public void removeMethod();\n}\n\n@Stateful\npublic class MyBean implements MyRemoteBean {\n    ...\n    public int aMethod() {\n        ...\n    }\n\n    @Remove\n    public void removeMethod() {\n        ...\n    }\n}\n\npublic class Client { // VIOLATION\n\n    private static @EJB MyRemoteBean myClientBean;\n\n    public static void main(String[] args) {\n        Client client = new Client(args);\n        client.callServer();\n    }\n\n    public Client(String[] args) {}\n\n    public void callServer() {\n        try {\n            int res=myClientBean.aMethod();\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    }\n}",
    "total": "Number of classes that define a variable whose type is a remote or local business interface of a stateful bean",
    "alternativeName": "Ensure defining a business method for removing the Stateful bean instance and call it from the client side",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61018,
            "name": "Efficiency - Memory, Network and Disk Space Management",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
