{
    "id": 1007156,
    "name": "Avoid using eval expressions (PHP)",
    "href": "AIP/quality-rules/1007156",
    "critical": false,
    "maxWeight": 5,
    "description": "This rule searches for all artifacts using eval expression. Artifacts considered for this QR are PHP Section, method, function and constructors.",
    "output": "This report lists all artifacts using eval expression.\n\nThis QR provides the following information:\nArtifact full name.",
    "rationale": "Source code containing eval-expressions is difficult to test and represents a security risk.",
    "reference": "https://cwe.mitre.org/data/definitions/624.html",
    "remediation": "Modify the source code to reduce the use of eval expression.",
    "sample": "<?php\nclass CastTest {\n public function test( $param ) {\n  if (10 === $param) {\n   eval('$param = 10;');   //violation\n  }\n }\n}\n?>",
    "total": "Number of Artifacts",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "AIP/technologies/1017000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-78",
            "name": "OS Command Injection Improper Input Neutralization",
            "url": null,
            "description": "Objective\nAvoid failure to sanitize user input in use as operating system commands\n\nConsequence\nSoftware unaware of OS command control incurs the risk of unauthorized command execution, possibly used to disable the software, or possibly leading to unauthorized read and modify data access\n\nMeasure Element\nNumber of instances where an external value is entered into the application through the user interface ReadsUI action, transformed throughout the application along the sequence composed of ActionElements with DataRelations relations, some of which being part of named callable and method control elements, and ultimately used in the in the platform action to be executed by the execution environment; none of the callable or method control element of the transformation sequence being a vetted sanitization control element from the list of vetted sanitization control elements.\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-95",
            "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
            "url": "https://cwe.mitre.org/data/definitions/95.html",
            "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. eval)."
        },
        {
            "standard": "OWASP",
            "id": "A1-2013",
            "name": "Injection",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A1-Injection",
            "description": "Injection flaws, such as SQL, OS, and LDAP injection occur when untrusted data is sent to an interpreter as part of a command or query. The attackers' hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization."
        },
        {
            "standard": "OWASP",
            "id": "A1-2017",
            "name": "Injection",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A1-Injection",
            "description": "Injection flaws, such as SQL, NoSQL, OS, and LDAP injection, occur when untrusted data is sent to an interpreter as part of a command or query. The attacker's hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization."
        }
    ],
    "parameters": [
        {
            "name": "RuleName",
            "description": "External PHP Code scanner Rule Name",
            "technologies": [
                {
                    "id": 1017000,
                    "name": "PHP",
                    "href": "AIP/technologies/1017000",
                    "values": [
                        "EvalExpression"
                    ]
                }
            ]
        }
    ],
    "thresholds": [
        60.0,
        80.0,
        95.0,
        100.0
    ]
}
