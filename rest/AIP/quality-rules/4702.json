{
    "id": 4702,
    "name": "Avoid using 'Throwable.printStackTrace()' with no argument",
    "href": "AIP/quality-rules/4702",
    "critical": false,
    "maxWeight": 6,
    "associatedValueName": "Associated Value",
    "description": "Throwable.printStackTrace(...) prints a Throwable and its stack trace to some stream. If no argument is used, the default stream System.Err will be used, which could inadvertently expose sensitive information.\n\n\nThis rule will report a violation when printStackTrace is used without arguments : when the stack trace is printed to the default stream.",
    "output": "This report lists all Java artifacts using 'Throwable.printStackTrace()'. It provides the following information:\n - Artifact full name",
    "rationale": "Using 'Throwable.printStackTrace()' usually means that it is used to log the stack of errors, which has the risk of filling up the stdout or the log file.",
    "reference": "http://cwe.mitre.org/data/definitions/489.html\nOWASP Top 10 2017 Category A3 - Sensitive Data Exposure",
    "remediation": "Loggers should be used instead to print Throwables, as they have many advantages:\n\nUsers are able to easily retrieve the logs.\nThe format of log messages is uniform and allow users to browse the logs easily.",
    "sample": "public static void main(String[] args){\n    try {\n        test();\n    } catch (UnsupportedOperationException e) {\n        System.out.println(e);\n        e.printStackTrace();\n    }\n}",
    "total": "Number of non-abstract Java artifacts.",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCRM-CWE-396",
            "name": "Catch of overly broad exception types",
            "url": null,
            "description": "Remove instances where a function, method, procedure, stored procedure, sub-routine, etc. contains a catch of an exception whose type is part of a list of overly broad exception types"
        },
        {
            "standard": "CWE",
            "id": "CWE-396",
            "name": "Declaration of Catch for Generic Exception",
            "url": "https://cwe.mitre.org/data/definitions/396.html",
            "description": "Catching overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
