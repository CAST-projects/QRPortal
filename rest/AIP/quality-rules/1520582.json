{
    "id": 1520582,
    "name": "Siebel eScript: Avoid Functions destroying variables outside of the finally clause",
    "href": "AIP/quality-rules/1520582",
    "critical": false,
    "severity": 10,
    "maxWeight": 5,
    "extension": {
        "name": "com.castsoftware.siebel",
        "href": "AIP/extensions/com.castsoftware.siebel"
    },
    "associatedValueName": "Reason for violation(No variable destruction in a finally block|Missing variable destructions in a finally block)",
    "description": "This rule reports functions where the number of variable destructions at Function level is larger than the number in the Finally Clause of that Function. The number of variable destructions statements are counted.",
    "output": "This rule reports Functions destroying variables outside the Finally clause",
    "rationale": "Destroying object references should be made when object is no more used.\nHowever, it is quite hard to determine the exact place in the execution flow of a script.\nA wrong choice will lead to a crash.\nTherefore, the Finally block should be prefered for performing cleanup work, because it is always executed at the end of the script, whatever the success or failure of the script.",
    "reference": "https://docs.oracle.com/cd/E14004_01/books/eScript/Statements_Reference11.html#wp1004538\nhttps://it.toolbox.com/question/destroying-active-objects-in-siebel-8x-080612",
    "remediation": "While the interpreter takes care of object cleanup, it is a best practice to write code that explicitly destroys objects when they are no longer used. Explicit destruction of Siebel objects should occur in the procedure in which they are created.\nTo destroy objects in Siebel eScript, set each object to null in the reverse order of creation. Destroy child objects before parent objects.",
    "total": "Number of added or modified eScripts",
    "alternativeName": "Siebel eScript: Avoid Functions destroying variables outside of the finally clause",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063119,
            "name": "PCI-Requirement-6.5.5 - Improper error handling",
            "href": "AIP/technical-criteria/1063119",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1520000,
            "name": "Siebel",
            "href": "AIP/technologies/1520000"
        }
    ],
    "qualityStandards": [
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-11",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/quality-standards/PCI-DSS4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS4"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        10.0,
        50.0,
        80.0,
        99.0
    ]
}
