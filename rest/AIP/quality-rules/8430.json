{
    "id": 8430,
    "name": "Avoid using hardcoded seed or no seed at all for random values generation",
    "href": "AIP/quality-rules/8430",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "Functions that generate random or pseudorandom values, which are passed a seed, should not be called with a constant argument. If a pseudorandom number generator (such as CL_ABAP_RANDOM class or its variants) is seeded with a specific constant value, the values returned by GET_NEXT, INT and similar methods which return or assign values are predictable for an attacker that can collect a number of PRNG outputs.\n\nIf no seed is provided at all, the generation is also not random.\n\nClasses used to generate random /pseudorandom numbers:\n\nCL_ABAP_RANDOM\nCL_ABAP_RANDOM_DECFLOAT16\nCL_ABAP_RANDOM_DECFLOAT34\nCL_ABAP_RANDOM_FLOAT\nCL_ABAP_RANDOM_INT\nCL_ABAP_RANDOM_PACKED\nCL_ABAP_RANDOM_PACKED_DEC1\nCL_ABAP_RANDOM_PACKED_DEC2\nCL_ABAP_RANDOM_PACKED_DEC3\nCL_ABAP_RANDOM_PACKED_DEC4\nCL_ABAP_RANDOM_PACKED_DEC5\nCL_ABAP_RANDOM_PACKED_DEC6\nCL_ABAP_RANDOM_PACKED_DEC7\nCL_ABAP_RANDOM_PACKED_DEC8\nCL_ABAP_RANDOM_PACKED_DEC9\nCL_ABAP_RANDOM_PACKED_DEC10\nCL_ABAP_RANDOM_PACKED_DEC11\nCL_ABAP_RANDOM_PACKED_DEC12\nCL_ABAP_RANDOM_PACKED_DEC13\nCL_ABAP_RANDOM_PACKED_DEC14",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "If an attacker can guess (or knows) the seed, then the attacker may be able to determine the random numbers that will be produced from the PRNG.",
    "reference": "https://cwe.mitre.org/data/definitions/336.html\nhttps://software-heroes.com/en/blog/abap-quick-random-numbers",
    "remediation": "Functions that generate random or pseudorandom values must provide a seed argument which is not constant.\nExample:\n  GET TIME STAMP FIELD l_now.\n  g_seed = FRAC( l_now ) * 10000.\n  gcl_prng = cl_abap_random=>create( seed = g_seed ).",
    "sample": "In this sample : the values produced by the object r are predictable from the object s.\n\nDATA: s TYPE REF TO cl_abap_random,\n  r TYPE REF TO cl_abap_random,\n  var1 TYPE i,\n  var2 TYPE i.\n\ns = cl_abap_random=>create( seed = 12 ).\n\nDO 10 TIMES.\n  CALL METHOD s->int RECEIVING value = var1.\n  WRITE:/ var1.\nENDDO.\n\nr = cl_abap_random=>create( seed = 12 ).\n\nDO 10 TIMES.\n  CALL METHOD r->int RECEIVING value = var2.\n  WRITE:/ var2.\nENDDO.\n\nIn this example, pseudorandom number generators: r and s were identically seeded, so var1 = var2\n--------------------------\nSame thing with this code:\n\nDATA: s TYPE REF TO cl_abap_random,\n  r TYPE REF TO cl_abap_random,\n  var1 TYPE i,\n  var2 TYPE i.\n\ns = cl_abap_random=>create(  ).\n\nDO 10 TIMES.\n  CALL METHOD s->int RECEIVING value = var1.\n  WRITE:/ var1.\nENDDO.\n\nr = cl_abap_random=>create(  ).\n\nDO 10 TIMES.\n  CALL METHOD r->int RECEIVING value = var2.\n  WRITE:/ var2.\nENDDO.",
    "total": "Number of ABAP Artifacts",
    "alternativeName": "Avoid using hardcoded seed or no seed at all for random values generation",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": -15,
            "name": "ABAP",
            "href": "AIP/technologies/-15"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-336",
            "name": "Same Seed in Pseudo-Random Number Generator (PRNG)",
            "url": "https://cwe.mitre.org/data/definitions/336.html",
            "description": "A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized."
        },
        {
            "standard": "OWASP",
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure",
            "description": "Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser."
        },
        {
            "standard": "OWASP",
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure",
            "description": "Many web applications do not properly protect sensitive data, such as credit cards, tax IDs, and authentication credentials. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data deserves extra protection such as encryption at rest or in transit, as well as special precautions when exchanged with the browser."
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70245",
            "name": "The application must protect the confidentiality and integrity of transmitted information.",
            "url": null,
            "description": "Without protection of the transmitted information, confidentiality and integrity may be compromised since unprotected communications can be intercepted and either read or altered.\n\nThis requirement applies  to those applications that transmit data, or allow access to data non-locally. Application and data owners have a responsibility for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process. \n\nApplication and data owners need to identify the data that requires cryptographic protection. If no data protection requirements are defined as to what specific data must be encrypted and what data is non-sensitive and doesn't require encryption, all data must be encrypted.\n \nWhen transmitting data, applications need to leverage transmission protection mechanisms, such as TLS, SSL VPNs, or IPSEC.\n\nCommunication paths outside the physical protection of a controlled boundary are exposed to the possibility of interception and modification. Protecting the confidentiality and integrity of organizational information can be accomplished by physical means (e.g., employing physical distribution systems) or by logical means (e.g., employing cryptographic techniques). If physical means of protection are employed, then logical means (cryptography) do not have to be employed, and vice versa."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
