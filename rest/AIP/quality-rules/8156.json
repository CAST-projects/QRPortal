{
    "id": 8156,
    "name": "Persistent classes should implement GetHashCode() and Equals()",
    "href": "AIP/quality-rules/8156",
    "critical": false,
    "maxWeight": 9,
    "associatedValueName": "Number of violation occurrences",
    "description": "Reports all persistent classes that don't implement Object.GetHashCode or Object.Equals directly (class that is referenced in the mapping file) or in an inherited class that holds persistent fields (this is the case when a persistent class makes persistent inherited fields). ",
    "output": "This report lists all .Net persistent classes that don't implement Object.GetHashCode or Object.Equals directly.\n\nIt provides the following information:\n- Class Full Name",
    "rationale": "Whenever you work with objects in detached state, and especially if you test them for equality (usually in hash-based collections), you need to supply your own implementation of the equals() and hashCode() methods for your persistent classes.\n\nNevertheless, it's possible to build a complex application with identity (default) equals as long as you exercise discipline when dealing with detached objects from different sessions. If this concept of equality isn't what you want, you must override equals() in your persistent classes.",
    "remediation": "Check if you have instances from multiple sessions and implement Object.GetHashCode and Object.Equals if it is the case. If it is not the case, we recommend implementing it anyway to avoid issues during future evolutions. ",
    "remediationSample": "[Serializable]\npublic class MyObject\n{\n    public int n1 = 0;\n    public int n2 = 0;\n    public String str = null;\n\n    public override int GetHashCode()\n    {\n        return n1;\n    }\n\n    public override bool Equals(Object obj)\n    {\n        if (obj == null || !(obj is MyObject))\n            return false;\n        else\n            return n1 == ((MyObject)obj).n1;\n    }\n\n}",
    "sample": "[Serializable]\npublic class MyObject\n{\n    public int n1 = 0;\n    public int n2 = 0;\n    public String str = null;\n}",
    "total": "Number of persistent classes",
    "alternativeName": null,
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 9,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCRM-RLB-4",
            "name": "Persistant Storable Data Element without Proper Comparison Control Element",
            "url": null,
            "description": "Objective\nAvoid improper comparison capabilities of persistent data\n\nConsequence\nSoftware featuring known weak coding practices results in unexpected and erroneous behaviors\n\nMeasure Element\nNumber of instances where the persistent storable element has no dedicated control element handling comparison action elements from the required comparison control element list. (in case of technologies with class elements, this means situations where a persistent storable data element is a class that is made persistent while it does not implement method elements from the required comparison control element list now composed of method elements: for example, with JAVA, a required comparison control element list is {'hashCode()','equals()'} method elements)\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-581",
            "name": "Object Model Violation: Just One of Equals and Hashcode Defined",
            "url": "https://cwe.mitre.org/data/definitions/581.html",
            "description": "The software does not maintain equal hashcodes for equal objects."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
