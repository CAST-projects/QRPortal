{
    "id": 8156,
    "name": "Persistent classes should implement GetHashCode() and Equals()",
    "href": "AIP/quality-rules/8156",
    "critical": false,
    "maxWeight": 9,
    "associatedValueName": "Associated Value",
    "description": "Reports all persistent classes that don't implement Object.GetHashCode or Object.Equals directly (class that is referenced in the mapping file) or in an inherited class that holds persistent fields (this is the case when a persistent class makes persistent inherited fields). ",
    "output": "This report lists all .Net persistent classes that don't implement Object.GetHashCode or Object.Equals directly.\n\nIt provides the following information:\n- Class Full Name",
    "rationale": "Whenever you work with objects in detached state, and especially if you test them for equality (usually in hash-based collections), you need to supply your own implementation of the equals() and hashCode() methods for your persistent classes.\n\nNevertheless, it's possible to build a complex application with identity (default) equals as long as you exercise discipline when dealing with detached objects from different sessions. If this concept of equality isn't what you want, you must override equals() in your persistent classes.",
    "remediation": "Check if you have instances from multiple sessions and implement Object.GetHashCode and Object.Equals if it is the case. If it is not the case, we recommend implementing it anyway to avoid issues during future evolutions. ",
    "remediationSample": "[Serializable]\npublic class MyObject\n{\n    public int n1 = 0;\n    public int n2 = 0;\n    public String str = null;\n\n    public override int GetHashCode()\n    {\n        return n1;\n    }\n\n    public override bool Equals(Object obj)\n    {\n        if (obj == null || !(obj is MyObject))\n            return false;\n        else\n            return n1 == ((MyObject)obj).n1;\n    }\n\n}",
    "sample": "[Serializable]\npublic class MyObject\n{\n    public int n1 = 0;\n    public int n2 = 0;\n    public String str = null;\n}",
    "total": "The number of persistent classes",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 9,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "AIP",
            "id": "AIP-HA-INTERNAL",
            "name": "HA - internal failure mitigation",
            "url": "",
            "description": "Quality rules related to the presence of occurrences of structural coding patterns that are known to cause functional failures"
        }
    ]
}
