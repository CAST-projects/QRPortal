{
    "id": 1020068,
    "name": "Avoid return statement in finally block (Javascript)",
    "href": "AIP/quality-rules/1020068",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "Reports all methods that contain an abrupt in a finally block. An abrupt completion of a statement or block occurs when it throws an exception, executes a break or continues to an enclosing statement, or executes a return from the method.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Care must be taken if completion of a try-catch block occurs as a result of executing a return. If a finally block also returns a value, then that return supersedes any previous return in the try-catch block. Also, if an exception was thrown in the try or catch blocks that was not caught, then execution of a return in the finally block prevents the exception from being thrown to the caller (because it is not possible for the caller to simultaneously evaluate the return and catch the exception). This is also valid for break or continue instructions.",
    "reference": "OWASP \nhttp://www.owasp.org/index.php/Return_Inside_Finally_Block \n\nCWE \nhttp://cwe.mitre.org/data/definitions/584.html \n\nCISQ OMG \nASCMM-MNT-01 - Control Flow Transfer Control Element outside Switch Block",
    "remediationSample": "let f = 0;\nlet success = false; // a variable to return the status\n\ntry {\n    f = open(filename);\n    text = f.read();\n    success = true;\n}\ncatch(err) {\n    logger.error(\"Cannot read\", filename, err);\n    success = false;\n}\nfinally {\n    if (f) {\n        f.close();\n    }\n    return success; \n}",
    "sample": "let f = 0;\ntry {\n    f = open(filename);\n    text = f.read();\n    return true;\n}\ncatch(err) {\n    logger.error(\"Cannot read\", filename, err);\n    return false; // Overwritten by finally\n}\nfinally {\n    if (f) {\n        f.close();\n    }\n    return true; \n}",
    "total": "Number of Javascript Functions",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCMM-MNT-1",
            "name": "Control transferred outside of switch statement",
            "url": null,
            "description": "Remove instances where the control flow is transferred outside a switch statement (e.g., depending on the technology, by using 'go to', 'continue', or 'break' statements)"
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70385",
            "name": "The application development team must follow a set of coding standards.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        10.0,
        70.0,
        90.0,
        99.0
    ]
}
