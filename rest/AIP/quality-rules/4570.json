{
    "id": 4570,
    "name": "Avoid declaring Non Final Class Variables with Public, Protected or Package access type",
    "href": "AIP/quality-rules/4570",
    "critical": false,
    "maxWeight": 6,
    "description": "Class Variables with Public, Protected or Package access type should be Final. Class Variables are Static Fields. Package access types taken into account are Non Public, Non Protected and Non Private.",
    "output": "This report lists all Non Final Class Variables with Public or Package access type. It provides the following information: Field full name",
    "rationale": "If a field is non-final and public, it can be changed once the value is set by any function that has access to the class which contains the field. This could lead to a vulnerability if other parts of the program make assumptions about the contents of that field.\n\nFor security reasons, if a Class Variable has Public, Protected or Package visibility, it should be declared Final to avoid being updated without Class control. Also for robustness reasons in a multi-threaded environment, leaving non-protected access to non-final class variables may lead to unpredictable behavior where the state of the class/instance is changed by another thread.",
    "reference": "https://wiki.sei.cmu.edu/confluence/display/java/OBJ10-J.+Do+not+use+public+static+nonfinal+fields",
    "remediation": "Review the Field declaration to add the relevant access type.",
    "remediationSample": "Remediation for Sample 1 : \nThe solution declares the FuncLoader static field final and treats it as a constant:\n\npublic static final FuncLoader m_functions;\n// Initialize m_functions in a static initialization block\n\nFields declared static and final are also safe for multithreaded use",
    "sample": "Sample 1: \nThis sample declares a function table containing a public static field.\n\npackage org.apache.xpath.compiler;\n \npublic class FunctionTable {\n  public static FuncLoader m_functions;\n}\n\nAn attacker can replace the function table as follows:\n\nFunctionTable.m_functions = new_table;\nReplacing the function table gives the attacker access to XPathContext, which is used to set the reference node for evaluating XPath expressions. Manipulating XPathContext can cause XML fields to be modified in inconsistent ways, resulting in unexpected behavior.",
    "total": "Number of Java attributes",
    "alternativeName": "Ensure that Class Variables with Public Protected or Package access type are declared Final",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61020,
            "name": "Programming Practices - Modularity and OO Encapsulation Conformity",
            "href": "AIP/technical-criteria/61020",
            "weight": 6
        },
        {
            "id": 66066,
            "name": "Secure Coding - Encapsulation",
            "href": "AIP/technical-criteria/66066",
            "weight": 6
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-493",
            "name": "Critical Public Variable Without Final Modifier",
            "href": "AIP/quality-standards/CWE/items/CWE-493",
            "standard": "CWE"
        },
        {
            "id": "CWE-500",
            "name": "Public Static Field Not Marked Final",
            "href": "AIP/quality-standards/CWE/items/CWE-500",
            "standard": "CWE"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
