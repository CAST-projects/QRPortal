{
    "id": 7930,
    "name": "Avoid redeclaring and overriding Methods with different default parameter values",
    "href": "AIP/quality-rules/7930",
    "critical": false,
    "maxWeight": 2,
    "associatedValueName": "Overridden method",
    "description": "This rule searches for C++ methods redeclaring and overriding methods that assign different default parameter values. \n\nNote: the same parameters expressed differently (such as 2 +2 instead of 4) are considered as different.",
    "output": "Associated to each C++ method with violations, the Quality Rule provides:\n- The name of the overridden method\n- Bookmarks for violation occurrences found in the source code:\n  - Overridden method",
    "rationale": "An overridden virtual method should have the same default values as the base class method. Default parameter values are determined by the static type of the object on which the method call is done. This means that the default values used may not match those of the virtual method being called. For non virtual methods, this makes the code more complex to understand.",
    "reference": "Effective C++, Item 38;",
    "remediation": "Check the parameter default value and try to align them with those that are defined in the overridden method.",
    "remediationSample": "class Base \n{ \n public: \n  virtual void myfct( int a = 0 ); \n}; \n\nclass Derived : public Base \n{ \n public: \n  virtual void myfct( int a = 0 );  // FIXED\n};",
    "sample": "class Base \n{ \n public: \n  virtual void myfct( int a = 0 ); \n}; \n\nclass Derived : public Base \n{ \n public: \n  virtual void myfct( int a = 10 );  // VIOLATION\n};",
    "total": "Number of C++ methods",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61003,
            "name": "Programming Practices - OO Inheritance and Polymorphism",
            "weight": 2,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70385",
            "name": "The application development team must follow a set of coding standards.",
            "url": null,
            "description": "Coding standards are guidelines established by the development team or individual developers that recommend programming style, practices and methods.  The coding standards employed will vary based upon the programming language that is being used to develop the application and the development team.\n\nCoding standards often cover the use of white space characters, variable naming conventions, function naming conventions, and comment styles.  Implementing coding standards provides many benefits to the development process.  These benefits include code readability, coding consistency among both individual and teams of developers as well as ease of code integration.  \n\nThe following are examples of what will typically be in a coding standards document.  This list is an example of what one can expect to find in typical coding standard documents and is not a comprehensive list:\n\n- Indent style conventions\n- Naming conventions\n- Line length conventions\n- Comment conventions\n- Programming best practices\n- Programming style conventions\n\nCoding standards allow developers to quickly adapt to code which has been developed by various members of a development team.  Coding standards are useful in the code review process as well as in situations where a team member leaves and duties must then be assigned to another team member.  \n\nCode conforming to a standard format is easier to read, especially if someone other than the original developer is examining the code.  In addition, formatted code can be debugged and corrected faster than unformatted code.\n\nIntroducing coding standards can help increase the consistency, reliability, and security of the application by ensuring common programming structures and tasks are handled by similar methods, as well as, reducing the occurrence of common logic errors."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
