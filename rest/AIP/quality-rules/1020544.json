{
    "id": 1020544,
    "type": "quality-rule",
    "name": "Avoid disabling Strict Contextual Escaping (SCE) when created",
    "href": "AIP/quality-rules/1020544",
    "critical": true,
    "description": "Strict Contextual Escaping (SCE) gives you a lot of security benefits for little coding overhead. It will be much harder to take an SCE disabled application and either secure it on your own or enable SCE at a later stage. This rule is compliant with CISQ OMG ASCSM-CWE-079 recommendation and OWASP 2013 A3 recommendation.",
    "output": "Line and column for each violation \nAssociated value => number of violations found",
    "rationale": "To be secure by default, you want to ensure that any such bindings are disallowed unless you can determine that something explicitly says it's safe to use a value for binding in that context. It helps detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks.",
    "reference": "https://docs.angularjs.org/api/ng/service/$sce",
    "sample": "angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {// Completely disable SCE. $sceProvider.enabled(false); });",
    "total": "Number of angular applications",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-79",
            "name": "Cross-site Scripting Improper Input Neutralization",
            "reference": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "reference": "https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application takes untrusted data and sends it to a web browser without proper validation or escaping. XSS allows attackers to execute scripts in the victims' browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        }
    ]
}
