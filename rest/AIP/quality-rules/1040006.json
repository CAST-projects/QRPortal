{
    "id": 1040006,
    "name": "Ensure that Content-Security-Policy is set for Spring Application",
    "href": "AIP/quality-rules/1040006",
    "critical": true,
    "associatedValueName": "Single Value",
    "description": "It is important to note that Spring Security does not add Content Security Policy by default. The web application author must declare the security policy(s) to enforce and/or monitor for the protected resources.\nThe rule reports violation when 'Content-Security-Policy' is not set.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation patterns\n- Bookmarks for violation patterns found in the source code",
    "rationale": "One way to help protect your site from XSS is to restrict the web domains where scripts can be served from, as is made possible by Content Security Policy (CSP) headers. CSP headers allow the server to instruct the browser to only accept content served from specific domains, e.g. safedomain.com. The 'Content-Security-Policy' header can restrict the source of all content served, or just specific content types, such as images, media and scripts.",
    "reference": "https://cwe.mitre.org/data/definitions/1021.html\nhttps://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)",
    "remediation": "Enable CSP header in XML configuration and JAVA configuration with \"the content-security-policy\" element.",
    "remediationSample": "You can enable the CSP header using XML configuration with \"the content-security-policy\" element as shown below:\n\nhttp\n\n    headers\n     content-security-policy\n            policy-directives=\"script-src 'self' https://trustedscripts.example.com; object-src https://trustedplugins.example.com; report-uri /csp-report-endpoint/\" />\n                                report-only=\"true\" /> // This enable the CSP 'report-only' header,\n    headers\n\nhttp\n--------------------------------------\nSimilarly, you can enable the CSP header using Java configuration as shown below ( and enable the CSP 'report-only' header)\n\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n        .headers()\n        .contentSecurityPolicy(\"script-src 'self' https://trustedscripts.example.com; object-src https://trustedplugins.example.com; report-uri /csp-report-endpoint/\") //CSP is enabled\n        .reportOnly();\n    }\n}",
    "sample": "The CSP header is not enabled in XML configuration or with JAVA configuration\nJAVA configuration:\n\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n        .headers() // Content Security Policy is not enabled\n            .cacheControl()\n            .frameOptions();\n\n    }\n}\n------------------------------------------------\nXML Configuration:\n\nhttp\n    headers // Content Security Policy is not enabled\n        cache-control\n        content-type-options\n    headers\nhttp",
    "total": "Number of Java Methods and Xml tags",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-1021",
            "name": "Improper Restriction of Rendered UI Layers or Frames",
            "url": "https://cwe.mitre.org/data/definitions/1021.html",
            "description": "The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with."
        },
        {
            "standard": "OWASP",
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application takes untrusted data and sends it to a web browser without proper validation or escaping. XSS allows attackers to execute scripts in the victims' browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        },
        {
            "standard": "OWASP",
            "id": "A7-2017",
            "name": "Cross-Site Scripting (XSS)",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application includes untrusted data in a new web page without proper validation or escaping, or updates an existing web page with user-supplied data using a browser API that can create HTML or JavaScript. XSS allows attackers to execute scripts in the victim's browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
