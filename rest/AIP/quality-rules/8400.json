{
    "id": 8400,
    "name": "Avoid having lock on this object",
    "href": "AIP/quality-rules/8400",
    "critical": false,
    "maxWeight": null,
    "associatedValueName": "Single Value",
    "description": "This rule detects all objects having lock on this object.",
    "output": "The rule lists all the artifacts having Lock on this object.",
    "rationale": "\nSoftware featuring inconsistent locking discipline incurs the risk of deadlock. \nLocking on this or public members is a bad practice because it means the class loses control over the lock. Any other class could use the instance or the public member for synchronization, and impair scalability (best case) or create deadlocks (worst case).",
    "reference": "https://docs.microsoft.com/fr-fr/dotnet/csharp/language-reference/keywords/lock-statement\nCISQ - ASCSMCWE667",
    "remediation": "Review and refactor the source code.",
    "sample": "class Account\n{\n    decimal balance;\n\n\n    public void Withdraw(decimal amount)\n    {\n        lock (this)\n        {\n            if (amount > balance)\n            {\n                throw new Exception(\"Insufficient funds\");\n            }\n            balance -= amount;\n        }\n    }\n}",
    "total": "Number of artifacts",
    "businessCriteria": [
        
    ],
    "technicalCriteria": [
        
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-667",
            "name": "Shared Resource Improper Locking",
            "url": null,
            "description": "Objective\nAvoid data corruption during concurrent access\n\nConsequence\nSoftware featuring inconsistent locking discipline incurs the risk of deadlock\n\nMeasure Element\nNumber of instances where the shared storable data element or member data element, declared with the Create action, is accessed outside a critical section of the application via the Read or Write action.\n\n"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
