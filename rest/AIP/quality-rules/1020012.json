{
    "id": 1020012,
    "name": "Avoid using a web service with WebSocket inside a loop",
    "href": "AIP/quality-rules/1020012",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "When designing web service to get/post/put data, you want to make sure that you minimize the number of calls between the client application and web service server. This rule will check the official WebSocket syntax, to do call to web service.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "When designing web service to get/put/post data, you want to make sure that you minimize the number of calls between the client application and web service server. By minimizing the number of calls, you improve application speed, reduce communications overhead (why send three request when you can do it by one), and reduce network traffic.",
    "reference": "CISQ Rule: ASCPEM-PRF-08",
    "remediation": "Try to create a process queue that will manage all the requests with a limited number of concurrents requests. When a request callback has been managed a new request could be fired.",
    "sample": "for(...) { \n\n     var socket = new WebSocket('ws://game.example.com:12010/updates'); \n     socket.onopen = function () { \n            setInterval(function() { \n                 if (socket.bufferedAmount == 0) \n                       socket.send(getUpdateData()); \n      }, 50); \n}",
    "total": "Number of Javascript Functions using WebSocket",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66068,
            "name": "Efficiency - Expensive Calls in Loops",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "AIP",
            "id": "AIP-HA-WORKLOAD",
            "name": "HA - unexpected workload mitigation",
            "url": "",
            "description": "Quality rules related to the absence of protections against unexpected workload"
        },
        {
            "standard": "CISQ",
            "id": "ASCPEM-PRF-8",
            "name": "Resource-consuming operation in loop",
            "url": null,
            "description": "Remove instances where an operation causing consumption of platform resource (messaging, lock, file, stream, directory, etc.) is directly or indirectly called within a loop body or within a loop condition"
        }
    ]
}
