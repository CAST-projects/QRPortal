{
    "id": 7502,
    "name": "DEPRECATED: Never use an array to map Hibernate collection",
    "href": "AIP/quality-rules/7502",
    "critical": true,
    "severity": 20,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.jee",
        "href": "AIP/extensions/com.castsoftware.jee"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "Using array to map a collection can affect your application performance when it contains many items: it loses lazy loading, optimized dirty checking and performance features for persistent collections.\n\nThis rule reports Hibernate Entities that use array to map a collection.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Hibernate supports array usage: the details of an array mapping are virtually identical to those of a list. However, we very strongly recommend against the use of arrays, since arrays cannot be lazily initialized: there is no way to proxy an array at the virtual machine level.\n\nLists, maps, and sets are the most efficient collection types.\n\nEven in cases where we need to retain order, we use java.util.List because the size of the array cannot grow dynamically while a List can grow dynamically. The idea of disabling proxies or lazy loading is considered a bad practice in Hibernate. It can result in a lot of data being fetched from a database and stored in a memory, irrespective of the need for it.",
    "reference": "Hibernate in Action (ISBN 1932394-15-X) p 214\nhttp://srcrr.com/java/hibernate/3.6.2/reference/org/hibernate/collection/PersistentArrayHolder.html",
    "remediation": "Use lists, maps, bags, idbags and sets depending on your case.",
    "remediationSample": "<hibernate-mapping>\n\n  <class name=\"A\" table =\"A\"> \n    <id name=\"id\">\n      <generator class=\"increment\"/>\n    </id>\n\n    // FIXED with a list (it could have been set, map, idbag or bag)\n    <list name=\"Bitems\" cascade=\"all\" fetch=\"join\"> \n      <key column=\"B_ID\"/>\n      <list-index column=\"ID\"/>\n      <one-to-many class=\"B\"/>\n    </list>\n  </class>\n\n  <class name=\"B\" table=\"B\" lazy=\"true\">\n    <id name=\"id\" column=\"B_ID\">\n      <generator class=\"increment\"/>\n    </id>\n  </class>\n\n</hibernate-mapping>",
    "sample": "<hibernate-mapping>\n\n  <class name=\"A\" table =\"A\">\n    <id name=\"id\" column=\"A_ID\">\n      <generator class=\"increment\"/>\n    </id>\n    <array name=\"Bitems\" cascade=\"all\" fetch=\"join\"> // VIOLATION\n      <key column=\"A_ID\"/>\n      <one-to-many class=\"B\"/>\n    </array>\n  </class>\n\n  <class name=\"B\" table=\"B\" lazy=\"true\">\n    <id name=\"id\" column=\"B_ID\">\n      <generator class=\"increment\"/>\n    </id>\n  </class>\n\n</hibernate-mapping>",
    "total": "Number of Hibernate entities that map a collection that could be: array, map, list, set, bag or idbag",
    "alternativeName": "Ensure to use lists, maps, bags, idbags and sets depending on your case to map a collection instead of using array to Map Collection",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61019,
            "name": "Efficiency - SQL and Data Handling Performance",
            "href": "AIP/technical-criteria/61019",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
