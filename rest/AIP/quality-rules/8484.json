{
    "id": 8484,
    "name": "Avoid HTTP response splitting through API requests",
    "href": "AIP/quality-rules/8484",
    "critical": true,
    "maxWeight": 9,
    "associatedValueName": "Call stack from user input source down to the target method",
    "description": "The application uses HTTP headers, but it does not correctly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.\n\nUsing CAST data-flow engine, this metric detects paths from API requests down to HTTP headers usage, paths which are open vulnerabilities.",
    "output": "List all methods that miss calling the required input validation calls\n\nIt provides the following information:\n - Method full name\n - Call stack from user input source down to the target method.",
    "rationale": "CR and LF characters in an HTTP header may give attackers control of the remaining headers and body of the response the application intends to send, as well as allowing them to create additional responses entirely under their control.",
    "reference": "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')\nhttps://cwe.mitre.org/data/definitions/113.html\n\nCWE-644: Improper Neutralization of HTTP Headers for Scripting Syntax\nhttps://cwe.mitre.org/data/definitions/644.html\n\nOpen Web Application Security Project (OWASP)\nhttps://www.owasp.org/index.php/Top_10_2007",
    "remediation": "Use authorized sanitization methods.\n\nTo avoid the creation of XSS flaws, the Open Web Application Security Project (OWASP) recommends both input validation and \"strong output encoding\" or sanitization:\n\"Strong output encoding. Ensure that all user-supplied data is appropriately entity encoded (either HTML or XML depending on the output mechanism) before rendering, taking the approach to encode all characters other than a very limited subset. This is the approach of the Microsoft Anti-XSS library or any valid sanitization libraries. Also, set the character encodings for each page you output, which will reduce exposure to some variants.\"",
    "remediationSample": "Sample 1\n// include validation code for rawInputData  --> cleanData\nresponse.addHeader(HEADER_NAME, cleanData);\n\n\nSample 2:\nString header = request.getParameter(HEADER_NAME);\n// ...\n// include validation code for header\nCookie cookie = new Cookie(\"header\", header);\nresponse.addCookie(cookie);",
    "sample": "Sample 1\nresponse.addHeader(HEADER_NAME, rawInputData);\n\nSample 2\nString header = request.getParameter(HEADER_NAME);\n// ...\nCookie cookie = new Cookie(\"header\", header);\nresponse.addCookie(cookie);",
    "total": "Number of potentially vulnerable methods",
    "alternativeName": "Avoid HTTP response splitting through API requests",
    "businessCriteria": [
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062301,
            "name": "OWASP-2013-A1 Injection",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062321,
            "name": "OWASP-2017-A1 Injection",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-93",
            "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-113",
            "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')",
            "url": null,
            "description": null
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "API8-2019",
            "name": "Injection",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "url": null,
            "description": null
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70271",
            "name": "The application must not be subject to input handling vulnerabilities.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
