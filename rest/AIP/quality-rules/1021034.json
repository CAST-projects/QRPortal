{
    "id": 1021034,
    "name": "Avoid inconsistent initialization when deriving a new exception",
    "href": "AIP/quality-rules/1021034",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "Reports all Python __init__ methods that override the __init__() method of the parent Exception class with inconsistent number of passed arguments.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Python Exceptions accept all arguments passed to them being stored in the .args attribute as a tuple. Various libraries and parts of Python rely on this behaviour. To prevent source of errors and unexpected behaviour, avoid inconsistent initialization when subclassing a new exception by passing the same number of arguments to the parent __init__ call.",
    "reference": "D. Beazley and B.K. Jones, Python Cookbook, 3rd Ed. (O'Reilly Media, Sebastopol, CA, May 2013), p. 579",
    "remediation": "Initialize parent exception class with the same number of parameters.",
    "remediationSample": ">>> class CustomError(Exception):\n>>>     def __init__(self, message, status):\n>>>     self.message = message\n>>>     self.status = status\n>>>     # parent exception class is initialized with same number of parameters\n>>>     super().__init__(message, status)",
    "sample": ">>> class CustomError(Exception):\n>>>     def __init__(self, message, status):\n>>>     self.message = message\n>>>     self.status = status",
    "total": "Number of Python __init__ methods",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "AIP/technologies/1021000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70385",
            "name": "The application development team must follow a set of coding standards.",
            "url": null,
            "description": "Coding standards are guidelines established by the development team or individual developers that recommend programming style, practices and methods.  The coding standards employed will vary based upon the programming language that is being used to develop the application and the development team.\n\nCoding standards often cover the use of white space characters, variable naming conventions, function naming conventions, and comment styles.  Implementing coding standards provides many benefits to the development process.  These benefits include code readability, coding consistency among both individual and teams of developers as well as ease of code integration.  \n\nThe following are examples of what will typically be in a coding standards document.  This list is an example of what one can expect to find in typical coding standard documents and is not a comprehensive list:\n\n- Indent style conventions\n- Naming conventions\n- Line length conventions\n- Comment conventions\n- Programming best practices\n- Programming style conventions\n\nCoding standards allow developers to quickly adapt to code which has been developed by various members of a development team.  Coding standards are useful in the code review process as well as in situations where a team member leaves and duties must then be assigned to another team member.  \n\nCode conforming to a standard format is easier to read, especially if someone other than the original developer is examining the code.  In addition, formatted code can be debugged and corrected faster than unformatted code.\n\nIntroducing coding standards can help increase the consistency, reliability, and security of the application by ensuring common programming structures and tasks are handled by similar methods, as well as, reducing the occurrence of common logic errors."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
