{
    "id": 7474,
    "name": "Avoid Repainting When Updating a ListBox",
    "href": "AIP/quality-rules/7474",
    "critical": false,
    "severity": 10,
    "maxWeight": 5,
    "extension": {
        "name": "com.castsoftware.dotnet",
        "href": "AIP/extensions/com.castsoftware.dotnet"
    },
    "description": "This metric list all objects where calls to Items.Add (of WinForm controls) are done in loops without using BeginUpdate/EndUpdate.",
    "output": "This metric list all objects where calls to Items.Add are done in loops without using BeginUpdate/EndUpdate.",
    "rationale": "When updating a listbox by using Add method, we should use BeginUpdate and EndUpdate Method.\nBeginUpdate method prevent the control from repainting the ListBox each time an item is added to the list.\nOnce you have completed the task of adding items to the list, call the EndUpdate method to enable the ListBox to repaint.\nThis way of adding items can prevent flickered drawing of the ListBox when a large number of items are being added to the list.",
    "reference": "https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.listbox.beginupdate?view=netcore-3.1",
    "remediation": "Call to BeginUpdate() before the loop and EndUpdate() after the loop.\nAlternatively, you can use AddRange method instead of Add.",
    "remediationSample": "listView1.BeginUpdate(); \nfor(int i = 0; i < 10000; i++) \n{\n    ListViewItem listItem = new ListViewItem(\"Item\"+i.ToString() );\n    listView1.Items.Add(listItem); \n} \nlistView1.EndUpdate();",
    "sample": "for(int i = 0; i < 10000; i++) \n{\n    ListViewItem listItem = new ListViewItem(\"Item\"+i.ToString() );\n    listView1.Items.Add(listItem); \n}",
    "total": "Number of artifacts that call Items.Add in loop",
    "alternativeName": "Avoid Repainting When Updating a ListBox",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66068,
            "name": "Efficiency - Expensive Calls in Loops",
            "href": "AIP/technical-criteria/66068",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
