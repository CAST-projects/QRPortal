{
    "id": 8214,
    "name": "Expired or Released Resource should not be used",
    "href": "AIP/quality-rules/8214",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "If a released resource is subsequently reused or reallocated, then an attempt to use the original resource might allow access to sensitive data that is associated with a different user or entity.\n  This rule reports all methods accessing the closed SQL connections or data streams which are not valid. The following methods are taken into account:\n  \n- JDBC:\n   . close: java.sql.Connection.close()\n   . close: java.sql.Statement.close()\n   . close: java.sql.PreparedStatement.close()\n   . close: java.sql.CallableStatement.close()\n   . close: java.sql.ResultSet.close()\n- JPA:\n   . close: javax.persistence.EntityManagerFactory.close()\n   . close:  javax.persistence.EntityManager.close()\n- Hibernate:\n    . close: org.hibernate.Session.close()\n  . close: org.hibernate.SessionFactory.close()\n- Spring:\n    . close: org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(...)\n    . close: org.springframework.orm.hibernate4.SessionFactoryUtils.closeSession(...)\n    . close: org.springframework.orm.hibernate5.SessionFactoryUtils.closeSession(...)\n  \n-The following objects are taken into account:\n- output streams\n- input streams\n- readers\n- writers\n- channel",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "When a resource is released it might not be in an expected state, later attempts to access the resource may lead to resultant errors that may lead to a crash.",
    "reference": "https://cwe.mitre.org/data/definitions/672.html\nASCSM-CWE-672: Expired or Released Resource Usage",
    "remediation": "You can use:\n- isClosed() methods before accessing the Connection object .\n- close() method should be called before closing the application.",
    "remediationSample": "with finally\n~~~~~~~~~~~~\nif(!connection.isClosed())\n  connection.prepareStatement(\"select * from ....\");\nor\nfinally{\n      System.out.println(\"Closing a connection\");\n      connection.close();\n}",
    "sample": "String connectionUrl=\"jdbc:mysql://localhost:3306/MyDb\";\n    String userName=\"root\";\n    String userPass=\"root\";\n    DBConnectionInvalid connectionExample=new DBConnectionInvalid();\n    try{\n      connection=connectionExample.getConnection(connectionUrl, userName, userPass);\n    }catch(Exception e){\n      System.out.println(e.toString());\n    }finally{\n      System.out.println(\"Closing a connection\");\n      connection.close();\n\n      connection.prepareStatement(\"select * from ....\");\n    }",
    "total": "All the methods that have invalid access to the database resource in the body",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61018,
            "name": "Efficiency - Memory, Network and Disk Space Management",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-672",
            "name": "Expired or Released Resource Usage",
            "url": null,
            "description": "Objective\nAvoid access to a released, revoked, or expired resource\n\nConsequence\nSoftware unaware of resource lifecycle incurs the risk of unauthorized access to sensitive data that is associated with a different user or entity, and the risk of erroneous later attempts to access the resource, possibly leading to a crash\n\nMeasure Element\nNumber of instances where the platform resource is deallocated in the Manage action using its unique resource handler value which is transported throughout the application via the sequence composed of ActionElements with DataRelations relations, some of which being part of named callable and method control elements, then used later within the application to try and access the resource in the Read or Write action.\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-672",
            "name": "Operation on a Resource after Expiration or Release",
            "url": "https://cwe.mitre.org/data/definitions/672.html",
            "description": "The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        90.0,
        95.0,
        99.0,
        100.0
    ]
}
