{
    "id": 1027022,
    "name": "Avoid using \"new Guid()\"",
    "href": "AIP/quality-rules/1027022",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check if the \"new Guid()\" syntax has been used.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Using \"new Guid()\" makes an \"empty\" all-0 guid (00000000-0000-0000-0000-000000000000 is not very useful), whereas\nGuid.NewGuid() makes an actual guid with a unique value, which is useful.",
    "reference": "https://docs.microsoft.com/en-ca/dotnet/api/system.guid.newguid?view=netcore-3.1\nhttps://docs.microsoft.com/en-ca/dotnet/api/system.guid.-ctor?view=netcore-3.1",
    "remediation": "Use one of the official constructor.\n\nOfficial constructor for Guid are the following:\n\n- Guid(Byte[]) : Initializes a new instance of the Guid structure by using the specified array of bytes.\n- Guid(ReadOnlySpan<Byte>) : Initializes a new instance of the Guid structure by using the value represented by the specified read-only span of bytes.\n- Guid(String) : Initializes a new instance of the Guid structure by using the value represented by the specified string.\n- Guid(Int32, Int16, Int16, Byte[]) : Initializes a new instance of the Guid structure by using the specified integers and byte array.\n- Guid(Int32, Int16, Int16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte) : Initializes a new instance of the Guid structure by using the specified integers and bytes.\n- Guid(UInt32, UInt16, UInt16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte) : Initializes a new instance of the Guid structure by using the specified unsigned integers and bytes.",
    "remediationSample": "var guid = Guid.Empty;\nConsole.WriteLine(guid);\n\nvar guid = Guid.NewGuid();\nConsole.WriteLine(guid);\n\nvar guid = new Guid(bytes);\nConsole.WriteLine(guid);",
    "sample": "var guid = new Guid();\nConsole.WriteLine(guid);",
    "total": "Number of classes and structs members",
    "alternativeName": "Avoid using \"new Guid()\"",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062306,
            "name": "OWASP-2013-A6 Sensitive Data Exposure",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062323,
            "name": "OWASP-2017-A3 Sensitive Data Exposure",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-287",
            "name": "Improper Authentication",
            "url": "https://cwe.mitre.org/data/definitions/287.html",
            "description": "When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct."
        },
        {
            "standard": "OWASP",
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure",
            "description": "Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser."
        },
        {
            "standard": "OWASP",
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure",
            "description": "Many web applications do not properly protect sensitive data, such as credit cards, tax IDs, and authentication credentials. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data deserves extra protection such as encryption at rest or in transit, as well as special precautions when exchanged with the browser."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
