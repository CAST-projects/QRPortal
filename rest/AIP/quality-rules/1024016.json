{
    "id": 1024016,
    "name": "A permission is required for securing Services",
    "href": "AIP/quality-rules/1024016",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "Services are the background processing components in Android. As Services typically perform some variety of processing that consists of updating databases, providing notifications of an external event, or performing some other task for the benefit of a component that will interact with the user, it is important to make sure that they are accessible only by appropriate consumers \n\nPermissions applied using the android:permission attribute to the <service> tag in the manifest restrict who can start or bind to the associated Service. The permission is checked during Context.startService(), Context.stopService() and Context.bindService(). If the caller doesn't have the required permission then SecurityException is thrown from the call. \n\nA violation reported when permission not set for exported Service and application.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "The attacks and consequences of improperly exporting a component may depend on the exported component: \n\nIf access to an exported Service is not restricted, any application may start and bind to the Service. Depending on the exposed functionality, this may allow a malicious application to perform unauthorized actions, gain access to sensitive information, or corrupt the internal state of the application.",
    "reference": "https://developer.android.com/topic/security/best-practices \nhttps://developer.android.com/guide/topics/manifest/receiver-element.html#prmsn \nhttps://cwe.mitre.org/data/definitions/926.html ",
    "remediationSample": "1- Define permission in the top of the manifest file as following one \n\n<permission android:name=\"com.example.testapps.permission.BIND_TO_MAIL_LISTENER\" android:protectionLevel=\"signature\" /> \n\n\n2- Add the android:permission into service \n\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" \n package=\"com.example.testapps.test1\"> \n ... \n    <service android:name=\".MailListenerService\" \n              android:permission= \n                 \"com.example.testapps.permission.BIND_TO_MAIL_LISTENER\" \n              android:enabled=\"true\" \n              android:exported=\"true\"> \n              <intent-filter></intent-filter> \n    </service> \n  ... \n</manifest> ",
    "sample": "\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" \n package=\"com.example.testapps.test1\"> \n ... \n    <service android:name=\".MailListenerService\" \n              android:enabled=\"true\" \n              android:exported=\"true\"> \n              <intent-filter></intent-filter> \n    </service> \n  ... \n</manifest> \n",
    "total": "Number of Android manifests",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-862",
            "name": "Missing Authorization",
            "url": "https://cwe.mitre.org/data/definitions/862.html",
            "description": "The software does not perform an authorization check when an actor attempts to access a resource or perform an action."
        },
        {
            "standard": "CWE",
            "id": "CWE-926",
            "name": "Improper Export of Android Application Components",
            "url": "https://cwe.mitre.org/data/definitions/926.html",
            "description": "The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains."
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-AC-3",
            "name": "Access Enforcement",
            "url": "https://nvd.nist.gov/800-53/Rev4/control/AC-3",
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A5-2017",
            "name": "Broken Access Control",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A5-Broken_Access_Control",
            "description": "Restrictions on what authenticated users are allowed to do are often not properly enforced. Attackers can exploit these flaws to access unauthorized functionality and/or data, such as access other users' accounts, view sensitive files, modify other users' data, change access rights, etc."
        },
        {
            "standard": "OWASP",
            "id": "A7-2013",
            "name": "Missing Function Level Access Control",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control",
            "description": "Most web applications verify function level access rights before making that functionality visible in the UI. However, applications need to perform the same access control checks on the server when each function is accessed. If requests are not verified, attackers will be able to forge requests in order to access functionality without proper authorization."
        },
        {
            "standard": "OWASP",
            "id": "M3-2016",
            "name": "Insecure Communication",
            "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M3-Insecure_Communication",
            "description": "Mobile applications frequently do not protect network traffic. They may use SSL/TLS during authentication but not elsewhere. This inconsistency leads to the risk of exposing data and session IDs to interception. The use of transport security does not mean the app has implemented it correctly. To detect basic flaws, observe the phone's network traffic. More subtle flaws require inspecting the design of the application and the applications configuration."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
