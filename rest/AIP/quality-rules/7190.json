{
    "id": 7190,
    "name": "Struts1: Validate() Method of Struts Validator form must call super.validate()",
    "href": "AIP/quality-rules/7190",
    "critical": true,
    "maxWeight": 7,
    "description": "List all validate() methods that override the validate method of the following classes (at any depth in the inheritance tree):\norg.apache.struts.validator.ValidatorForm\norg.apache.struts.validator.ValidatorActionForm\norg.apache.struts.validator.DynaValidatorForm\norg.apache.struts.validator.DynaValidatorActionForm\n\nand that doesn't call super.validate()\n\nThis rule is applicable only for struts1",
    "output": "This report lists all validate() methods that violate this rule.\nIt provides the following information:\n Method Full Name",
    "rationale": "Struts Validator can be extended to implement your own custom validation.\nWhen overriding the validate() method, call the ancestor validate()\nmethod, to ensure that any framework validations are triggered. In case the validation framework is disabled, you expose the application to any type of attacks based on invalid field input.",
    "reference": "http://cwe.mitre.org/documents/sources/SevenPerniciousKingdoms.pdf\nhttps://owasp.org/www-community/vulnerabilities/Improper_Data_Validation",
    "remediation": "Call super.validate() in the validate() method.",
    "remediationSample": "public ActionErrors validate(\n      ActionMapping mapping,\n      HttpServletRequest request) {\n  ActionErrors errors = super.validate(mapping, request); // FIXED\n\n  if (errors==null) {\n     if (notGood(mapping,request)) {\n        // some code\n     }\n  // some code\n}",
    "sample": "public ActionErrors validate(    // VIOLATION\n      ActionMapping mapping,\n      HttpServletRequest request) {\n  if (notGood(mapping,request)) \n    // some code\n  }\n// some code\n}",
    "total": "Number of non abstract methods that override the validate method (at any depth in the inheritance tree) of one of the class ValidatorForm, ValidatorActionForm, DynaValidatorForm, DynaValidatorActionForm",
    "alternativeName": "Struts1: Validate() Method of Struts Validator form must call super.validate()",
    "businessCriteria": [
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062305,
            "name": "OWASP-2013-A5 Security Misconfiguration",
            "href": "AIP/technical-criteria/1062305",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062326,
            "name": "OWASP-2017-A6 Security Misconfiguration",
            "href": "AIP/technical-criteria/1062326",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-103",
            "name": "Struts: Incomplete validate() Method Definition",
            "href": "AIP/quality-standards/CWE/items/CWE-103",
            "standard": "CWE"
        },
        {
            "id": "CWE-1173",
            "name": "Improper Use of Validation Framework",
            "href": "AIP/quality-standards/CWE/items/CWE-1173",
            "standard": "CWE"
        },
        {
            "id": "A5-2013",
            "name": "Security Misconfiguration",
            "href": "AIP/quality-standards/OWASP/items/A5-2013",
            "standard": "OWASP"
        },
        {
            "id": "A6-2017",
            "name": "Security Misconfiguration",
            "href": "AIP/quality-standards/OWASP/items/A6-2017",
            "standard": "OWASP"
        },
        {
            "id": "API7-2019",
            "name": "Security Misconfiguration",
            "href": "AIP/quality-standards/OWASP/items/API7-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-2.2.4",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-2.2.4",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
