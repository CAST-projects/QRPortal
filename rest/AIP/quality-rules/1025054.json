{
    "id": 1025054,
    "name": "Avoid plaintext storage of password",
    "href": "AIP/quality-rules/1025054",
    "critical": true,
    "severity": 30,
    "maxWeight": 8,
    "extension": {
        "name": "com.castsoftware.securityanalyzer",
        "href": "AIP/extensions/com.castsoftware.securityanalyzer"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will detect a call path where a password variable is used in a sendCredential methods, and this password variable comes from a configuration files, but no decrypt method has been called: this is a sign the password has been stored as plaintext in the config file.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Passwords that are stored in plaintext outside of a secure container would be trivial to read, if retrieved by an attacker. Leaked passwords could then be used to authenticate to other sensitive resources, to perform actions and retrieve additional information.",
    "reference": "CWE-256: Plaintext Storage of a Password\nhttp://cwe.mitre.org/data/definitions/256.html",
    "remediation": "Always use strong, modern algorithms for encryption, hashing to store password in configuration files.\nAlternatively, store secrets in a dedicated secrets management system (Azure Key Vault, Amazon KMS, Google KMS, HashiCorp Vault, ...) separate from the application or service consuming the secret values.",
    "remediationSample": "Properties prop = new Properties();\nprop.load(new FileInputStream(\"config.properties\"));\nString passEnc = prop.getProperty(\"password\");\nString password = decrypt(passEnc);                    // Proof of the FIX\nDriverManager.getConnection(url, usr, password);       // FIXED",
    "sample": "Properties prop = new Properties();\nprop.load(new FileInputStream(\"config.properties\"));\nString password = prop.getProperty(\"password\");\nDriverManager.getConnection(url, usr, password);    // VIOLATION: direct usage of the password denotes it has been stored unencrypted",
    "total": "Number of potentially vulnerable methods",
    "alternativeName": "Ensure you don't have hard-coded passwords in configuration files : password retrieved and delivered as is to the sendCredential method",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "href": "AIP/technical-criteria/66064",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-256",
            "name": "Plaintext Storage of a Password",
            "href": "AIP/quality-standards/CWE/items/CWE-256",
            "standard": "CWE"
        },
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-IA-9",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-IA-9",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A2-2013",
            "name": "Broken Authentication and Session Management",
            "href": "AIP/quality-standards/OWASP/items/A2-2013",
            "standard": "OWASP"
        },
        {
            "id": "A2-2017",
            "name": "Broken Authentication",
            "href": "AIP/quality-standards/OWASP/items/A2-2017",
            "standard": "OWASP"
        },
        {
            "id": "A04-2021",
            "name": "Insecure Design",
            "href": "AIP/quality-standards/OWASP/items/A04-2021",
            "standard": "OWASP"
        },
        {
            "id": "API2-2019",
            "name": "Broken User Authentication",
            "href": "AIP/quality-standards/OWASP/items/API2-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-2.2.4",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.3.1",
            "name": "Remove Development and Test Accounts, User IDs, and Passwords Before Release",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.3.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-2.2.4",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-Requirement-6.3.1",
            "name": "Remove Development and Test Accounts, User IDs, and Passwords Before Release",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.3.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "STIG-V-222642",
            "name": "The application must not contain embedded authentication data.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222642",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
