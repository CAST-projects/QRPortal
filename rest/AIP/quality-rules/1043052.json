{
    "id": 1043052,
    "name": "Ensure aspnet:UseLegacyFormsAuthenticationTicketCompatibility is set to true",
    "href": "AIP/quality-rules/1043052",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Number of violation occurrences",
    "description": "When aspnet:UseLegacyFormsAuthenticationTicketCompatibility is set to true by default,the forms authentication is validated.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "The flag is set to false, The Input validations would be bypassed and may lead to invalidated input to be sent to native api.  This vulnerability would lead the attacker to exploit with required credentials.",
    "reference": "https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication\nhttp://cwe.mitre.org/data/definitions/863.html\n\nOWASP Top 10 2004 -A10-Insecure Configuration Management\nOWASP Top 10 2007 -A7-Broken Authentication and Session Management\nOWASP Top 10 2010 -A6-Security Misconfiguration\nOWASP Top 10 2013 -A2-Broken Authentication and Session Management",
    "remediation": "Retain the settings of aspnet:UseLegacyFormsAuthenticationTicketCompatibility to True.",
    "remediationSample": "<appSettings>\n    <add key=\"aspnet:UseLegacyFormsAuthenticationTicketCompatibility\" value=\"true\" />\n</appSettings>",
    "sample": "Sample Settings\n\n<appSettings>\n    <add key=\"aspnet:UseLegacyFormsAuthenticationTicketCompatibility\" value=\"false\" />\n</appSettings>",
    "total": "Number of config files",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138636,
            "name": "ASP.NET",
            "href": "AIP/technologies/138636"
        },
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-863",
            "name": "Incorrect Authorization",
            "url": "https://cwe.mitre.org/data/definitions/863.html",
            "description": "The software performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions."
        },
        {
            "standard": "OWASP",
            "id": "A2-2013",
            "name": "Broken Authentication and Session Management",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A2-Broken Authentication and Session Management",
            "description": "Application functions related to authentication and session management are often not implemented correctly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users' identities."
        },
        {
            "standard": "OWASP",
            "id": "A2-2017",
            "name": "Broken Authentication",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication",
            "description": "Application functions related to authentication and session management are often implemented incorrectly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users' identities temporarily or permanently."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
