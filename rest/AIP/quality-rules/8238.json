{
    "id": 8238,
    "name": "Avoid mixing trusted and untrusted data in HTTP requests",
    "href": "AIP/quality-rules/8238",
    "critical": true,
    "maxWeight": 9,
    "associatedValueName": "Call stack from a method receiving untrusted data down to a target method",
    "description": "Using CAST data-flow engine, this quality rule detects paths from user input methods down to session setter methods, which mix trusted and untrusted data in the same data structure.",
    "output": "List all methods that miss calling the required sanitization method and provides access to the path demonstrating the vulnerability : \n  \nIt provides the following information: \n- The full name of the method that calls the user input method. That is the source of the untrusted data. \n- Call stack from user input source down to the target method.",
    "rationale": "Without well-established and maintained trust boundaries, programmers will inevitably lose track of which pieces of data have been validated and which have not. This confusion will eventually allow some data to be used without first being validated.",
    "reference": "CWE-501: Trust Boundary Violation\nhttps://cwe.mitre.org/data/definitions/501.html\n\nOpen Web Application Security Project (OWASP)\nhttps://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure",
    "remediation": "Perform input data validation before storing or transmitting the data.",
    "remediationSample": "// The goal is to never mix trusted and untrusted data.\n// There is no generic sanitization possible, only specific sanitization.\n// In case of specific sanitization, use an intermediate method like in the following example:\n\nusrname = request.getParameter(\"usrname\"); \nif (session.getAttribute(ATTR_USR) == null) { \n    session.setAttribute(ATTR_USR, validateUntrusted(usrname)); \n}\n\n// Then, the method \"validateUntrusted\" must be defined as a deemed sanitization in a .blackbox.xml file\".",
    "sample": "Java :\nusrname = request.getParameter(\"usrname\"); \nif (session.getAttribute(ATTR_USR) == null) { \n    session.setAttribute(ATTR_USR, usrname); \n} \n\nC# :\nusrname = request.Item(\"usrname\"); \nif (session.Item(ATTR_USR) == null) { \n    session.Add(ATTR_USR, usrname); \n}",
    "total": "Number of potentially vulnerable methods",
    "alternativeName": "Avoid mixing trusted and untrusted data in HTTP requests",
    "businessCriteria": [
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062306,
            "name": "OWASP-2013-A6 Sensitive Data Exposure",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062323,
            "name": "OWASP-2017-A3 Sensitive Data Exposure",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-501",
            "name": "Trust Boundary Violation",
            "href": "AIP/quality-standards/CWE/items/CWE-501",
            "standard": "CWE"
        },
        {
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "href": "AIP/quality-standards/OWASP/items/A3-2017",
            "standard": "OWASP"
        },
        {
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "href": "AIP/quality-standards/OWASP/items/A6-2013",
            "standard": "OWASP"
        },
        {
            "id": "STIG-V-70245",
            "name": "The application must protect the confidentiality and integrity of transmitted information.",
            "href": "AIP/quality-standards/STIG-V4R8/items/STIG-V-70245",
            "standard": "STIG-V4R8"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
