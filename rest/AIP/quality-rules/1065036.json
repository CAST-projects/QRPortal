{
    "id": 1065036,
    "name": "Avoid using '//' and  '/*' within comments (C/C++)",
    "href": "AIP/quality-rules/1065036",
    "critical": false,
    "maxWeight": 3,
    "description": "The rule will raise a violation when //, /* are encountered within comments",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "A comment beginning with /* continues until the first */ is encountered. Any /* occurring inside a comment is a violation of this rule.\n\nIf a comment starting sequence, /* or //, occurs within a /* comment, it is quite likely to be caused by a missing */ comment ending sequence.\nIf a comment starting sequence occurs within a // comment, it is probably because a region of code has been commented-out using //.",
    "reference": "MISRA C++ 2008, 2-7-1: The character sequence /* shall not be used within a C-style comment.\nMISRA C:2012, 3.1 - The character sequences /* and // shall not be used within a comment",
    "remediation": "Ensure to not use //, /* within comments",
    "sample": "/* some comment, end comment marker accidentally omitted\nPerform_Critical_Safety_Function(X);\n/* this \"comment\" is Non-compliant */\nIn reviewing the code containing the call to the function, the assumption is that it is executed code.\nBecause of the accidental omission of the end comment marker, the call to Perform_Critical_\nSafety_Function will not be execute",
    "total": "Number of C / C++ methods",
    "alternativeName": "Ensure to not use //, /* within comments",
    "businessCriteria": [
        {
            "id": 66033,
            "name": "Documentation",
            "href": "AIP/business-criteria/66033"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61007,
            "name": "Documentation - Bad Comments",
            "weight": 3,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 0,
            "name": "ALL TECHNOLOGIES",
            "href": "AIP/technologies/0"
        }
    ],
    "qualityStandards": [
        {
            "standard": "C-CPP",
            "id": "MISRA-C-2012-Lexical-Conventions",
            "name": "Lexical Conventions",
            "url": null,
            "description": null
        },
        {
            "standard": "C-CPP",
            "id": "MISRA-CPP-2008-Lexical-Conventions",
            "name": "Lexical Conventions",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
