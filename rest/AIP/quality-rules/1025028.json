{
    "id": 1025028,
    "name": "Avoid disabling the signature requirement of a JWT token",
    "href": "AIP/quality-rules/1025028",
    "critical": true,
    "severity": 30,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.securityanalyzer",
        "href": "AIP/extensions/com.castsoftware.securityanalyzer"
    },
    "associatedValueName": "Call stack from user input source down to the target method",
    "description": "Using CAST data-flow engine, this metric detects JWT token having the signature requirement disabled",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "If the signature requirement is disabled, there is no guarantee about the integrity data of a JWT token. An attacker would be able to authenticate with other user accounts or other resources.",
    "reference": "CWE-287: Improper Authentication\nhttps://cwe.mitre.org/data/definitions/287.html",
    "remediation": "Do not disable the signature requirement of a JWT token.",
    "remediationSample": "// .NET\nservices\n    .AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n    .AddJwtBearer(options =>\n    {\n        options.TokenValidationParameters = new TokenValidationParameters\n        {\n            ValidateIssuer = true,\n            ValidateAudience = true,\n            ValidateLifetime = true,\n            RequireSignedTokens = true, // OK\n            RequireExpirationTime = true,\n            ValidateIssuerSigningKey = true,\n        };\n    });\n\n// Java\nJwts.parserBuilder().setSigningKey(key).build().parseClaimsJws(jws); // OK",
    "sample": "// .NET\nservices\n    .AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n    .AddJwtBearer(options =>\n    {\n        options.TokenValidationParameters = new TokenValidationParameters\n        {\n            ValidateIssuer = true,\n            ValidateAudience = true,\n            ValidateLifetime = true,\n            RequireSignedTokens = false, // issue\n            RequireExpirationTime = true,\n            ValidateIssuerSigningKey = true,\n        };\n    });\n\n// Java\nJwts.parser().setSigningKey(key).parse(authToken); // avoid use 'parse' method",
    "total": "Number of potentially vulnerable methods",
    "alternativeName": "Ensure your application does not disable the signature requirement of a JWT token",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1066387,
            "name": "CWE-287 - Improper Authentication",
            "href": "AIP/technical-criteria/1066387",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063115,
            "name": "PCI-Requirement-6.5.10 - Broken authentication and session management",
            "href": "AIP/technical-criteria/1063115",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "href": "AIP/technical-criteria/66064",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-287",
            "name": "Improper Authentication",
            "href": "AIP/quality-standards/CWE/items/CWE-287",
            "standard": "CWE"
        },
        {
            "id": "M4-2016",
            "name": "Insecure Authentication",
            "href": "AIP/quality-standards/OWASP/items/M4-2016",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
