{
    "id": 1019012,
    "name": "Avoid message security without authentication for an anonymous client",
    "href": "AIP/quality-rules/1019012",
    "critical": false,
    "severity": 10,
    "maxWeight": 6,
    "extension": {
        "name": "com.castsoftware.wcf",
        "href": "AIP/extensions/com.castsoftware.wcf"
    },
    "description": "This rule will raise a violation when a WCF security method used is Message Security but there is no authentication used",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Allowing access to all accessors puts the resource provided by the service at exposure.",
    "reference": "https://docs.microsoft.com/en-us/dotnet/framework/wcf/feature-details/message-security-with-an-anonymous-client?redirectedfrom=MSDN\n\nhttps://cwe.mitre.org/data/definitions/285.html",
    "remediation": "Always use some form of authentication to provide access to the service when using message security config",
    "remediationSample": "C#\n\n// Create the binding.\nWSHttpBinding binding = new WSHttpBinding();\nbinding.Security.Mode = SecurityMode.Message;\nbinding.Security.Message.ClientCredentialType =\n    MessageCredentialType.None;\n\n// Create the URI for the endpoint.\nUri httpUri = new Uri(\"http://localhost/Calculator\");\n\n// Create the service host and add an endpoint.\nServiceHost myServiceHost =\n    new ServiceHost(typeof(ServiceModel.Calculator), httpUri);\nmyServiceHost.AddServiceEndpoint(\n    typeof(ServiceModel.ICalculator), binding, \"\");\n\n// Specify a certificate to authenticate the service.\nmyServiceHost.Credentials.ServiceCertificate.SetCertificate(\n    StoreLocation.LocalMachine,\n    StoreName.My,\n    X509FindType.FindByThumbprint,\n    \"00000000000000000000000000000000\");\n\n// Open the service.\nmyServiceHost.Open();\nConsole.WriteLine(\"Listening...\");\nConsole.ReadLine();\n\n// Close the service.\nmyServiceHost.Close();\n\n___________________________________________________________\nConfig File:\n<configuration>\n  <system.serviceModel>\n    <behaviors>\n      <serviceBehaviors>\n        <behavior name=\"ServiceCredentialsBehavior\">\n          <serviceCredentials>\n            <serviceCertificate findValue=\"contoso.com\"\n                                storeLocation=\"LocalMachine\"\n                                storeName=\"My\" />\n          </serviceCredentials>\n        </behavior>\n      </serviceBehaviors>\n    </behaviors>\n    <services>\n      <service behaviorConfiguration=\"ServiceCredentialsBehavior\"\n               name=\"ServiceModel.Calculator\">\n        <endpoint address=\"http://localhost/Calculator\"\n                  binding=\"wsHttpBinding\"\n                  bindingConfiguration=\"WSHttpBinding_ICalculator\"\n                  name=\"CalculatorService\"\n                  contract=\"ServiceModel.ICalculator\" />\n      </service>\n    </services>\n    <bindings>\n      <wsHttpBinding>\n        <binding name=\"WSHttpBinding_ICalculator\" >\n          <security mode=\"Message\">\n            <message clientCredentialType=\"None\" />\n          </security>\n        </binding>\n      </wsHttpBinding>\n    </bindings>\n    <client />\n  </system.serviceModel>\n</configuration>",
    "sample": "C#:\n// Create the binding.\nWSHttpBinding binding = new WSHttpBinding();\nbinding.Security.Mode = SecurityMode.Message;\nbinding.Security.Message.ClientCredentialType =\n    MessageCredentialType.None;\n\n// Create the URI for the endpoint.\nUri httpUri = new Uri(\"http://localhost/Calculator\");\n\n// Create the service host and add an endpoint.\nServiceHost myServiceHost =\n    new ServiceHost(typeof(ServiceModel.Calculator), httpUri);\nmyServiceHost.AddServiceEndpoint(\n    typeof(ServiceModel.ICalculator), binding, \"\");\n// Open the service.\nmyServiceHost.Open();\nConsole.WriteLine(\"Listening...\");\nConsole.ReadLine();\n\n// Close the service.\nmyServiceHost.Close();\n___________________________________________________________\n\nConfig File:\n<configuration>\n  <system.serviceModel>\n    <behaviors>\n      <serviceBehaviors>\n        <behavior name=\"ServiceCredentialsBehavior\">\n        </behavior>\n      </serviceBehaviors>\n    </behaviors>\n    <services>\n      <service behaviorConfiguration=\"ServiceCredentialsBehavior\"\n               name=\"ServiceModel.Calculator\">\n        <endpoint address=\"http://localhost/Calculator\"\n                  binding=\"wsHttpBinding\"\n                  bindingConfiguration=\"WSHttpBinding_ICalculator\"\n                  name=\"CalculatorService\"\n                  contract=\"ServiceModel.ICalculator\" />\n      </service>\n    </services>\n    <bindings>\n      <wsHttpBinding>\n        <binding name=\"WSHttpBinding_ICalculator\" >\n          <security mode=\"Message\">\n            <message clientCredentialType=\"None\" />\n          </security>\n        </binding>\n      </wsHttpBinding>\n    </bindings>\n    <client />\n  </system.serviceModel>\n</configuration>",
    "total": "Number of WCF configurations",
    "alternativeName": "Avoid message security without authentication for an anonymous client",
    "businessCriteria": [
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062307,
            "name": "OWASP-2013-A7 - Missing Function Level Access Control",
            "href": "AIP/technical-criteria/1062307",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062325,
            "name": "OWASP-2017-A5 - Broken Access Control",
            "href": "AIP/technical-criteria/1062325",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062341,
            "name": "OWASP-2021-A01 - Broken Access Control",
            "href": "AIP/technical-criteria/1062341",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063115,
            "name": "PCI-Requirement-6.5.10 - Broken authentication and session management",
            "href": "AIP/technical-criteria/1063115",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "href": "AIP/technical-criteria/66064",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1019000,
            "name": "WCF",
            "href": "AIP/technologies/1019000"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-285",
            "name": "Improper Authorization",
            "href": "AIP/quality-standards/CWE/items/CWE-285",
            "standard": "CWE"
        },
        {
            "id": "NIST-AC-3",
            "name": "Access Enforcement",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-AC-3",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-IA-9",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-AC-3",
            "name": "Access Enforcement",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-AC-3",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-IA-9",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A5-2017",
            "name": "Broken Access Control",
            "href": "AIP/quality-standards/OWASP/items/A5-2017",
            "standard": "OWASP"
        },
        {
            "id": "A7-2013",
            "name": "Missing Function Level Access Control",
            "href": "AIP/quality-standards/OWASP/items/A7-2013",
            "standard": "OWASP"
        },
        {
            "id": "A01-2021",
            "name": "Broken Access Control",
            "href": "AIP/quality-standards/OWASP/items/A01-2021",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
