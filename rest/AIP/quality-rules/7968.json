{
    "id": 7968,
    "name": "Never use strcat() function",
    "href": "AIP/quality-rules/7968",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Number of violation patterns",
    "description": "This rule searches for C and C++ functions, methods, constructors, and destructors that call the 'strcat()' function.",
    "output": "Associated to each C/C++ function/method/constructor/destructor with violations, the Quality Rule provides:\n- Number of violation patterns\n- Bookmarks for violation patterns found in the source code:\n  - function call",
    "rationale": "The 'strcat()' function is a source of buffer overflow vulnerabilities. More secure variants of the function are available and should be used.",
    "reference": "Secure Programming for Linux and Unix HOWTO - \nCreating Secure Software\nhttp://www.dwheeler.com/secure-programs/\n\nISO/IEC. ISO/IEC 9899 Second edition 1999-12-01 Programming languages - C. International Organization for Standardization, 1999.",
    "remediation": "Prefer using the 'strncat()' function instead.",
    "total": "Number of C/C++ functions, constructors, destructors, and methods",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "standard": "AIP",
            "id": "AIP-HA-INTERNAL",
            "name": "HA - internal failure mitigation",
            "url": "",
            "description": "Quality rules related to the presence of occurrences of structural coding patterns that are known to cause functional failures"
        },
        {
            "standard": "CISQ",
            "id": "ASCRM-CWE-120",
            "name": "Buffer overflow",
            "url": null,
            "description": "Remove instances where the content of the first buffer is moved into the content of the second buffer while their allocated sizes are incompatible"
        },
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-120",
            "name": "Buffer overflow",
            "url": null,
            "description": "Remove instances where the content of the first buffer is moved into the content of the second buffer while their allocated sizes are incompatible "
        },
        {
            "standard": "CWE",
            "id": "CWE-120",
            "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
            "url": "https://cwe.mitre.org/data/definitions/120.html",
            "description": "The program copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow."
        }
    ]
}
