{
    "id": 1021096,
    "name": "Avoid second order LDAP injection (Python)",
    "href": "AIP/quality-rules/1021096",
    "critical": true,
    "severity": 30,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.python",
        "href": "AIP/extensions/com.castsoftware.python"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This metric detects execution paths from methods returning data coming from a database down to LDAP methods which are open vulnerabilities to LDAP injection flaws (LDAP: Lightweight Directory Access Protocol).",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences of input source",
    "rationale": "An attacker could include input that changes the LDAP query which allows unintended commands or code to be executed, allows sensitive data to be read or modified or causes other unintended behavior.\n\nLDAP injection (second order) - The application stores data in a database. At a later time, the data is subsequently read back into the application and included in LDAP manipulation methods without sanitization.",
    "reference": "CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')\nhttps://cwe.mitre.org/data/definitions/90.html\n\nOpen Web Application Security Project (OWASP)\nOWASP Top Ten 2017 Category A1 - Injection: https://cwe.mitre.org/data/definitions/1027.html\nOWASP Top Ten 2021 Category A03:2021 - Injection: https://cwe.mitre.org/data/definitions/1347.html\nand https://owasp.org/Top10/A03_2021-Injection/\n\nOWASP Cheat Sheet Series - LDAP Injection Prevention Cheat Sheet\nhttps://cheatsheetseries.owasp.org/cheatsheets/LDAP_Injection_Prevention_Cheat_Sheet.html",
    "remediation": "Use authorized sanitization methods of the library.\n\nInput validation.\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a white-list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
    "remediationSample": "...\n\nfrom ldap3.utils import conv\n\ndb = mysql.connector.connect(...)\ncursor = db.cursor()\n\nuser_name = input(\"LDAP User name?\")\n\ntainted_user_ldap = cursor.execute(\n    \"select ldap_id from users where name=%s\",\n    user_name).fetchone()\nprotected_user_ldap = conv.escape_filter_chars(tainted_user_ldap)  # content is now neutralized\n\nsearch_filter = \"(&(objectclass=person)(uid=%s))\" % protected_user_ldap\nsearch_result = ldap_connection.search(\"ou=People,dc=x,dc=y\",\n                                       search_filter)\nis_member = search_result is not None\n\nif is_member:\n    ...",
    "sample": "...\n\ndb = mysql.connector.connect(...)\ncursor = db.cursor()\n\nuser_name = input(\"LDAP User name?\")\n\ntainted_user_ldap = cursor.execute(\n    \"select ldap_id from users where name=%s\",\n    user_name).fetchone()\n\n# content read from the database is not protected against\n# special characters in LDAP queries\nsearch_filter = \"(&(objectclass=person)(uid=%s))\" % tainted_user_ldap\nsearch_result = ldap_connection.search(\"ou=People,dc=x,dc=y\",\n                                       search_filter)  # violation\nis_member = search_result is not None\n\nif is_member:\n    ...",
    "total": "Number of Python artifacts",
    "alternativeName": "Ensure your application does not run LDAP methods without sanitization",
    "businessCriteria": [
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1061018,
            "name": "CWE-90 - Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
            "href": "AIP/technical-criteria/1061018",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062301,
            "name": "OWASP-2013-A1 - Injection",
            "href": "AIP/technical-criteria/1062301",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062321,
            "name": "OWASP-2017-A1 - Injection",
            "href": "AIP/technical-criteria/1062321",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062343,
            "name": "OWASP-2021-A03 - Injection",
            "href": "AIP/technical-criteria/1062343",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063114,
            "name": "PCI-Requirement-6.5.1 - Injection flaws, particularly SQL injection",
            "href": "AIP/technical-criteria/1063114",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "AIP/technologies/1021000"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-90",
            "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
            "href": "AIP/quality-standards/CWE/items/CWE-90",
            "standard": "CWE"
        },
        {
            "id": "CWE-90",
            "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-90",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-10",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-90",
            "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-90",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "A03-2021",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A03-2021",
            "standard": "OWASP"
        },
        {
            "id": "API8-2019",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/API8-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/quality-standards/PCI-DSS4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS4"
        },
        {
            "id": "STIG-V-222604",
            "name": "The application must protect from command injection.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222604",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
