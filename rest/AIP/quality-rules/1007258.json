{
    "id": 1007258,
    "name": "Avoid cross-site scripting - Improper Neutralization of input during web page generation (PHP)",
    "href": "AIP/quality-rules/1007258",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Reasoning",
    "description": "A reflected cross-site scripting (XSS) vulnerability occurs when user input is embedded unsanitized into the HTML response page of the web application. It allows an attacker to inject arbitrary HTML or JavaScript code into the response page of a tampered request. Usually, this attack is performed by crafting a malicious link that is sent to a victim. When opened, the attacker's JavaScript payload within the link is reflected by the application and executed in the victim's browser in the context of the web application's domain. This enables the attacker to perform phishing attacks or to steal cookies associated with the domain.",
    "output": "This report lists all artifacts that do improper neutralization of input during web page generation within double quoted HTML attribute which could expose application to XSS attack. \nThis QR provides the following information:\nArtifact Full Name",
    "rationale": "The detected injection occurs within a double-quoted HTML attribute. An attacker can break out of this attribute by injecting a double quote (\"). This allows to terminate the current attribute and to append another attribute to the HTML element. For example, a eventhandler attribute can be appended that allows to execute arbitrary JavaScript code.",
    "reference": "https://cwe.mitre.org/data/definitions/80.html\nhttps://www.owasp.org/index.php/Cross-site_Scripting_(XSS)\nhttps://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet",
    "remediation": "In order to prevent the break out of the double-quoted attribute, all double-quotes within the attribute's value must be transformed into the corresponding HTML entity \". For this purpose, the PHP built-in function htmlentities() or htmlspecialchars() can be used that performs this transformation.",
    "remediationSample": "<?php\n\necho(htmlspecialchars($_GET['a']));\n\n?>",
    "sample": "<?php\n\necho($_GET['a']);\n\n?>",
    "total": "Number of Artifacts",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "AIP/technologies/1017000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-79",
            "name": "Cross-site scripting",
            "url": null,
            "description": "Remove instances where a user input is ultimatelydisplayed to the user, without any sanitization (based on a list of vetted sanitization functions, methods, procedures, stored procedures, sub-routines, etc.) of the user input value between the user input and the statement."
        },
        {
            "standard": "CWE",
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "url": "https://cwe.mitre.org/data/definitions/79.html",
            "description": "The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."
        },
        {
            "standard": "OWASP",
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application takes untrusted data and sends it to a web browser without proper validation or escaping. XSS allows attackers to execute scripts in the victims' browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        },
        {
            "standard": "OWASP",
            "id": "A7-2017",
            "name": "Cross-Site Scripting (XSS)",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application includes untrusted data in a new web page without proper validation or escaping, or updates an existing web page with user-supplied data using a browser API that can create HTML or JavaScript. XSS allows attackers to execute scripts in the victim's browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
