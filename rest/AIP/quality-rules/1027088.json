{
    "id": 1027088,
    "name": "Avoid non-public custom exception types",
    "href": "AIP/quality-rules/1027088",
    "critical": false,
    "maxWeight": 8,
    "description": "The rule will raise a violation if it finds an exception type that is derived from:\nSystem.Exception\nSystem.SystemException\nSystem.ApplicationException\n\nand is not 'public'",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "The purpose of custom exception type is to provide information on the error when that cannot be provided using standard exception types. \nIf these custom exception types are made private or internal the purpose of having them itself is not served.",
    "reference": "OWASP 2017-A10- Insufficient Logging and Monitoring\nhttps://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring\n\nhttps://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1064",
    "remediation": "Define custom exception types as Public",
    "remediationSample": "public class MyException : Exception \n{\n  // ...\n}",
    "sample": "internal class MyException : Exception   // violation\n{\n  // ...\n}",
    "total": "Number of classes and structs members",
    "alternativeName": "Avoid non-public custom exception types",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061004,
            "name": "ISO-5055-Security",
            "href": "AIP/business-criteria/1061004"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1061087,
            "name": "CWE-778: Insufficient Logging",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "weight": 8,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-778",
            "name": "Insufficient Logging",
            "url": "https://cwe.mitre.org/data/definitions/778.html",
            "description": "When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-778",
            "name": "Insufficient Logging",
            "url": "https://cwe.mitre.org/data/definitions/778.html",
            "description": "When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it."
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-AU-12",
            "name": null,
            "url": null,
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-778",
            "name": "Insufficient Logging",
            "url": "https://cwe.mitre.org/data/definitions/778.html",
            "description": "When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it."
        },
        {
            "standard": "OWASP",
            "id": "A10-2017",
            "name": null,
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "API10-2019",
            "name": "Insufficient Logging & Monitoring",
            "url": null,
            "description": "Insufficient logging and monitoring, coupled with missing or ineffective integration with incident response, allows attackers to further attack systems, maintain persistence, pivot to more systems to tamper with, extract, or destroy data. Most breach studies demonstrate the time to detect a breach is over 200 days, typically detected by external parties rather than internal processes or monitoring."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
