{
    "id": 1039012,
    "name": "Avoid using referer header field in HTTP request",
    "href": "AIP/quality-rules/1039012",
    "critical": true,
    "severity": 30,
    "maxWeight": 8,
    "extension": {
        "name": "com.castsoftware.jeerules",
        "href": "AIP/extensions/com.castsoftware.jeerules"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "The fields in an HTTP request are putty in the hands of an attacker, and you cannot rely on them to tell you the truth about anything. While it may be safe to store such values after they have been neutralized, decisions should never be made based on their contents. \n\nThis rule reports a violation when a referer header field is used.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Developers may assume that inputs such as cookies, environment variables, and hidden form fields cannot be modified. However, an attacker could change these inputs using customized clients or other attacks. This change might not be detected. When security decisions such as authentication and authorization are made based on the values of these inputs, attackers can bypass the security of the software. \n\nWithout sufficient encryption, integrity checking, or other mechanism, any input that originates from an outsider cannot be trusted. \n\nThe referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.",
    "reference": "http://cwe.mitre.org/data/definitions/293 \nhttp://cwe.mitre.org/data/definitions/807 \nOWASP 2017 Category A2 - Broken Authentication",
    "remediation": "Use of referer in HTTP request header field is not recommended.",
    "remediationSample": "public class MyServlet extends HttpServlet { \n  protected void doPost(HttpServletRequest request, HttpServletResponse response) \n        throws ServletException, IOException { \n    String referer = request.getHeader(headerName); // VIOLATION FIXED\n    //...\n  } \n}",
    "sample": "public class MyServlet extends HttpServlet { \n  protected void doPost(HttpServletRequest request, HttpServletResponse response) \n        throws ServletException, IOException { \n    String referer = request.getHeader(\"referer\"); // VIOLATION \n    if(isTrustedReferer(referer)){ \n      //.. \n    } \n    //... \n  } \n}",
    "total": "Number of Java Methods",
    "alternativeName": "Ensure you are not using \"referer\" header field in HTTP request",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062302,
            "name": "OWASP-2013-A2 - Broken Authentication and Session Management",
            "href": "AIP/technical-criteria/1062302",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062322,
            "name": "OWASP-2017-A2 - Broken Authentication",
            "href": "AIP/technical-criteria/1062322",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062347,
            "name": "OWASP-2021-A07 - Identification and Authentication Failures",
            "href": "AIP/technical-criteria/1062347",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063115,
            "name": "PCI-Requirement-6.5.10 - Broken authentication and session management",
            "href": "AIP/technical-criteria/1063115",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-293",
            "name": "Using Referer Field for Authentication",
            "href": "AIP/quality-standards/CWE/items/CWE-293",
            "standard": "CWE"
        },
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-IA-9",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-IA-9",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A2-2013",
            "name": "Broken Authentication and Session Management",
            "href": "AIP/quality-standards/OWASP/items/A2-2013",
            "standard": "OWASP"
        },
        {
            "id": "A2-2017",
            "name": "Broken Authentication",
            "href": "AIP/quality-standards/OWASP/items/A2-2017",
            "standard": "OWASP"
        },
        {
            "id": "A07-2021",
            "name": "Identification and Authentication Failures",
            "href": "AIP/quality-standards/OWASP/items/A07-2021",
            "standard": "OWASP"
        },
        {
            "id": "API2-2019",
            "name": "Broken User Authentication",
            "href": "AIP/quality-standards/OWASP/items/API2-2019",
            "standard": "OWASP"
        },
        {
            "id": "API2-2023",
            "name": "Broken Authentication",
            "href": "AIP/quality-standards/OWASP/items/API2-2023",
            "standard": "OWASP"
        },
        {
            "id": "M4-2016",
            "name": "Insecure Authentication",
            "href": "AIP/quality-standards/OWASP/items/M4-2016",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
