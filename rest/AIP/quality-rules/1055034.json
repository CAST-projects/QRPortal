{
    "id": 1055034,
    "name": "Avoid empty generic catch blocks (Swift)",
    "href": "AIP/quality-rules/1055034",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "In a Do-Catch statement, generic Catch blocks (catching any error type) should have code that avoids silently passing the errors.\nThis metric reports all Swift callables (functions, methods, or source codes) with at least one empty (or only containing comments) generic catch block.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "An empty catch block defeats the purpose of exceptions.\nWhen an exception occurs, nothing happens and the program fails for an unknown reason. The application can be in an unknown state that will affect subsequent processing.\nSince the reason for the issue (the exception type and potential embedded message) are ignored, it will require more time to fix the issue.",
    "reference": "https://docs.swift.org/swift-book/LanguageGuide/ErrorHandling.html\nhttp://cwe.mitre.org/data/definitions/391.html\nhttps://research.tue.nl/en/publications/how-swift-developers-handle-errors",
    "remediation": "The exception must be handled correctly according to its type.",
    "remediationSample": "// easy remediation\n\ndo {\n    try doSomethingWith(person: \"Alice\")\n    print(\"Success! Yum.\")\n}\ncatch\n{\n   print(\"Unexpected error:\\(error).\")\n}\n\n// better remediation\n\ndo {\n    try doSomethingWith(person: \"Alice\")\n    print(\"Success! Yum.\")\n}\ncatch SomethingError.invalidateError {\n   print(\"Invalid error\")\n}\ncatch {\n   print(\"Unexpected error:\\(error).\")\n}",
    "sample": "do {\n    try doSomethingWith(person: \"Alice\")\n    print(\"Success! Yum.\")\n}\ncatch {\n}",
    "total": "Number of Swift artifacts",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1055000,
            "name": "Swift",
            "href": "AIP/technologies/1055000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCRM-RLB-1",
            "name": "Empty Exception Block",
            "url": null,
            "description": "Objective\nAvoid improper responses to unusual and unexpected situations\n\nConsequence\nSoftware without consistent and complete handling of errors and exceptions makes it impossible to accurately identify and adequately respond to unusual and unexpected situations.\n\nMeasure Element\nNumber of instances where an exception handling block (such as Catch and Finally blocks) of the named callable and method control elements does not contain any other control element\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "url": "https://cwe.mitre.org/data/definitions/391.html",
            "description": "Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed."
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "url": "https://nvd.nist.gov/800-53/Rev4/control/SI-11",
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
