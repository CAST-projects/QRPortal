{
    "id": 2106000,
    "name": "XQuery: StrongTypingInModuleVariableCheck",
    "href": "AIP/quality-rules/2106000",
    "critical": true,
    "associatedValueName": "Nb of violation pattern",
    "description": "This quality rule reports variables declared without a type",
    "output": "Associated to each artifact with violations, the Quality Rule provides: - The number of violation patterns - Bookmarks for violation patterns found in source code.",
    "rationale": "Declare types for declared variables to increase readability and catch potential bugs. Also try to scope the types as narrowly as possible (i.e. use 'element()' instead of 'item()' when the value is an element) and include quantifiers on each type.",
    "reference": "MarkLogic best practices",
    "remediation": "Declare types for declared variables",
    "total": "Number of XQuery Module",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61029,
            "name": "Complexity - Dynamic Instantiation",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 2106000,
            "name": "XQuery",
            "href": "AIP/technologies/2106000"
        }
    ],
    "qualityStandards": [
        
    ]
}
