{
    "id": 1024034,
    "name": "Always check all the BiometricPrompt error options in the onAuthenticationError method",
    "href": "AIP/quality-rules/1024034",
    "critical": true,
    "severity": 20,
    "maxWeight": 7,
    "extension": {
        "name": "com.castsoftware.android",
        "href": "AIP/extensions/com.castsoftware.android"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "The rule will check the use BiometricPrompt AuthenticationCallback onAuthenticationError method.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Running an application which does not fail of/correctly use the platform capability is a mandatory step from development team. The defining characteristic of risks in this category of rules is that the platform (iOS, Android, Windows Phone, etc.) provides a feature or a capability that is documented and well understood.\n\nThe BiometricPrompt framework provides facilities for requesting authentication from users with specified security policies. If you do not use properly the API, you can break the authentication security check. Using BiometricPrompt AuthenticationCallback onAuthenticationError method cannot stay empty/partially used.",
    "remediation": "Always manage the error options:\nBIOMETRIC_ERROR_CANCELED\nBIOMETRIC_ERROR_HW_NOT_PRESENT\nBIOMETRIC_ERROR_HW_UNAVAILABLE\nBIOMETRIC_ERROR_LOCKOUT\nBIOMETRIC_ERROR_LOCKOUT_PERMANENT\nBIOMETRIC_ERROR_NO_BIOMETRICS\nBIOMETRIC_ERROR_NO_SPACE\nBIOMETRIC_ERROR_TIMEOUT\nBIOMETRIC_ERROR_UNABLE_TO_PROCESS\nBIOMETRIC_ERROR_USER_CANCELED\nBIOMETRIC_ERROR_VENDOR",
    "remediationSample": "private BiometricPrompt.AuthenticationCallback getAuthenticationCallback() {\n        // Callback for biometric authentication result\n        return new BiometricPrompt.AuthenticationCallback() {\n            @Override\n            public void onAuthenticationError(int errorCode, CharSequence errString) {\n                super.onAuthenticationError(errorCode, errString);\n\n                switch(errorCode) {\n                   \n                  case BIOMETRIC_ERROR_CANCELED:\n                  case BIOMETRIC_ERROR_HW_UNAVAILABLE:\n                     Log.i(\"The operation was canceled because the biometric sensor is unavailable\");\n                     break;\n                  case BIOMETRIC_ERROR_HW_NOT_PRESENT:\n                     Log.i(\"The device does not have a biometric sensor\");\n                     break;\n\n                  // etc...\n\n                }\n            }\n\n        };\n    }",
    "sample": "private BiometricPrompt.AuthenticationCallback getAuthenticationCallback() {\n        // Callback for biometric authentication result\n        return new BiometricPrompt.AuthenticationCallback() {\n            @Override\n            public void onAuthenticationError(int errorCode, CharSequence errString) {\n                super.onAuthenticationError(errorCode, errString);\n            }\n\n        };\n    }",
    "total": "Number of Android artifacts",
    "alternativeName": "Ensure to check all the BiometricPrompt error options in the onAuthenticationError method",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1061041,
            "name": "CWE-391 - Unchecked Error Condition",
            "href": "AIP/technical-criteria/1061041",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063119,
            "name": "PCI-Requirement-6.5.5 - Improper error handling",
            "href": "AIP/technical-criteria/1063119",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "href": "AIP/technical-criteria/66064",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "href": "AIP/quality-standards/CWE/items/CWE-391",
            "standard": "CWE"
        },
        {
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-391",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-11",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-391",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "M1-2016",
            "name": "Improper Platform Usage",
            "href": "AIP/quality-standards/OWASP/items/M1-2016",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        },
        {
            "id": "STIG-V-222656",
            "name": "The application must not be subject to error handling vulnerabilities.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222656",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
