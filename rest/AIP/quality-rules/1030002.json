{
    "id": 1030002,
    "name": "Avoid using \"Throwable.printStackTrace()\" with no argument (Kotlin)",
    "href": "AIP/quality-rules/1030002",
    "critical": false,
    "maxWeight": 6,
    "description": "Throwable.printStackTrace(...) prints a Throwable and its stack trace to some stream. If no argument is used, the default stream System.Err will be used, which could inadvertently expose sensitive information.\n\n\nThe rule will raise a violation when printStackTrace prints directly to the default stream.",
    "output": "Reports cases where printStackTrace() is used without argument.",
    "rationale": "Using 'Throwable.printStackTrace()' usually means that it is used to log the stack of errors, which has the risk of filling up the stdout or the log file. Moreover, it is accessible to end-user which is bad for security and user-experience.\nIt is recommended to use a Logger instead.",
    "reference": "http://cwe.mitre.org/data/definitions/489.html\nOWASP Top 10 2017 Category A3 - Sensitive Data Exposure",
    "remediation": "1. Loggers should be used instead to print Throwables, as they have many advantages:Users are able to easily retrieve the logs.\nThe format of log messages is uniform and allows users to browse the logs easily.\n\n2. Define a specific stream where the stack trace is to be printed.",
    "remediationSample": "fun main(args: Array<String>){\n    try {\n        test()\n    } catch (e: UnsupportedOperationException) {\n        LOGGER.log(\"context\",e) //Violation Fixed: Logger is used\n    }\n}\n\n________________________________________________\n\nfun main(args: Array<String>){\n    try {\n        test()\n    } catch (e: UnsupportedOperationException) {\n        e.printStackTrace(stream: PrintStream) //Violation fixed: A specific stream is defined to print the stack trace\n    }\n}",
    "sample": "fun main(args: Array<String>){\n    try {\n        test()\n    } catch (e: UnsupportedOperationException) {\n        e.printStackTrace()\n    }\n}",
    "total": "Number of non abstract Kotlin artifacts",
    "alternativeName": "Ensure to not use default stream(System.Err) for printStackTrace to print throwable and its stack trace in order to protect sensitive information.",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1030000,
            "name": "Kotlin",
            "href": "AIP/technologies/1030000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCRM-CWE-396",
            "name": "Declaration of Catch for Generic Exception",
            "url": null,
            "description": null
        },
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-396",
            "name": "Declaration of Catch for Generic Exception",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-396",
            "name": "Declaration of Catch for Generic Exception",
            "url": null,
            "description": null
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
