{
    "id": 1024036,
    "name": "Always check all the BiometricPrompt acquired options in the onAuthenticationSucceeded method ",
    "href": "AIP/quality-rules/1024036",
    "critical": true,
    "severity": 20,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check if the BiometricPrompt acquired implements onAuthenticationSucceeded.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Running an application which does not fail of/correctly use the platform capability is a mandatory step from development team. The defining characteristic of risks in this category of rules is that the platform (iOS, Android, Windows Phone, etc.) provides a feature or a capability that is documented and well understood.\n\nAlways check all the BiometricPrompt acquired options to ensure when implementing onAuthenticationSucceeded.",
    "reference": "https://developer.android.com/reference/android/hardware/biometrics/BiometricPrompt#constants",
    "remediation": "Ensure all the following status have been checked:\nBIOMETRIC_ACQUIRED_GOOD (The image acquired was good.)\nBIOMETRIC_ACQUIRED_IMAGER_DIRTY (The biometric image was too noisy due to suspected or detected dirt on the sensor.)\nBIOMETRIC_ACQUIRED_INSUFFICIENT (The biometric image was too noisy to process due to a detected condition or a possibly dirty sensor)\nBIOMETRIC_ACQUIRED_PARTIAL (Only a partial biometric image was detected.)\nBIOMETRIC_ACQUIRED_TOO_FAST (The biometric image was incomplete due to quick motion.)\nBIOMETRIC_ACQUIRED_TOO_SLOW (The biometric image was unreadable due to lack of motion.)",
    "remediationSample": "private BiometricPrompt.AuthenticationCallback getAuthenticationCallback() {\n        // Callback for biometric authentication result\n        return new BiometricPrompt.AuthenticationCallback() {\n\n            @Override\n            public void onAuthenticationSucceeded(BiometricPrompt.AuthenticationResult result) {\n                Log.i(TAG, \"onAuthenticationSucceeded\");\n                super.onAuthenticationSucceeded(result);\n\n                switch(result) {\n                    case BIOMETRIC_ACQUIRED_GOOD:\n                       Log.i(\"The image acquired was good\");\n                       // call the success method\n                       break;\n                    case BIOMETRIC_ACQUIRED_IMAGER_DIRTY:\n                    case BIOMETRIC_ACQUIRED_INSUFFICIENT:\n\n                       Log.i(\"The image acquired was not good, please try again\");\n                       // call again the authentication method\n                       break;\n                    case BIOMETRIC_ACQUIRED_PARTIAL:\n                    case BIOMETRIC_ACQUIRED_TOO_FAST:\n                    case BIOMETRIC_ACQUIRED_TOO_SLOW:\n                       Log.i(\"Technical issue happened, please try again\");\n                       // call again the authentication method\n                       break;\n\n\n                }\n            }\n        };\n    }",
    "sample": "private BiometricPrompt.AuthenticationCallback getAuthenticationCallback() {\n        // Callback for biometric authentication result\n        return new BiometricPrompt.AuthenticationCallback() {\n\n            @Override\n            public void onAuthenticationSucceeded(BiometricPrompt.AuthenticationResult result) {\n                Log.i(TAG, \"onAuthenticationSucceeded\");\n                super.onAuthenticationSucceeded(result);\n\n                // do not check success status\n            }\n        };\n    }",
    "total": "Number of Android artifacts",
    "alternativeName": "Ensure to check all BiometricPrompt acquired options in the onAuthenticationSucceeded method",
    "businessCriteria": [
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1061041,
            "name": "CWE-391 - Unchecked Error Condition",
            "href": "AIP/technical-criteria/1061041",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "href": "AIP/technical-criteria/66063",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "href": "AIP/quality-standards/CWE/items/CWE-391",
            "standard": "CWE"
        },
        {
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-391",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-391",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "M1-2016",
            "name": "Improper Platform Usage",
            "href": "AIP/quality-standards/OWASP/items/M1-2016",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "STIG-V-222656",
            "name": "The application must not be subject to error handling vulnerabilities.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222656",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
