{
    "id": 1020108,
    "name": "Avoid dangerous file inclusion (JSTL) (Javascript/HTML5)",
    "href": "AIP/quality-rules/1020108",
    "critical": true,
    "severity": 20,
    "maxWeight": 9,
    "extension": {
        "name": "com.castsoftware.html5",
        "href": "AIP/extensions/com.castsoftware.html5"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This quality rule detects inclusion of file in JSP through the tags jsp:include and c:import.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "The File Inclusion vulnerability allows an attacker to include a file, usually exploiting a \u201cdynamic file inclusion\u201d mechanisms implemented in the target application. The vulnerability occurs due to the use of user-supplied input without proper validation.\n\nThis can lead to something as outputting the contents of the file, but depending on the severity, it can also lead to:\n\nCode execution on the web server\nCode execution on the client-side such as JavaScript which can lead to other attacks such as cross site scripting (XSS)\nDenial of Service (DoS)\nSensitive Information Disclosure",
    "reference": "CWE-97: Improper Neutralization of Server-Side Includes (SSI) Within a Web Page\nhttps://cwe.mitre.org/data/definitions/97.html\n\nCWE-829: Inclusion of Functionality from Untrusted Control Sphere\nhttps://cwe.mitre.org/data/definitions/829.html\n\nOWASP - WSTG - v4.2 - Testing for Local File Inclusion\nhttps://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion",
    "remediation": "The most effective solution to eliminate file inclusion vulnerabilities is to avoid passing user-submitted input to any filesystem/framework API.\nIf this is not possible, use a white list.\nNever include files using anonymously relative paths, instead using either an absolute path or root relative path.",
    "remediationSample": "Sample 1:\n<jsp:include page=\"notainted.jsp\" />    // FIXED: page is safe\n\nSample 2:\n<c:import url=\"notaintedurl\">   // FIXED: url is safe",
    "sample": "Sample 1:\n<jsp:include page=\"<%= (String)request.getParameter(\\\"template\\\")%>\">   // VIOLATION: page is tainted input\n\nSample 2:\n<c:import url=\"<%= request.getParameter(\"privacy\")%>\">   // VIOLATION: url is tainted input",
    "total": "Number of JSP Contents",
    "alternativeName": "Reports usage of dynamic file inclusion, file which name is tainted input.",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1066197,
            "name": "CWE-97 - Improper Neutralization of Server-Side Includes (SSI) Within a Web Page",
            "href": "AIP/technical-criteria/1066197",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062301,
            "name": "OWASP-2013-A1 - Injection",
            "href": "AIP/technical-criteria/1062301",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062321,
            "name": "OWASP-2017-A1 - Injection",
            "href": "AIP/technical-criteria/1062321",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062343,
            "name": "OWASP-2021-A03 - Injection",
            "href": "AIP/technical-criteria/1062343",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063155,
            "name": "PCI-DSS4-Requirement-6.2.4 - Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/technical-criteria/1063155",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063114,
            "name": "PCI-Requirement-6.5.1 - Injection flaws, particularly SQL injection",
            "href": "AIP/technical-criteria/1063114",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-97",
            "name": "Improper Neutralization of Server-Side Includes (SSI) Within a Web Page",
            "href": "AIP/quality-standards/CWE/items/CWE-97",
            "standard": "CWE"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53/items/NIST-SI-10",
            "standard": "NIST-SP-800-53"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "A03-2021",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A03-2021",
            "standard": "OWASP"
        },
        {
            "id": "API8-2019",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/API8-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        },
        {
            "id": "STIG-V-222604",
            "name": "The application must protect from command injection.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222604",
            "standard": "STIG-V5"
        },
        {
            "id": "STIG-V-222604",
            "name": "The application must protect from command injection.",
            "href": "AIP/quality-standards/STIG-V6/items/STIG-V-222604",
            "standard": "STIG-V6"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
