{
    "id": 1020924,
    "name": "Avoid using net.Socket object as stream with vulnerable version of Node.js (TypeScript)",
    "href": "AIP/quality-rules/1020924",
    "critical": true,
    "maxWeight": 8,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check the instance of net.Socket service (net.createConnection or net.connect) and the Node.js version used by the application.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Versions 9.7.0 and later are vulnerable and the severity is MEDIUM. A bug introduced in 9.7.0 increases the memory consumed when reading from the network into JavaScript using the net.Socket object directly as a stream. This rule has been listed as CVE-2018-7164 in the CVE registry.\n\nAll versions before Node.js 9.11.2 and 10.4.1 are vulnerable.",
    "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-7164",
    "remediation": "Update the Node.js library.",
    "sample": "import * as net from 'net';\n\nconst client = net.createConnection({ port: 8124 }, () => {\n  // 'connect' listener\n  console.log('connected to server!');\n  client.write('world!\\r\\n');\n});",
    "total": "Number of source codes using net.createConnection()",
    "alternativeName": "Ensure you don't reference net.createConnection method of net.Socket service with NodeJS versions from 9.7.0 to  9.11.2 and from 10.0.0 to 10.4.1",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062309,
            "name": "OWASP-2013-A9 Using Components with Known Vulnerabilities",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062329,
            "name": "OWASP-2017-A9 Using Components with Known Vulnerabilities",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-676",
            "name": "Use of Potentially Dangerous Function",
            "url": "https://cwe.mitre.org/data/definitions/676.html",
            "description": "The program invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely."
        },
        {
            "standard": "OWASP",
            "id": "A9-2013",
            "name": "Using Components with Known Vulnerabilities",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities",
            "description": "Components, such as libraries, frameworks, and other software modules, almost always run with full privileges. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications using components with known vulnerabilities may undermine application defenses and enable a range of possible attacks and impacts."
        },
        {
            "standard": "OWASP",
            "id": "A9-2017",
            "name": "Using Components with Known Vulnerabilities",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities",
            "description": "Components, such as libraries, frameworks, and other software modules, run with the same privileges as the application. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications and APIs using components with known vulnerabilities may undermine application defenses and enable various attacks and impacts."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
