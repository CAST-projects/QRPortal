{
    "id": 1019018,
    "name": "Avoid 'ServiceContract' without any operation contract",
    "href": "AIP/quality-rules/1019018",
    "critical": false,
    "severity": 10,
    "maxWeight": 4,
    "associatedValueName": "Number of violation occurrences",
    "description": "The rule will raise a violation when a interface/class has been annotated with [ServiceContract] but does not contain any method that is annotated with [OperationContract], [WebInvoke], [WebGet]...",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "A Service Contract basically describes the operations a service exposes to another party (in other words a client). It's recommended to apply the ServiceContract attribute to an interface, although it can be applied to a class as well. Operation Contract is applied to a method to indicate that the method implements a service operation as part of a service contract.\nThus to have a service contract without any meaningful operation contract(method) to do a task indicates missing logic.",
    "reference": "https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.operationcontractattribute?view=dotnet-plat-ext-3.1",
    "remediation": "Always define a service operation method and annotate it with [OperationContract], [WebInvoke], [WebGet]...",
    "remediationSample": "[ServiceContract]\ninterface ISimpleService\n{\n     [OperationContract]  //Violation Fixed\n     string SimpleOperation();\n}\nor\n[ServiceContract]\ninterface ISimpleService\n{\n     [WebGet(...)]  //Violation Fixed\n     string SimpleOperation();\n}",
    "sample": "[ServiceContract]\ninterface ISimpleService\n{\n     string SimpleOperation();  //Violation\n}",
    "total": "Number of classes/interfaces annotated with [ServiceContract]",
    "alternativeName": "Avoid 'ServiceContract' without any operation contract",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness",
            "href": "AIP/technical-criteria/61024",
            "weight": 4,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1019000,
            "name": "WCF",
            "href": "AIP/technologies/1019000"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
