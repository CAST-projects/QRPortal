{
    "id": 8222,
    "name": "Avoid hardcoded credentials",
    "href": "AIP/quality-rules/8222",
    "critical": true,
    "associatedValueName": "Call stack from hardcoded string down to the target method",
    "description": "This rule will detect a call path where a hardcoded credential is sent to a method used for its own inbound authentication, outbound communication to external components or validate the authentication for retrieval of data. \nThe list of credential passing methods can be customized.",
    "output": "Lists all methods that call target methods, passing at least one hardcoded credential parameter. \n\nIt provides the following information : \n - Method full name. \n - Call stack with bookmarks from hardcoded credential literal down to the target method.",
    "rationale": "The software should not have hardcoded credentials (username, password) in the application code or files. \nHard-coded credentials typically create a significant security hole that allows an attacker to bypass the authentication that has been configured by the software administrator. \nThis hole might be difficult for the system administrator to detect. Even if detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely.",
    "reference": "CWE-798: Use of hard-coded credentials\nhttp://cwe.mitre.org/data/definitions/798.html",
    "remediation": "Potential remediations : \n- Outbound authentication : consider storing passwords and keys outside of the code, in the most strongly-protected, encrypted storage. This storage should be protected from outsiders, even other local users from the same system. \n- Inbound authentication : consider using login authentication with strong passwords or keys instead of hardcoding usernames and passwords. \n- If hardcoded credentials cannot be removed, perform access control checks and limit accessed resources.",
    "total": "Number of methods containing credential parameter(s)",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-798",
            "name": "Hard-Coded Credentials Usage for Remote Authentication",
            "url": null,
            "description": "Objective\nAvoid the existence of hard-coded credentials elements\n\nConsequence\nSoftware featuring weak authentication practices incurs the risk of exposing resources and functionality to unintended actors, possibly leading to compromised sensitive information and even the execution of arbitrary code\n\nMeasure Element\nNumber of instances where a storable data element or member data element is initialized by a \u2018Write\u2019 action, transported throughout the application along the transport sequence composed of ActionElements with DataRelations relations, some of which being part of named callable and method control elements, and ultimately used in the remote resource management action ; the transport sequence is composed of assignment operations as updates to the value would not be considered as hard-coded (literal) any more.\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-256",
            "name": "Unprotected Storage of Credentials",
            "url": "https://cwe.mitre.org/data/definitions/256.html",
            "description": "Storing a password in plaintext may result in a system compromise."
        },
        {
            "standard": "CWE",
            "id": "CWE-798",
            "name": "Use of Hard-coded Credentials",
            "url": "https://cwe.mitre.org/data/definitions/798.html",
            "description": "The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data."
        },
        {
            "standard": "OWASP",
            "id": "A2-2013",
            "name": "Broken Authentication and Session Management",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A2-Broken Authentication and Session Management",
            "description": "Application functions related to authentication and session management are often not implemented correctly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users' identities."
        },
        {
            "standard": "OWASP",
            "id": "A2-2017",
            "name": "Broken Authentication",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication",
            "description": "Application functions related to authentication and session management are often implemented incorrectly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users' identities temporarily or permanently."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
