{
    "id": 1050036,
    "name": "Ensure that iOS Projects are ARC enabled",
    "href": "AIP/quality-rules/1050036",
    "critical": false,
    "maxWeight": 8,
    "associatedValueName": "Number of violation occurrences",
    "description": "Ensure that Automatic Retain Count (ARC) setting has been enabled in your Xcode project.",
    "output": "All projects that don't have the ARC setting enabled to YES.\nAssociated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Uncontrolled memory allocation is possible in many languages, such as Objective-C using Automatic Retain Count system. However, the programmers could use directly control memory management with retain/release principles. A bad understanding of the direct memory management could lead to unexpected crashes.",
    "reference": "https://developer.apple.com/library/ios/releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html#//apple_ref/doc/uid/TP40011226-CH1-SW4",
    "remediation": "Enable ARC option in Xcode Project",
    "total": "Number of Objective-C artifacts",
    "alternativeName": "Ensure that iOS Projects are ARC enabled",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1062104,
            "name": "CISQ-Security",
            "href": "AIP/business-criteria/1062104"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061004,
            "name": "ISO-5055-Security",
            "href": "AIP/business-criteria/1061004"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062190,
            "name": "ASCSM-CWE-789 - Uncontrolled Memory Allocation",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061092,
            "name": "CWE-789: Uncontrolled Memory Allocation",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 8,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1050001,
            "name": "Objective-C",
            "href": "AIP/technologies/1050001"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-789",
            "name": "Uncontrolled Memory Allocation",
            "url": null,
            "description": "Objective\nAvoid failure to check range of user input in use as buffer index\n\nConsequence\nSoftware that is unaware of buffer bounds incurs the risk of corruption of relevant memory, and perhaps instructions, possibly leading to a crash, the risk of data integrity loss, and the risk of unauthorized access to sensitive data\n\nMeasure Element\nNumber of instances where an external value is entered into the application through the user interface ReadsUI action, transformed throughout the application along the sequence composed of ActionElements with DataRelations relations, some of which being part of named callable and method control elements, and ultimately used in the buffer Read or Write access action; none of the callable or method control element of the transformation sequence being a range check control element.\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-789",
            "name": "Uncontrolled Memory Allocation",
            "url": "https://cwe.mitre.org/data/definitions/789.html",
            "description": "The product allocates memory based on an untrusted size value, but it does not validate or incorrectly validates the size, allowing arbitrary amounts of memory to be allocated."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-789",
            "name": "Uncontrolled Memory Allocation",
            "url": "https://cwe.mitre.org/data/definitions/789.html",
            "description": "The product allocates memory based on an untrusted size value, but it does not validate or incorrectly validates the size, allowing arbitrary amounts of memory to be allocated."
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-789",
            "name": "Uncontrolled Memory Allocation",
            "url": "https://cwe.mitre.org/data/definitions/789.html",
            "description": "The product allocates memory based on an untrusted size value, but it does not validate or incorrectly validates the size, allowing arbitrary amounts of memory to be allocated."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
