{
    "id": 7150,
    "name": "Favor PreparedStatement or CallableStatement over Statement",
    "href": "AIP/quality-rules/7150",
    "critical": false,
    "severity": 10,
    "maxWeight": 9,
    "associatedValueName": "Full Name of createStatement method called",
    "description": "All references to the method java.sql.Connection.createStatement() must be avoided.",
    "output": "This report lists all methods that reference java.sql.Connection.Statement interface instances (or its sub-interface or sub-class).\nIt provides the following information: \n - Method Full Name\n - The Full Name of createStatement method that has been called",
    "rationale": "There are two benefits to use PreparedStatement or CallableStatement over Statement:\n- Performance: PreparedStatement gives better performance when compared to Statement because it is pre-parsed. CallableStatement is even more efficient but as it uses a stored procedure in the database, it is less portable,\n- Security: to prevent SQL Injection Attacks.",
    "reference": "http://www.theserverside.com/tt/articles/article.tss?l=JavaOne2006Day4\nhttp://www.precisejava.com/javaperf/j2ee/JDBC.htm",
    "remediation": "use java.sql.Connection.prepareStatement() or java.sql.Connection.prepareCall() instead.",
    "remediationSample": "PreparedStatement ps = connection.prepareStatement(\"select address from employee where name=Bob\"); // FIXED\n\nResultSet rs = ps.executeQuery();",
    "sample": "Statement stmt = connection.createStatement(); // VIOLATION\n\nResultSet rs = stmt.executeQuery(\"select address from employee where name=Bob\");",
    "total": "Number of methods that call java.sql.Connection.createStatement() or java.sql.Connection.prepareStatement() or java.sql.Connection.prepareCall()",
    "alternativeName": "Prefer using PreparedStatement or CallableStatement over CreateStatement to prevent SQL Injection Attacks",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 9,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "API8-2019",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/API8-2019",
            "standard": "OWASP"
        },
        {
            "id": "API10-2023",
            "name": "Unsafe Consumption of APIs",
            "href": "AIP/quality-standards/OWASP/items/API10-2023",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "PCI-DSS4-Requirement-6.2.4",
            "name": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V4/items/PCI-DSS4-Requirement-6.2.4",
            "standard": "PCI-DSS-V4"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
