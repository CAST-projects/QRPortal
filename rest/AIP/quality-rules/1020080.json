{
    "id": 1020080,
    "name": "Avoid using setInterval() (Javascript)",
    "href": "AIP/quality-rules/1020080",
    "critical": true,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will raise a violation when the first argument given to setInterval() function is a string.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "When a string is passed as first argument of the setInterval(), it is dynamically executed. \nIf a part of that string comes from an input from an upstream component, it could allow arbitrary code to be run and represents a security issue. \nFurthermore dynamic evaluation of code can be slower.",
    "reference": "http://cwe.mitre.org/data/definitions/95.html \nhttps://www.owasp.org/index.php/Top_10_2013-A1-Injection \nhttps://www.w3schools.com/js/js_best_practices.asp",
    "remediation": "Use a function as first argument of the setInterval function.",
    "remediationSample": "function delayedFunction() { \nalert(\"This is a delay\"); \n} \n\n// safe - direct call of the function \nwindow.setInterval(delayedFunction, 100);",
    "sample": "// if an attacker can edit the variable hello, he will be able to execute his own code\nsetInterval(\"alert('\" + hello + \"')\", 1000);\n\na =  \"alert('hello')\"\nwindow.setInterval(a,1000)\n\n\nfunction f () {\n  return \"alert('hello')\"\n}\nsetInterval(f(), 1000)",
    "total": "Number of Javascript Functions using setInterval",
    "alternativeName": "Avoid using setInterval with a string as first argument",
    "businessCriteria": [
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062301,
            "name": "OWASP-2013-A1 Injection",
            "href": "AIP/technical-criteria/1062301",
            "weight": 5
        },
        {
            "id": 1062321,
            "name": "OWASP-2017-A1 Injection",
            "href": "AIP/technical-criteria/1062321",
            "weight": 5
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 7
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-95",
            "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
            "href": "AIP/quality-standards/CWE/items/CWE-95",
            "standard": "CWE"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "API8-2019",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/API8-2019",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "STIG-V-70261",
            "name": "The application must protect from command injection.",
            "href": "AIP/quality-standards/STIG-V4R8/items/STIG-V-70261",
            "standard": "STIG-V4R8"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
