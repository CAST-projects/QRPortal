{
    "id": 590,
    "name": "Avoid using global objects in Constructors and Destructors",
    "href": "AIP/quality-rules/590",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Global object used",
    "description": "This rule searches for C++ constructors and destructors using global objects. Note that constructors and destructors using global variables defined in the same compilation are not considered as violating the rule.",
    "output": "Associated to each C++ destructor and destructor with violations, the Quality Rule provides:\n- The global object used\n- Bookmarks for violation occurrences found in source code:\n  - global object used",
    "rationale": "It is not recommended to use global objects in constructors or destructors because it is not possible to know in which order the global objects are instantiated or deleted through different C++ compilation units. Thus there is a risk when global objects are used in constructors or destructors that the application will crash because a call is made to an object that is not yet in existence or has already been destroyed.",
    "remediation": "Review the object construction/destruction logic to not use global objects at this step.",
    "total": "Number of C++ Constructors and Destructors",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61020,
            "name": "Programming Practices - Modularity and OO Encapsulation Conformity",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70385",
            "name": "The application development team must follow a set of coding standards.",
            "url": null,
            "description": "Coding standards are guidelines established by the development team or individual developers that recommend programming style, practices and methods.  The coding standards employed will vary based upon the programming language that is being used to develop the application and the development team.\n\nCoding standards often cover the use of white space characters, variable naming conventions, function naming conventions, and comment styles.  Implementing coding standards provides many benefits to the development process.  These benefits include code readability, coding consistency among both individual and teams of developers as well as ease of code integration.  \n\nThe following are examples of what will typically be in a coding standards document.  This list is an example of what one can expect to find in typical coding standard documents and is not a comprehensive list:\n\n- Indent style conventions\n- Naming conventions\n- Line length conventions\n- Comment conventions\n- Programming best practices\n- Programming style conventions\n\nCoding standards allow developers to quickly adapt to code which has been developed by various members of a development team.  Coding standards are useful in the code review process as well as in situations where a team member leaves and duties must then be assigned to another team member.  \n\nCode conforming to a standard format is easier to read, especially if someone other than the original developer is examining the code.  In addition, formatted code can be debugged and corrected faster than unformatted code.\n\nIntroducing coding standards can help increase the consistency, reliability, and security of the application by ensuring common programming structures and tasks are handled by similar methods, as well as, reducing the occurrence of common logic errors."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
