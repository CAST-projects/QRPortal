{
    "id": 1042028,
    "name": "Avoid package configuration having no or wildcard namespace with Struts2",
    "href": "AIP/quality-rules/1042028",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "Three Struts result types are unsafe when used without a namespace or using wildcard (*,/) namespace. Results can be defined either in the Struts configuration file or in Java code (if the Struts Convention plugin is used). The following three result types are vulnerable:\n\n- Redirect action: an action that redirects the visitor to a different URL. \n- Action chaining: a method to chain multiple actions into a defined sequence or workflow. \n- Postback result: renders the current request parameters as a form which immediately submits a postback to the specified destination chain or postback. \n\nand Setting 'alwaysSelectFullNamespace' to 'true' is not solving the issue it can allow Remote Code Execution \n\n\nFor your application to be vulnerable to the attack vectors described below, both of the following conditions should hold:\n\n- The alwaysSelectFullNamespace flag is set to true in the Struts configuration. \n- Your application uses actions that are configured without specifying a namespace, or with a wildcard namespace (e.g. \u201c/*\u201d). This applies to actions and namespaces specified in the Struts configuration file (e.g. <package namespace=\"main\">), but also to actions and namespaces specified in Java code if you are using the Struts Convention plugin.\n\nIn this case your application is very likely vulnerable to CVE-2018-11776\nThis remote code execution vulnerability affects most of supported versions of Apache Struts 2.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Critical remote code execution vulnerabilities like the one that affected Equifax and the one we announced today are incredibly dangerous for several reasons: Struts is used for publicly-accessible customer-facing websites, vulnerable systems are easily identified, and the flaw is easy to exploit. A hacker can find their way in within minutes, and exfiltrate data or stage further attacks from the compromised system. It\u2019s crucially important to update affected systems immediately; to wait is to take an irresponsible risk.",
    "reference": "https://cwiki.apache.org/confluence/display/WW/S2-057\nhttps://nvd.nist.gov/vuln/detail/CVE-2018-11776",
    "remediation": "This new remote code execution vulnerability affects all supported versions of Apache Struts 2. \n- Users of Struts 2.3 are strongly advised to upgrade to 2.3.35\n- Users of Struts 2.5 need to upgrade to 2.5.17.",
    "remediationSample": "This new remote code execution vulnerability affects all supported versions of Apache Struts 2. \n- Users of Struts 2.3 are strongly advised to upgrade to 2.3.35\n- Users of Struts 2.5 need to upgrade to 2.5.17.",
    "sample": "For example, the following struts.xml configuration is potentially vulnerable becasue no namespace is specified \n\n<struts>\n\u00a0 <package> //no namespace is specified\n\u00a0\u00a0\u00a0 <action name=\"a1\">\n\u00a0\u00a0\u00a0\u00a0 \u00a0<result type=\"redirectAction\">\n\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0<param name=\"actionName\">a2.action</param>\n\u00a0\u00a0\u00a0\u00a0\u00a0 </result>\n\u00a0\u00a0\u00a0 </action>\n \u00a0</package>\n</struts>\n\n<struts>\n  <constant name=\"struts.mapper.alwaysSelectFullNamespace\" value=\"true\" /> //alwaysSelectFullNamespace set to True\n  ...\n\n--------------------\n\nFor example, the following struts.xml configuration is potentially vulnerable because a wildcard namespace is used\n<struts>\n\u00a0 <package name=\"mypackage1\" namespace=\"/*\"> // wildcard namespace\n\u00a0\u00a0\u00a0 <action name=\"a1\">\n\u00a0\u00a0\u00a0\u00a0 \u00a0<result type=\"redirectAction\">\n\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0<param name=\"actionName\">a2.action</param>\n\u00a0\u00a0\u00a0\u00a0\u00a0 </result>\n\u00a0\u00a0\u00a0 </action>\n \u00a0</package>\n</struts>\n\n<struts>\n  <constant name=\"struts.mapper.alwaysSelectFullNamespace\" value=\"true\" /> //alwaysSelectFullNamespace set to True\n  ...",
    "total": "Number of Field in struts2 Config XML",
    "alternativeName": "",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "A1-2013",
            "name": "Injection",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A1-Injection",
            "description": "Injection flaws, such as SQL, OS, and LDAP injection occur when untrusted data is sent to an interpreter as part of a command or query. The attackers' hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization."
        },
        {
            "standard": "OWASP",
            "id": "A1-2017",
            "name": "Injection",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A1-Injection",
            "description": "Injection flaws, such as SQL, NoSQL, OS, and LDAP injection, occur when untrusted data is sent to an interpreter as part of a command or query. The attacker's hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization."
        },
        {
            "standard": "OWASP",
            "id": "A9-2013",
            "name": "Using Components with Known Vulnerabilities",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities",
            "description": "Components, such as libraries, frameworks, and other software modules, almost always run with full privileges. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications using components with known vulnerabilities may undermine application defenses and enable a range of possible attacks and impacts."
        },
        {
            "standard": "OWASP",
            "id": "A9-2017",
            "name": "Using Components with Known Vulnerabilities",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities",
            "description": "Components, such as libraries, frameworks, and other software modules, run with the same privileges as the application. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications and APIs using components with known vulnerabilities may undermine application defenses and enable various attacks and impacts."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
