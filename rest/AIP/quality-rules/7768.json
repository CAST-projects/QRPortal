{
    "id": 7768,
    "name": "Avoid Artifacts with High Depth of Code",
    "href": "AIP/quality-rules/7768",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Depth of Code",
    "description": "Depth of Code is measured as the maximum number of nested control statements in an artifact. For example, an \nArtifact that contains an IF statement which contains a While loop which itself contains another IF statement will have a Depth of Code of 3 (at least).\nAvoid Artifacts with Depth of Code (DoC) greater than X. The threshold level is a parameter that can be changed at will.",
    "output": "This report lists all Artifacts with a Depth of Code greater than X. It provides the following information: Artifact full name, DoC",
    "rationale": "Complex Artifacts are difficult to maintain. Keeping Artifacts small and simple ensures a good readability of the code.",
    "remediation": "Review the design of the Artifact to reduce the Depth of Code",
    "total": "Number of Artifacts",
    "alternativeName": "Avoid Artifacts with High Depth of Code",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61009,
            "name": "Complexity - Algorithmic and Control Structure Complexity",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -15,
            "name": "ABAP",
            "href": "AIP/technologies/-15"
        },
        {
            "id": -19,
            "name": "ASP",
            "href": "AIP/technologies/-19"
        },
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        },
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        },
        {
            "id": -4,
            "name": "Cobol",
            "href": "AIP/technologies/-4"
        },
        {
            "id": -10,
            "name": "Forms",
            "href": "AIP/technologies/-10"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138663,
            "name": "JavaScript",
            "href": "AIP/technologies/138663"
        },
        {
            "id": 140998,
            "name": "Microsoft T-SQL",
            "href": "AIP/technologies/140998"
        },
        {
            "id": 139287,
            "name": "PL/SQL",
            "href": "AIP/technologies/139287"
        },
        {
            "id": -8,
            "name": "PowerBuilder",
            "href": "AIP/technologies/-8"
        },
        {
            "id": 1101000,
            "name": "SQL",
            "href": "AIP/technologies/1101000"
        },
        {
            "id": -13,
            "name": "SQL Server",
            "href": "AIP/technologies/-13"
        },
        {
            "id": 141001,
            "name": "Sybase T-SQL",
            "href": "AIP/technologies/141001"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        },
        {
            "id": -9,
            "name": "Visual Basic",
            "href": "AIP/technologies/-9"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-1124",
            "name": "Excessively Deep Nesting",
            "url": "https://cwe.mitre.org/data/definitions/1124.html",
            "description": "The code contains a callable or other code grouping in which the nesting / branching is too deep."
        },
        {
            "standard": "OWASP",
            "id": "M7-2016",
            "name": "Poor Code Quality",
            "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-M7-Poor_Code_Quality",
            "description": "Code quality issues are fairly prevalent within most mobile code. The good news is that most code quality issues are fairly benign and result in bad programming practice. It is typically difficult to detect these types of issues through manual code review. Instead, attackers will use third-party tools that perform static analysis or perform fuzzing. These types of tools will typically identify memory leaks, buffer overflows, and other less severe issues that result in bad programming practice. Hackers with extreme low-level knowledge and expertise are able to effectively exploit these types of issues. The typical primary goal is to execute foreign code within the mobile code's address space."
        }
    ],
    "parameters": [
        {
            "name": "Maximum Depth of Code",
            "description": "Max Depth of Code per artifact",
            "technologies": [
                {
                    "id": 0,
                    "name": "ALL TECHNOLOGIES",
                    "href": "AIP/technologies/0",
                    "values": [
                        5
                    ]
                }
            ]
        }
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
