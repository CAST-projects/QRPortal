{
    "id": 1070,
    "name": "Avoid header files circular references",
    "href": "AIP/quality-rules/1070",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "The depth of inclusion",
    "description": "This rule searches for circular references between C header files.",
    "output": "Associated to each C header file with violations, the Quality Rule provides:\n- the depth of inclusion",
    "rationale": "Header files often include other header files. This leads to compilation problems when there are circular references in Header files. For example: Header1.h includes Header2.h which includes Header1.h. This will be detected on \"n\" levels.",
    "remediation": "Review the header file dependency and remove circular calls.",
    "total": "Number of C header files",
    "alternativeName": "Avoid header files circular references",
    "businessCriteria": [
        {
            "id": 66032,
            "name": "Architectural Design",
            "href": "AIP/business-criteria/66032"
        },
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1062101,
            "name": "CISQ-Maintainability",
            "href": "AIP/business-criteria/1062101"
        },
        {
            "id": 1062103,
            "name": "CISQ-Reliability",
            "href": "AIP/business-criteria/1062103"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061001,
            "name": "ISO-5055-Maintainability",
            "href": "AIP/business-criteria/1061001"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062127,
            "name": "ASCMM-MNT-7 - Inter-Module Dependency Cycles",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062159,
            "name": "ASCRM-RLB-13 - Inter-Module Dependency Cycles",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61001,
            "name": "Architecture - Multi-Layers and Data Access",
            "weight": 7,
            "critical": false
        },
        {
            "id": 1061110,
            "name": "CWE-1047: Modules with Circular Dependencies",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "AIP/technologies/-2"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCMM-MNT-7",
            "name": "Inter-Module Dependency Cycles",
            "url": null,
            "description": "Objective\nAvoid circular dependencies between modules\n\nConsequence\nSoftware that does not follow the principles of modularity causes excessive propagation of modification impacts\n\nMeasure Element\nNumber of instances where a module has references that cycle back to itself via the module callable or data relations cycle (for example, with JAVA this pattern means cycles between packages)\n\n"
        },
        {
            "standard": "CISQ",
            "id": "ASCRM-RLB-13",
            "name": "Inter-Module Dependency Cycles",
            "url": null,
            "description": "Objective\nAvoid circular dependencies between modules\n\nConsequence\nSoftware deployed in multi-thread environments that does not protect their state can experience deadlock or livelock\n\nMeasure Element\nNumber of instances where a module has references that cycle back to itself via the module callable or data relations cycle (for example, with JAVA this pattern means cycles between packages)\n\n"
        },
        {
            "standard": "CWE",
            "id": "CWE-1047",
            "name": "Modules with Circular Dependencies",
            "url": "https://cwe.mitre.org/data/definitions/1047.html",
            "description": "The software contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-1047",
            "name": "Modules with Circular Dependencies",
            "url": "https://cwe.mitre.org/data/definitions/1047.html",
            "description": "The software contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies."
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-1047",
            "name": "Modules with Circular Dependencies",
            "url": "https://cwe.mitre.org/data/definitions/1047.html",
            "description": "The software contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
