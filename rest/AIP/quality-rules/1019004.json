{
    "id": 1019004,
    "name": "Avoid to set client credential type other than Certificate or Windows when using message mode",
    "href": "AIP/quality-rules/1019004",
    "critical": false,
    "maxWeight": 5,
    "description": "The rule will raise a violation when the Username Token and plaintext password are used on an unencrypted channel when using message mode.\nBy default the client credential type is Windows.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Service providers using Username Token may accept passwords sent in clear text. If the plaintext password is sent through an unencrypted channel, an attacker who can intercept the SOAP message will take the opportunity to obtain credentials.",
    "reference": "https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/wcf/clientcredentials\n\n\nOWASP Top 10 2017 A6 Security Misconfiguration",
    "remediation": "Always use Windows or Certificate as client credential type",
    "remediationSample": "XML Config:\n\n<system.serviceModel>  \n  <bindings>  \n    <wsHttpBinding>  \n      <binding name=\"SecureBinding\">  \n        <security mode=\"Message\">  \n             <message clientCredentialType=\"Windows\" />  //Violation Fixed\n         </security>  \n      </binding>  \n    </wsHttpBinding>  \n  </bindings>  \n</system.serviceModel>  \n_______________________________________________________________\n\nC#:\nServiceHost myServiceHost = new ServiceHost(typeof(CalculatorService));\n// Create a binding to use.\nWSHttpBinding binding = new WSHttpBinding();\nbinding.Security.Mode = SecurityMode.Message;\nbinding.Security.Message.ClientCredentialType =\n    MessageCredentialType.Certificate; //Fixed-Credential type certificate is used",
    "sample": "XML Config:\n\n<system.serviceModel>  \n  <bindings>  \n    <wsHttpBinding>  \n      <binding name=\"SecureBinding\">  \n        <security mode=\"Message\">  \n             <message clientCredentialType=\"UserName\" />  //Violation - Client Credential type \n                                                          //None/UserName/IssuedToken are not preferred\n         </security>  \n      </binding>  \n    </wsHttpBinding>  \n  </bindings>  \n</system.serviceModel>  \n\n______________________________________________________________________\n\nC#:\nServiceHost myServiceHost = new ServiceHost(typeof(CalculatorService));\n// Create a binding to use.\nWSHttpBinding binding = new WSHttpBinding();\nbinding.Security.Mode = SecurityMode.Message;\nbinding.Security.Message.ClientCredentialType =\n    MessageCredentialType.None; //Violation: Client Credential type Issued Token/None/UserName are not preferred",
    "total": "Number of WCF configurations",
    "alternativeName": "Avoid to set client credential type other than Certificate or Windows when using message mode",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062305,
            "name": "OWASP-2013-A5 Security Misconfiguration",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062326,
            "name": "OWASP-2017-A6 Security Misconfiguration",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1019000,
            "name": "WCF",
            "href": "AIP/technologies/1019000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "A5-2013",
            "name": "Security Misconfiguration",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration",
            "description": "Good security requires having a secure configuration defined and deployed for the application, frameworks, application server, web server, database server, and platform. Secure settings should be defined, implemented, and maintained, as defaults are often insecure. Additionally, software should be kept up to date."
        },
        {
            "standard": "OWASP",
            "id": "A6-2017",
            "name": "Security Misconfiguration",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration",
            "description": "Security misconfiguration is the most commonly seen issue. This is commonly a result of insecure default configurations, incomplete or ad hoc configurations, open cloud storage, misconfigured HTTP headers, and verbose error messages containing sensitive information. Not only must all operating systems, frameworks, libraries, and applications be securely configured, but they must be patched/upgraded in a timely fashion."
        },
        {
            "standard": "OWASP",
            "id": "API7-2019",
            "name": "Security Misconfiguration",
            "url": null,
            "description": "Security misconfiguration is commonly a result of unsecure default configurations, incomplete or ad-hoc configurations, open cloud storage, misconfigured HTTP headers, unnecessary HTTP methods, permissive Cross-Origin resource sharing (CORS), and verbose error messages containing sensitive information."
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-2.2.4",
            "name": "Configure system security parameters to prevent misuse.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
