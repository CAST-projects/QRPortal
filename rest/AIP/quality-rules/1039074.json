{
    "id": 1039074,
    "name": "Avoid using Apache ActiveMQ 5.x before 5.13.0",
    "href": "AIP/quality-rules/1039074",
    "critical": true,
    "maxWeight": 8,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule checks if whitelist Java packages list is correctly set so that they can be used in a serialized object message.  if not, it will report a violation",
    "output": "Total number of violation related to Java Methods which are associated to ActiveMQ\n-Primary Bookmark to Method.\n-Secondary Bookmark to Method.",
    "rationale": "Apache ActiveMQ 5.x before 5.13.0 does not restrict the classes that can be serialized in the broker, which allows remote attackers to execute arbitrary code via a crafted serialized Java Message Service (JMS) ObjectMessage object.\n\nJMS Object messages depends on Java Serialization for marshaling/unmarshaling of the message payload. There are a couple of places inside the broker where deserialization can occur, like web console or stomp object message transformation. As the \u200bdeserialization of untrusted data can lead to security flaws as demonstrated in various reports, this leaves the broker vulnerable to this attack vector. Additionally, applications that consume ObjectMessage type of messages can be vulnerable as they deserialize objects on ObjectMessage.getObject() calls.\n\nInsecure deserialization often leads to remote code execution. Even if deserialization flaws do not result in remote code execution, they can be used to perform attacks, including replay attacks, injection attacks, and privilege escalation attacks.",
    "reference": "https://access.redhat.com/documentation/en-us/red_hat_jboss_a-mq/6.3/html/security_guide/securebroker-objectmessage\nhttps://nvd.nist.gov/vuln/detail/CVE-2015-5254\nhttps://www.blackhat.com/docs/us-16/materials/us-16-Kaiser-Pwning-Your-Java-Messaging-With-Deserialization-Vulnerabilities.pdf",
    "remediation": "Upgrade to Apache ActiveMQ 5.13.1. Additionally if you're using ObjectMessage message type, you need to explicitly list trusted packages",
    "remediationSample": "Upgrade to Apache ActiveMQ 5.13.1. Additionally if you're using ObjectMessage message type, you need to explicitly list trusted packages as follow :\n\n1- Adding following Bean \n@Bean\npublic ActiveMQConnectionFactory activeMQConnectionFactory() {\n    ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(\"your broker URL\");\n    factory.setTrustedPackages(Arrays.asList(\"com.my.package\"));\n    return factory;\n}\n\n \n2- The list of trusted packages can also be set in XML. For example, a Camel endpoint in a Spring XML file can be configured as follows:\n\n<bean id=\"connectionFactory\" class=\"org.apache.activemq.spring.ActiveMQConnectionFactory\">\n    <property name=\"brokerURL\" value=\"tcp://localhost:61616\"/>\n    <property name=\"trustedPackages\"> // setiing for trusted packages\n        <list>\n            <value>org.apache.activemq.test</value>\n            <value>org.apache.camel.test</value>\n        </list>\n    </property>\n</bean>\n<bean id=\"jmsConfig\" class=\"org.apache.camel.component.jms.JmsConfiguration\">\n    <property name=\"connectionFactory\" ref=\"connectionFactory\"/>\n</bean>\n<bean id=\"activemq\" class=\"org.apache.activemq.camel.component.ActiveMQComponent\">\n    <property name=\"configuration\" ref=\"jmsConfig\"/>\n</bean>",
    "sample": "The setTrustAllPackages() allows you to turn off the security check and trust all classes as following example:\n\nSample 1\nActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(\"tcp://localhost:61616\");\nfactory.setTrustAllPackages(true);\n\n\nSample 2\npublic void init(ActiveMQConfig activeMQConfig, Environment environment) {\n  ((ActiveMQConnectionFactory) this.jmsConnectionFactory).setTrustAllPackages(true);\n}\n\n\n\n-------------------------------------------------------------------------------------------\n\nThe whitelist mechanism can also be disabled in Spring XML as follows:\n\n<bean id=\"connectionFactory\" class=\"org.apache.activemq.spring.ActiveMQConnectionFactory\">\n    <property name=\"brokerURL\" value=\"tcp://localhost:61616\"/>\n    <property name=\"trustAllPackages\" value=\"true\"/>\n</bean>\n<bean id=\"jmsConfig\" class=\"org.apache.camel.component.jms.JmsConfiguration\">\n    <property name=\"connectionFactory\" ref=\"connectionFactory\"/>\n</bean>\n<bean id=\"activemq\" class=\"org.apache.activemq.camel.component.ActiveMQComponent\">\n    <property name=\"configuration\" ref=\"jmsConfig\"/>\n</bean>",
    "total": "Number of Java Methods and bean Which are Associated ActiveMQ",
    "alternativeName": "Avoid using Apache ActiveMQ 5.x before 5.13.0",
    "businessCriteria": [
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062309,
            "name": "OWASP-2013-A9 Using Components with Known Vulnerabilities",
            "href": "AIP/technical-criteria/1062309",
            "weight": 5
        },
        {
            "id": 1062328,
            "name": "OWASP-2017-A8 Insecure Deserialization",
            "href": "AIP/technical-criteria/1062328",
            "weight": 5
        },
        {
            "id": 1062329,
            "name": "OWASP-2017-A9 Using Components with Known Vulnerabilities",
            "href": "AIP/technical-criteria/1062329",
            "weight": 5
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 8
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-676",
            "name": "Use of Potentially Dangerous Function",
            "href": "AIP/quality-standards/CWE/items/CWE-676",
            "standard": "CWE"
        },
        {
            "id": "A8-2017",
            "name": "Insecure Deserialization",
            "href": "AIP/quality-standards/OWASP/items/A8-2017",
            "standard": "OWASP"
        },
        {
            "id": "A9-2013",
            "name": "Using Components with Known Vulnerabilities",
            "href": "AIP/quality-standards/OWASP/items/A9-2013",
            "standard": "OWASP"
        },
        {
            "id": "A9-2017",
            "name": "Using Components with Known Vulnerabilities",
            "href": "AIP/quality-standards/OWASP/items/A9-2017",
            "standard": "OWASP"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
