{
    "id": 1020338,
    "name": "Avoid using Tooltip widget with jQuery UI version older than 1.10.0",
    "href": "AIP/quality-rules/1020338",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "This will search for the usage of jQuery function \"tooltip\" where title attribute is changed using the jQuery UI library version older than 1.10.0",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Cross-site scripting (XSS) vulnerability in the default content option in jquery.ui.tooltip.js in the Tooltip widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title attribute, which is not properly handled in the autocomplete combo box demo. While some known vulnerabilities lead to only minor impacts, some of the largest breaches to date have relied on exploiting known vulnerabilities in components. Depending on the assets you are protecting, perhaps this risk should be at the top of the list. This rule has been listed as CVE-2012-6662 in the CVE registry.",
    "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-6662",
    "remediation": "Do not use jQuery tooltip or update the jQuery UI library",
    "remediationSample": "// version of the jquery ui library is NOT vulnerable\n<script src=\"https://code.jquery.com/ui/1.10.0/jquery-ui.js\"></script> \n...\n$( element )\n.attr( \"title\", '<script type=\"text/javascript\">alert(\"XSS\");</script>')\n.tooltip( \"open\" );\n..",
    "sample": "// version of the jquery ui library is vulnerable\n<script src=\"https://code.jquery.com/ui/1.9.1/jquery-ui.js\"></script> \n...\n$( element )\n.attr( \"title\", '<script type=\"text/javascript\">alert(\"XSS\");</script>')\n.tooltip( \"open\" );\n..",
    "total": "Number of jQuery methods",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "weight": 8,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "A9-2013",
            "name": "Using Components with Known Vulnerabilities",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities",
            "description": "Components, such as libraries, frameworks, and other software modules, almost always run with full privileges. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications using components with known vulnerabilities may undermine application defenses and enable a range of possible attacks and impacts."
        },
        {
            "standard": "OWASP",
            "id": "A9-2017",
            "name": "Using Components with Known Vulnerabilities",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities",
            "description": "Components, such as libraries, frameworks, and other software modules, run with the same privileges as the application. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications and APIs using components with known vulnerabilities may undermine application defenses and enable various attacks and impacts."
        }
    ]
}
