{
    "id": 7458,
    "name": "Avoid large Interfaces - too many Methods",
    "href": "AIP/quality-rules/7458",
    "critical": false,
    "maxWeight": 4,
    "associatedValueName": "Associated Value",
    "description": "Interfaces should have less than X Methods.\nThe threshold is a parameter and can be changed at will.\nIn C# interfaces are pure virtual classes.",
    "output": "This report lists all the Interfaces having more than X Methods.\nIt provides the following information:\n Interface full name, number of Methods",
    "rationale": "For maintainability and readability reasons, Interfaces should not have too many Methods.",
    "remediation": "Review the Interface design to reduce the number of Methods",
    "total": "Total number of interfaces",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61010,
            "name": "Complexity - OO Inheritance and Polymorphism",
            "weight": 4,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 141901,
            "name": ".NET (Legacy Analyzer)",
            "href": "AIP/technologies/141901"
        },
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        
    ]
}
