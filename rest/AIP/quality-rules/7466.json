{
    "id": 7466,
    "name": "Avoid changing DataSource member before ValueMember/DisplayMember",
    "href": "AIP/quality-rules/7466",
    "critical": false,
    "maxWeight": 3,
    "description": "This metric list all locations where the DataSource member is set before the ValueMember/DisplayMember.",
    "output": "This metric list all objects where the DataSource member is set before the ValueMember/DisplayMember.",
    "rationale": "When populating data bound controls such as ComboBox or ListBox, it is more efficient to set the DataSource property last, after ValueMember and DisplayMember are set. Otherwise your control will be repopulated as a result of the ValueMember change.\n\nBindingSource.SuspendBinding and BindingSource.ResumeBinding are two methods that allow the temporary suspension and resumption of data binding. SuspendBinding prevents changes from being pushed into the data source until ResumeBinding is called. \nThese methods are designed to be used with simple bound scenarios such as TextBox or ComboBox data binding. However, Controls that implement complex data binding, such as the DataGridView control, update their values based on change events such as ListChanged, so calling SuspendBinding will not prevent them from receiving changes to the data source. You can use these methods in complex binding scenarios if you suppress ListChanged events by setting the RaiseListChangedEvents property to false.",
    "reference": "MSDN",
    "remediation": "Set the DataSource member after the ValueMember and DisplayMember.",
    "remediationSample": "comboBox1.ValueMember = \"Name\";\ncomboBox1.DisplayMember = \"Name\";\ncomboBox1.DataSource = test;",
    "sample": "comboBox1.DataSource = test;\ncomboBox1.ValueMember = \"Name\";\ncomboBox1.DisplayMember = \"Name\";",
    "total": "Total number of artifacts with code",
    "alternativeName": "Avoid changing DataSource member before ValueMember/DisplayMember",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61019,
            "name": "Efficiency - SQL and Data Handling Performance",
            "weight": 3,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
