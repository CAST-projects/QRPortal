{
    "id": 1040038,
    "name": "Avoid using Spring Security Path Matching Inconsistency before Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x",
    "href": "AIP/quality-rules/1040038",
    "critical": false,
    "severity": 10,
    "maxWeight": 7,
    "extension": {
        "name": "com.castsoftware.springsecurity",
        "href": "AIP/extensions/com.castsoftware.springsecurity"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "Both Spring Security and the Spring Framework rely on URL pattern mappings for authorization and for mapping requests to controllers respectively.\n\nDifferences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected.\n\nThis issue concerns following affected versions: \nSpring Security 3.2.x, 4.0.x, 4.1.0 and before\nSpring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x and before \n\nFor all affected version, this rule will check if PathMatcher is used with the trimTokens flag is set to false. If not, it gives the violation.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Components, such as libraries, frameworks, and other software modules, run with the same privileges as the application. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications and APIs using components with known vulnerabilities may undermine application defenses and enable various attacks and impacts.",
    "reference": "https://pivotal.io/security/cve-2016-5007\n\nCWE-264 http://cwe.mitre.org/data/definitions/264.html\nCWE-284 http://cwe.mitre.org/data/definitions/284.html\n\nA2-OWASP 2017",
    "remediation": "Refer to Pivotal\u2019s CVE-2016-5007 report for detailed mitigations : https://pivotal.io/security/cve-2016-5007",
    "remediationSample": "1- Upgrade to Spring Security 4.1.1+ and Spring Framework 4.3.1+ and use the MvcRequestMatcher.\n2- For Affected version, we can counter the issue by using the MVC Java config or the MVC namespace to set trimTokens property of AntPathMatcher to \u201cfalse\u201d as follow: \n\n\n\n<!-- Setting PathMatcher. -->\n    <bean id=\"pathMatcher\" class=\"org.springframework.util.AntPathMatcher\">\n        <property name=\"trimTokens\" value=\"false\" />\n    </bean>\n\n--------\n@Configuration\n@EnableSecurityCheck\npublic class SecurityChkConfig extends WebMvcConfigurerAdapter {\n\n  @Bean\n  public PathMatcher pathMatcher() {\n\n    AntPathMatcher pathMatcher = new AntPathMatcher();\n    pathMatcher.setTrimTokens(false);\n    return pathMatcher;\n  }\n\n  @Override\n  public void configurePathMatch(PathMatchConfigurer configurer) {        \n    configurer.setPathMatcher(pathMatcher());\n  }\n}",
    "sample": "<!-- Setting PathMatcher. -->\n    <bean id=\"pathMatcher\" class=\"org.springframework.util.AntPathMatcher\">\n        <property name=\"trimTokens\" />\n    </bean>\n\ndefault configurations is set to True.",
    "total": "Number of XML Files",
    "alternativeName": "Ensure not using Spring Security Path Matching Inconsistency before Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062309,
            "name": "OWASP-2013-A9 - Using Components with Known Vulnerabilities",
            "href": "AIP/technical-criteria/1062309",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062329,
            "name": "OWASP-2017-A9 - Using Components with Known Vulnerabilities",
            "href": "AIP/technical-criteria/1062329",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062346,
            "name": "OWASP-2021-A06 - Vulnerable and Outdated Components",
            "href": "AIP/technical-criteria/1062346",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1063112,
            "name": "PCI-Requirement-6.2 - Ensure all Systems and Software are Protected from Known Vulnerabilities",
            "href": "AIP/technical-criteria/1063112",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66064,
            "name": "Secure Coding - Weak Security Features",
            "href": "AIP/technical-criteria/66064",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "id": "A9-2013",
            "name": "Using Components with Known Vulnerabilities",
            "href": "AIP/quality-standards/OWASP/items/A9-2013",
            "standard": "OWASP"
        },
        {
            "id": "A9-2017",
            "name": "Using Components with Known Vulnerabilities",
            "href": "AIP/quality-standards/OWASP/items/A9-2017",
            "standard": "OWASP"
        },
        {
            "id": "A06-2021",
            "name": "Vulnerable and Outdated Components",
            "href": "AIP/quality-standards/OWASP/items/A06-2021",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.2",
            "name": "Ensure all Systems and Software are Protected from Known Vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.2",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.2",
            "name": "Ensure all Systems and Software are Protected from Known Vulnerabilities",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.2",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
