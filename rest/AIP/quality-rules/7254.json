{
    "id": 7254,
    "name": "Declare as Static all methods not using instance members",
    "href": "AIP/quality-rules/7254",
    "critical": false,
    "severity": 10,
    "maxWeight": 5,
    "extension": {
        "name": "com.castsoftware.jee",
        "href": "AIP/extensions/com.castsoftware.jee"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule reports non-static methods that don't use instance fields except if they have been extended in a subclass or inherit from their parents.\n\nThe rule excludes Bean methods from Spring.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "When an object is created:\n    * Memory is allocated to all the fields\n    * All super class fields are also allocated memory\n    * All sub class fields, super class fields are initialized .\n    * The constructor is invoked.\n\nUsing a static avoid to create an object that takes resources when it is unnecessary.",
    "reference": "https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html\nhttps://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-factorybeans-annotations (See note under 1.10.5. Defining Bean Metadata within Components)",
    "remediation": "Make this method static.",
    "remediationSample": "class Example {\n    static double pi = 3.14;\n\n    static int min (int x, int y) { // FIXED\n      return (x>y?y:x);\n    }\n\n    static double getPi() {  // FIXED\n       return pi;\n    }",
    "sample": "class Example {\n    static double pi = 3.14;\n\n    int min (int x, int y) { // VIOLATION\n      return (x>y?y:x);\n    }\n\n    double getPi() {  // VIOLATION\n       return pi;\n    }",
    "total": "Number of non static methods",
    "alternativeName": "Ensure to make static all methods not using instance members",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61018,
            "name": "Efficiency - Memory, Network and Disk Space Management",
            "href": "AIP/technical-criteria/61018",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
