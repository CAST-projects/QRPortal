{
    "id": 1520580,
    "name": "Siebel eScript: Avoid Functions without Try, Catch and Finally block",
    "href": "AIP/quality-rules/1520580",
    "critical": false,
    "severity": 10,
    "maxWeight": 7,
    "associatedValueName": "Reason for violation(No Try|No Finally|More Try Than Finally)",
    "description": "This rule reports Functions without Try statement or with a missing Finally block in a Try statement.\nDeclaration are not considered.",
    "output": "This rule reports Functions without Try statement or with a missing Finally block in a Try statement.\nIt provides the following information:\n- Function full name\n- Associated value is the reason for violation (No Try|No Finally|More Try Than Finally)",
    "rationale": "When a programmer ignores an exception, they implicitly state that they are operating under one of two assumptions:\nThis method call can never fail.\nIt doesn't matter if this call fails.\nAs most Functions perform I/O operations that may fail, it is important to perform the following tasks:\n- Catch Exceptions\n- Stabilize the Application\n- Log exception information or notify users of what happened\n- Possibly, re-throw the exception\n- Possibly, set a return code\nIgnoring exception can cause other runtime error to occur.",
    "reference": "https://docs.oracle.com/cd/E14004_01/books/eScript/Statements_Reference11.html#wp1004538\nhttps://optanium.com/en/blog-siebel-en/2018/siebel-escripting-best-practices/",
    "remediation": "Add Try, Catch and Finally blocks as per Siebel recommendation :\nPlace code that must trap errors in a Try statement.\nFollow the Try statement with a catch clause. You can write code that uses the exception_handling_block argument in this catch clause to process the exception.\nIn Finally block, perform the cleanup work such as destroying the objects.",
    "total": "Number of added or modified eScripts",
    "alternativeName": "Siebel eScript: Avoid Functions without Try, Catch and Finally block",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "href": "AIP/technical-criteria/61014",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1520000,
            "name": "Siebel",
            "href": "AIP/technologies/1520000"
        }
    ],
    "qualityStandards": [
        {
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-11",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.5",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        10.0,
        50.0,
        80.0,
        99.0
    ]
}
