{
    "id": 8480,
    "name": "Avoid using PREPARE STMT statement (Dynamic SQL) with STRING containing HOST variables",
    "href": "AIP/quality-rules/8480",
    "critical": true,
    "maxWeight": 10,
    "description": "Input host variables are used to specify data to be transferred from the COBOL program to the database\n\nHost variables are considered data, not part of the SQL code, which is safe against SQL injection attacks. But dynamic SQL (PREPARE or EXECUTE IMMEDIATE) is allowed, and binding does not prevent the injection of code.\n\nThis rule checks for PREPARE STMT statement having STRING passed in parameter and containing host variables.",
    "output": "- The number of Exec SQL using \"PREPARE STMT\" with STRING containing HOST variables.  \n- Bookmarks for violation occurrences found in source code:\n  - EXEC SQL query use \"PREPARE STMT\" with STRING containing HOST variables.",
    "rationale": "Injection flaws, such as SQL, NoSQL, OS, and LDAP injection, occur when untrusted data is sent to an interpreter as part of a command or query. The attacker's hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization.",
    "reference": "https://www.ibm.com/support/knowledgecenter/SSEPEK_10.0.0/sqlref/src/tpc/db2z_refs2hostvars.html",
    "remediation": "The PREPARE STMT statement having STRING as a parameter must not contain host variables.",
    "sample": "For example, the following SQL code could be injected if host variables X, Y or Z come from untrusted inputs:\n\n* Potential SQL injection if X, Y or Z host variables come from untrusted input\nSTRING \"INSERT INTO TBL (a,b,c) VALUES (\" X \",\" Y \",\" Z \")\" INTO MY-SQL.\nEXEC SQL PREPARE STMT FROM :MY-SQL END-EXEC.\nEXEC SQL EXECUTE STMT END-EXEC.",
    "total": "Number of Cobol Programs",
    "alternativeName": "Avoid using PREPARE STMT statement (Dynamic SQL) with STRING containing HOST variables",
    "businessCriteria": [
        {
            "id": 1062100,
            "name": "CISQ-Index",
            "href": "AIP/business-criteria/1062100"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        },
        {
            "id": 60017,
            "name": "Total Quality Index",
            "href": "AIP/business-criteria/60017"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062194,
            "name": "ASCSM-CWE-89 - SQL Injection Improper Input Neutralization",
            "href": "AIP/technical-criteria/1062194",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1061017,
            "name": "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "href": "AIP/technical-criteria/1061017",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062301,
            "name": "OWASP-2013-A1 Injection",
            "href": "AIP/technical-criteria/1062301",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062321,
            "name": "OWASP-2017-A1 Injection",
            "href": "AIP/technical-criteria/1062321",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "href": "AIP/technical-criteria/66062",
            "weight": 10,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": -4,
            "name": "Cobol",
            "href": "AIP/technologies/-4"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCSM-CWE-89",
            "name": "SQL Injection Improper Input Neutralization",
            "href": "AIP/quality-standards/CISQ/items/ASCSM-CWE-89",
            "standard": "CISQ"
        },
        {
            "id": "CWE-89",
            "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "href": "AIP/quality-standards/CWE/items/CWE-89",
            "standard": "CWE"
        },
        {
            "id": "CWE-89",
            "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "href": "AIP/quality-standards/ISO-5055/items/CWE-89",
            "standard": "ISO-5055"
        },
        {
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-SI-10",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "CWE-89",
            "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "href": "AIP/quality-standards/OMG-ASCQM/items/CWE-89",
            "standard": "OMG-ASCQM"
        },
        {
            "id": "A1-2013",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2013",
            "standard": "OWASP"
        },
        {
            "id": "A1-2017",
            "name": "Injection",
            "href": "AIP/quality-standards/OWASP/items/A1-2017",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.1",
            "name": "Injection flaws, particularly SQL injection. Also consider OS Command Injection, LDAP and XPath injection flaws as well as other injection flaws.",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.1",
            "standard": "PCI-DSS-V3.2.1"
        },
        {
            "id": "STIG-V-70267",
            "name": "The application must not be vulnerable to SQL Injection.",
            "href": "AIP/quality-standards/STIG-V4R8/items/STIG-V-70267",
            "standard": "STIG-V4R8"
        },
        {
            "id": "STIG-V-222607",
            "name": "The application must not be vulnerable to SQL Injection.",
            "href": "AIP/quality-standards/STIG-V5/items/STIG-V-222607",
            "standard": "STIG-V5"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
