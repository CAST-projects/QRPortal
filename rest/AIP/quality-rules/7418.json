{
    "id": 7418,
    "name": "Avoid SQL queries using functions on indexed columns in the WHERE clause",
    "href": "AIP/quality-rules/7418",
    "critical": false,
    "maxWeight": 9,
    "associatedValueName": "Name of the first column used as function parameter",
    "description": "This metric retrieves all SQL artifacts that have a query using functions on indexed columns in WHERE clause.\nIt retrieves all SQL artifacts with a WHERE clause using a function that takes a table column used as a database index as a function parameter (except specific indexes such as function-based indexes).",
    "output": "Associated to each artifact with violations, the Quality Rule provides:\n- The Name of the column (first column used as function parameter).",
    "rationale": "Whenever a function is used in a WHERE clause and takes a indexed column as a function parameter, the database engine might be unable to take advantage of the index, leading to very poor performance.",
    "total": "The total procedure counts the number of Client-Server Artifacts using Tables.",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61019,
            "name": "Efficiency - SQL and Data Handling Performance",
            "weight": 9,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 0,
            "name": "ALL TECHNOLOGIES",
            "href": "AIP/technologies/0"
        }
    ],
    "qualityStandards": [
        {
            "standard": "AIP",
            "id": "AIP-MIPS-DATA-ACCESS",
            "name": "MIPS Reduction - focus on data access efficiency",
            "url": null,
            "description": "MIPS Reduction assess the level of resources that are wasted on account of sub-optimal coding regarding Efficiency and Robustness areas. Sub-optimal coding regarding Efficiency cause unnecessary consumption of resources, that will ultimately cause unnecessary consumption of electrical power when applications run in production. Sub-optimal coding regarding Robustness cause unnecessary consumption of resources, when it comes down to application shutdown and restart because it failed or because its integrity was corrupted."
        }
    ]
}
