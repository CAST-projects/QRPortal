{
    "id": 3062,
    "name": "Use of error handling page",
    "href": "AIP/quality-rules/3062",
    "critical": false,
    "maxWeight": 6,
    "description": "Pages should use an error handling page.",
    "output": "This report lists all pages that do not use an error handling page. It provides the following information: Page name",
    "total": "Number of ASP pages",
    "alternativeName": "Use of error handling page",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1061000,
            "name": "ISO-5055-Index",
            "href": "AIP/business-criteria/1061000"
        },
        {
            "id": 1061003,
            "name": "ISO-5055-Reliability",
            "href": "AIP/business-criteria/1061003"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1061041,
            "name": "CWE-391: Unchecked Error Condition",
            "weight": 5,
            "critical": false
        },
        {
            "id": 61014,
            "name": "Programming Practices - Error and Exception Handling",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -19,
            "name": "ASP",
            "href": "AIP/technologies/-19"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "url": "https://cwe.mitre.org/data/definitions/391.html",
            "description": "[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed."
        },
        {
            "standard": "ISO-5055",
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "url": "https://cwe.mitre.org/data/definitions/391.html",
            "description": "[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed."
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-SI-11",
            "name": "Error Handling",
            "url": "https://nvd.nist.gov/800-53/Rev4/control/SI-11",
            "description": null
        },
        {
            "standard": "OMG-ASCQM",
            "id": "CWE-391",
            "name": "Unchecked Error Condition",
            "url": "https://cwe.mitre.org/data/definitions/391.html",
            "description": "[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed."
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.2.1",
            "id": "PCI-Requirement-6.5.5",
            "name": "Improper error handling",
            "url": null,
            "description": null
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70391",
            "name": "The application must not be subject to error handling vulnerabilities.",
            "url": null,
            "description": "Error handling is the failure to check the return values of functions or catch top level exceptions within a program. Improper error handling in an application can lead to an application failure or possibly result in the application entering an insecure state. \n\nThe primary way to detect error handling vulnerabilities is to perform code reviews. If a manual code review cannot be performed, static code analysis tools should be employed in conjunction with tests to help force the error conditions by specifying invalid input (such as fuzzed data and malformed filenames) and by using different accounts to run the application. These tests may give indications of vulnerability, but they are not comprehensive.\n\nIn order to minimize error handling errors, ensure proper return code and exception handling is implemented throughout the application."
        }
    ],
    "parameters": [
        {
            "name": "Error handling page names",
            "description": "Error handling page names",
            "technologies": [
                {
                    "id": 0,
                    "name": "ALL TECHNOLOGIES",
                    "href": "AIP/technologies/0",
                    "values": [
                        "error.asp"
                    ]
                }
            ]
        }
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
