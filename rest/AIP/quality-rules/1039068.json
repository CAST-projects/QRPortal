{
    "id": 1039068,
    "name": "Avoid using the Non-Serializable Object Stored in Session",
    "href": "AIP/quality-rules/1039068",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check that session contains only serializable object by checking class inheritance and specific API usage.",
    "output": "Total number of violation related to Java Method\n-Primary Bookmark to Method.\n-Secondary Bookmark to Class.",
    "rationale": "Accessing a non-serializable object as an HttpSesion attribute can result in damaging the application reliability. It could break the session replication because the deserialization will happen only for attributes stored as serializable. So it is recommended to make the class Serializable and improve the reliability of the application.",
    "reference": "https://cwe.mitre.org/data/definitions/579.html\nhttps://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication",
    "remediation": "Inherits from the class Serializable",
    "remediationSample": "//The java.io.Serializable class serializes the session attribute. \n\npublic class DataGlob implements java.io.Serializable {\n   String globName;\n   String globValue;\n\n   public void addToSession(HttpSession session) {\n     session.setAttribute(\"glob\", this);\n   }\n}",
    "sample": "// Sample Code: The following class adds itself to the session, but because it is not serializable, the session can no longer be replicated.\n\npublic class DataGlob {\n   String globName;\n   String globValue;\n\n   public void addToSession(HttpSession session) {\n     session.setAttribute(\"glob\", this);\n   }\n}",
    "total": "Number of Java Method",
    "alternativeName": "Ensure to declare the object as serializable if you are using it as a httpsession attribute",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66065,
            "name": "Secure Coding - Time and State",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CWE",
            "id": "CWE-502",
            "name": "Deserialization of Untrusted Data",
            "url": "https://cwe.mitre.org/data/definitions/502.html",
            "description": "The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid."
        },
        {
            "standard": "OWASP",
            "id": "A8-2017",
            "name": "Insecure Deserialization",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization",
            "description": "Insecure deserialization often leads to remote code execution. Even if deserialization flaws do not result in remote code execution, they can be used to perform attacks, including replay attacks, injection attacks, and privilege escalation attacks."
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        98.0,
        99.0,
        99.5,
        99.99
    ]
}
