{
    "id": 578,
    "name": "Avoid Classes with multiple inheritance",
    "href": "AIP/quality-rules/578",
    "critical": false,
    "maxWeight": 4,
    "associatedValueName": "Number of parent classes",
    "description": "This rule searches for C++ classes that are derived from more than one parent class. \n\nNote: Pure virtual classes (that can be used as interfaces) are not considered as violating this rule.",
    "output": "Associated to each C++ class with violations, the Quality Rule provides:\n- The number of parent classes\n- Bookmarks for violation occurrences found in source code:\n  - Parent class derivation",
    "rationale": "Multiple inheritance increases the code complexity and therefore the maintenance costs. Furthermore it can lead to the Deadly Diamond of Derivation problem (several inheritance of the same base class).",
    "remediation": "Review the design of the class hierarchy and try to limit multiple inheritance cases as much as possible.",
    "total": "Number of C++ classes",
    "alternativeName": "Avoid Classes with multiple inheritance",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61010,
            "name": "Complexity - OO Inheritance and Polymorphism",
            "weight": 4,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "AIP/technologies/-3"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCMM-MNT-2",
            "name": "Class Element Excessive Inheritance of Class Elements with Concrete Implementation",
            "url": null,
            "description": "Objective\nAvoid the multiple inheritance of classes with concrete implementations\n\nConsequence\nSoftware that does not follow the principles of reuse requires more maintenance effort in order to propagate changes to all instances of duplicated code\n\nMeasure Element\nNumber of instances where the number of inheritances of concrete classes of a class element is considered too large, based on exceeding a threshold value. Default value for the number of concrete class Inheritances is 1.\n\n"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
