{
    "id": 1106296,
    "name": "Ensure RAISERROR is not used",
    "href": "AIP/quality-rules/1106296",
    "critical": false,
    "severity": 10,
    "maxWeight": 1,
    "extension": {
        "name": "com.castsoftware.sql.movetocloud",
        "href": "AIP/extensions/com.castsoftware.sql.movetocloud"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "Legacy-style RAISERROR statements that omit parentheses and commas\u2014such as RAISERROR 50001 'This is a test'\u2014are no longer supported in Azure SQL Database. These outdated forms were previously allowed in older versions of SQL Server but have since been removed from modern SQL platforms, including Azure.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Modern T-SQL syntax enforces consistent and structured function calls for improved parsing, readability, and maintainability. The legacy RAISERROR syntax lacks clarity and can lead to unexpected behavior. Azure SQL Database supports only the updated format of RAISERROR that uses parentheses and comma-separated arguments. Additionally, modern error handling using TRY...CATCH and THROW provides clearer, more maintainable alternatives for exception control.",
    "reference": "https://learn.microsoft.com/en-us/data-migration/sql-server/database/assessment-rules#RAISERROR",
    "remediation": "To resolve this issue:\n\nReplace all legacy RAISERROR statements with the modern syntax using parentheses and commas.\n\nFor more robust error handling, consider using TRY...CATCH blocks with THROW for re-raising exceptions.\n\nReview legacy code and update all affected statements before migrating to Azure SQL Database.",
    "remediationSample": "Remediation Sample (Using Modern RAISERROR Syntax):\n\n-- Corrected modern syntax with message ID, severity, and state\n\nRAISERROR('This is a test', 16, 1);\nOptional: Use TRY...CATCH with THROW for advanced error handling\n\nBEGIN TRY\n    -- Simulated error\n    RAISERROR('Something went wrong', 16, 1);\nEND TRY\nBEGIN CATCH\n    -- Rethrow the caught error\n    THROW;\nEND CATCH;\n\nThis approach offers structured error management and aligns with best practices for Azure SQL compatibility.",
    "sample": "-- Legacy RAISERROR syntax (unsupported in Azure SQL Database)\n\nRAISERROR 50001 'This is a test';\n\nThis syntax will produce an error during deployment or execution in Azure SQL Database.",
    "total": "Number of Artifacts with SQL code.",
    "alternativeName": "Ensure RAISERROR is not used",
    "businessCriteria": [
        {
            "id": 60018,
            "name": "Cloud Migration",
            "href": "AIP/business-criteria/60018"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61050,
            "name": "Database Migration - SQL Server Database to Azure SQL",
            "href": "AIP/technical-criteria/61050",
            "weight": 1,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 0,
            "name": "ALL TECHNOLOGIES",
            "href": "AIP/technologies/0"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
