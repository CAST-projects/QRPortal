{
    "id": 1055016,
    "name": "Ensure that LAContext evaluatePolicy reply block success is checked (Swift)",
    "href": "AIP/quality-rules/1055016",
    "critical": false,
    "severity": 10,
    "maxWeight": 7,
    "extension": {
        "name": "com.castsoftware.swift",
        "href": "AIP/extensions/com.castsoftware.swift"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "The Local Authentication framework provides facilities for requesting authentication from users with specified security policies. If you do not use properly the API, you can break the Face ID/Touch ID security check.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Using LAContext evaluatePolicy: method provides a callback reply block reply:(void (^)(BOOL success, NSError *error))reply. The success returned value must be checked properly to avoid any misuse of the authentication check.",
    "reference": "https://developer.apple.com/library/ios/documentation/LocalAuthentication/Reference/LocalAuthentication_Framework/",
    "remediation": "Make sure you have implemented the check of success variable in the reply block callback",
    "remediationSample": "let context = LAContext()\nvar authError: NSError?\n\nvar myLocalizedReasonString = \"String explaining why app needs authentication\"\n\nif myContext.canEvaluatePolicy(LAPolicy.DeviceOwnerAuthenticationWithBiometrics, error:&authError) {\n    myContext.evaluatePolicy(LAPolicy.DeviceOwnerAuthenticationWithBiometrics, localizedReason: myReasonString, reply: { (success: Bool, evalPolicyError: NSError?) -> Void in\n\n        if success {\n            // User authenticated successfully\n        } else {\n            // Authenticate failed\n        }\n    })\n} else{\n    // Could not evaluate policy; check authError\n}",
    "sample": "let context = LAContext()\nvar authError: NSError?\n\nvar myLocalizedReasonString = \"String explaining why app needs authentication\"\n\nif myContext.canEvaluatePolicy(LAPolicy.DeviceOwnerAuthenticationWithBiometrics, error:&authError) {\n    myContext.evaluatePolicy(LAPolicy.DeviceOwnerAuthenticationWithBiometrics, localizedReason: myReasonString, reply: { (success: Bool, evalPolicyError: NSError?) -> Void in\n\n       println(\"the user seems to be connected\")\n\n    })\n} else{\n    // Could not evaluate policy; check authError\n}",
    "total": "Number of Swift artifacts",
    "alternativeName": "Ensure that LAContext evaluatePolicy reply block success is checked (Swift)",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "GreenIT-Index",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 1062300,
            "name": "OWASP-2013-Index",
            "href": "AIP/business-criteria/1062300"
        },
        {
            "id": 1062320,
            "name": "OWASP-2017-Index",
            "href": "AIP/business-criteria/1062320"
        },
        {
            "id": 1062340,
            "name": "OWASP-2021-Index",
            "href": "AIP/business-criteria/1062340"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 1062302,
            "name": "OWASP-2013-A2 - Broken Authentication and Session Management",
            "href": "AIP/technical-criteria/1062302",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062322,
            "name": "OWASP-2017-A2 - Broken Authentication",
            "href": "AIP/technical-criteria/1062322",
            "weight": 5,
            "critical": false
        },
        {
            "id": 1062341,
            "name": "OWASP-2021-A01 - Broken Access Control",
            "href": "AIP/technical-criteria/1062341",
            "weight": 5,
            "critical": false
        },
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "href": "AIP/technical-criteria/66069",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1055000,
            "name": "Swift",
            "href": "AIP/technologies/1055000"
        }
    ],
    "qualityStandards": [
        {
            "id": "CWE-863",
            "name": "Incorrect Authorization",
            "href": "AIP/quality-standards/CWE/items/CWE-863",
            "standard": "CWE"
        },
        {
            "id": "NIST-AC-3",
            "name": "Access Enforcement",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-AC-3",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "NIST-IA-9",
            "name": "Service Identification and Authentication",
            "href": "AIP/quality-standards/NIST-SP-800-53R4/items/NIST-IA-9",
            "standard": "NIST-SP-800-53R4"
        },
        {
            "id": "A2-2013",
            "name": "Broken Authentication and Session Management",
            "href": "AIP/quality-standards/OWASP/items/A2-2013",
            "standard": "OWASP"
        },
        {
            "id": "A2-2017",
            "name": "Broken Authentication",
            "href": "AIP/quality-standards/OWASP/items/A2-2017",
            "standard": "OWASP"
        },
        {
            "id": "A01-2021",
            "name": "Broken Access Control",
            "href": "AIP/quality-standards/OWASP/items/A01-2021",
            "standard": "OWASP"
        },
        {
            "id": "API2-2019",
            "name": "Broken User Authentication",
            "href": "AIP/quality-standards/OWASP/items/API2-2019",
            "standard": "OWASP"
        },
        {
            "id": "M4-2016",
            "name": "Insecure Authentication",
            "href": "AIP/quality-standards/OWASP/items/M4-2016",
            "standard": "OWASP"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.1"
        },
        {
            "id": "PCI-Requirement-6.5.10",
            "name": "Broken authentication and session management",
            "href": "AIP/quality-standards/PCI-DSS-V3.2.1/items/PCI-Requirement-6.5.10",
            "standard": "PCI-DSS-V3.2.1"
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
