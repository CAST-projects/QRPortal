{
    "id": 1106014,
    "name": "Ensure PL/SQL package DBMS_AUTO_INDEX is not used",
    "href": "AIP/quality-rules/1106014",
    "critical": false,
    "severity": 10,
    "maxWeight": 1,
    "extension": {
        "name": "com.castsoftware.sql.movetocloud",
        "href": "AIP/extensions/com.castsoftware.sql.movetocloud"
    },
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule checks the usage or DBMS_AUTO_INDEX package in Oracle Database(s).",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Package DBMS_AUTO_INDEX is used to configure auto indexes and generate reports.\nPostgreSQL does not provide an Automatic Indexing feature.\n\nIn self-managed PostgreSQL instances, extensions like Dexter (https://github.com/ankane/dexter) and HypoPG (https://hypopg.readthedocs.io/en/latest/ ) can be utilized for generating indexes with limitations. Amazon Aurora PostgreSQL does not support these extensions.",
    "reference": "https://www.postgresql.org/docs/current/indexes-unique.html#:~:text=PostgreSQL%20automatically%20creates%20a%20unique,mechanism%20that%20enforces%20the%20constraint.\nhttps://pganalyze.com/blog/automatic-indexing-system-postgres-pganalyze-indexing-engine",
    "remediation": "Remove References to DBMS_AUTO_INDEX and replace with PostgreSQL Solution.\n\nPostgreSQL does not provide Automatic Indexing feature, but in self-managed PostgreSQL instances, extensions like Dexter (https://github.com/ankane/dexter) and HypoPG (https://hypopg.readthedocs.io/en/latest/ ) can\nbe utilized for generating indexes with limitations (Amazon Aurora PostgreSQL does not support these extensions).\nThe approach taken by these extensions are :\n- Identify the queries.\n- Update the table statistics if they haven\u2019t been analyzed recently.\n- Get the initial cost of the queries and create hypothetical indexes on columns that aren\u2019t already indexes.\n- Get costs again and see if any hypothetical indexes were used. Hypothetical indexes that were used and significantly reduced cost are selected to be indexes.",
    "remediationSample": "The remediation is to remove all references to DBMS_AUTO_INDEX and try to replace with a PostgreSQL solution.\n\nPostgreSQL does not provide Automatic Indexing feature, but in self-managed PostgreSQL instances, extensions like Dexter (https://github.com/ankane/dexter) and HypoPG (https://hypopg.readthedocs.io/en/latest/ ) can\nbe utilized for generating indexes with limitations (Amazon Aurora PostgreSQL does not support these extensions).\nThe approach taken by these extensions are :\nl Identify the queries.\nl Update the table statistics if they haven\u2019t been analyzed recently.\nl Get the initial cost of the queries and create hypothetical indexes on columns that aren\u2019t already indexes.\nl Get costs again and see if any hypothetical indexes we",
    "sample": "alter session set container = pdb1;\ncreate tablespace auto_indexes_ts datafile size 100m autoextend on next 100m;\nexec dbms_auto_index.configure('AUTO_INDEX_DEFAULT_TABLESPACE','AUTO_INDEXES_TS');\n/\n\nselect dbms_auto_index.report_activity() from dual;\n/",
    "total": "Number of Artifacts with SQL code",
    "alternativeName": "",
    "businessCriteria": [
        {
            "id": 60018,
            "name": "Cloud Migration",
            "href": "AIP/business-criteria/60018"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61045,
            "name": "Database Migration - Oracle Database to PostgreSQL",
            "href": "AIP/technical-criteria/61045",
            "weight": 1,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 0,
            "name": "ALL TECHNOLOGIES",
            "href": "AIP/technologies/0"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
