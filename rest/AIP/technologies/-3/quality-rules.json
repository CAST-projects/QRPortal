[
    {
        "id": 550,
        "name": "Class naming convention - case control (C++)",
        "href": "AIP/quality-rules/550",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 552,
        "name": "Method naming convention - case control (C++)",
        "href": "AIP/quality-rules/552",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 554,
        "name": "Constant naming convention - case control (C++)",
        "href": "AIP/quality-rules/554",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 556,
        "name": "Macros naming convention - case control",
        "href": "AIP/quality-rules/556",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 558,
        "name": "Data Members naming convention - case control",
        "href": "AIP/quality-rules/558",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 562,
        "name": "File naming convention - embedded Class",
        "href": "AIP/quality-rules/562",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 564,
        "name": "Avoid including files other than header files",
        "href": "AIP/quality-rules/564",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 566,
        "name": "Avoid large Classes - too many Methods (C++)",
        "href": "AIP/quality-rules/566",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 568,
        "name": "Avoid large Classes - too many Data Members (C++)",
        "href": "AIP/quality-rules/568",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 570,
        "name": "Avoid large Interfaces - too many Methods (C++)",
        "href": "AIP/quality-rules/570",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 576,
        "name": "Avoid large Classes - too many Constructors (C++)",
        "href": "AIP/quality-rules/576",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 578,
        "name": "Avoid Classes with multiple inheritance",
        "href": "AIP/quality-rules/578",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 580,
        "name": "Avoid using Structures",
        "href": "AIP/quality-rules/580",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 584,
        "name": "Avoid Classes with at least one virtual Function and without a virtual Destructor",
        "href": "AIP/quality-rules/584",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 588,
        "name": "Avoid using Global Variables (C++)",
        "href": "AIP/quality-rules/588",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 590,
        "name": "Avoid using global objects in Constructors and Destructors",
        "href": "AIP/quality-rules/590",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 592,
        "name": "Ensure you provide a user-defined copy constructor or disable copy when a class allocates memory in its constructor",
        "href": "AIP/quality-rules/592",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 610,
        "name": "Avoid circular references between header files",
        "href": "AIP/quality-rules/610",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 620,
        "name": "Avoid base Classes without virtual Destructors",
        "href": "AIP/quality-rules/620",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 628,
        "name": "Avoid invocation of virtual Methods of the declared Class in a Constructor or Destructor",
        "href": "AIP/quality-rules/628",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 630,
        "name": "Avoid data members that are not private",
        "href": "AIP/quality-rules/630",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 634,
        "name": "Avoid using VARIANT Structures",
        "href": "AIP/quality-rules/634",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 678,
        "name": "Never throw an exception from a Destructor",
        "href": "AIP/quality-rules/678",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1058,
        "name": "Avoid large Files - too many Lines of Code",
        "href": "AIP/quality-rules/1058",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1060,
        "name": "Avoid large Macros - too many Lines of Code",
        "href": "AIP/quality-rules/1060",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1066,
        "name": "Avoid implementation files that do not include a header file with the same name",
        "href": "AIP/quality-rules/1066",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1072,
        "name": "Avoid using memory management Functions (free/malloc/realloc)",
        "href": "AIP/quality-rules/1072",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1074,
        "name": "Avoid using signals management Functions",
        "href": "AIP/quality-rules/1074",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1078,
        "name": "Avoid undocumented Header files",
        "href": "AIP/quality-rules/1078",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1082,
        "name": "Avoid header files with a very low comment/code ratio",
        "href": "AIP/quality-rules/1082",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1092,
        "name": "Avoid undocumented Implementation files",
        "href": "AIP/quality-rules/1092",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1094,
        "name": "Avoid Implementation files with a very low comment/code ratio",
        "href": "AIP/quality-rules/1094",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 3148,
        "name": "An include file must contain at most one Class definition",
        "href": "AIP/quality-rules/3148",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7296,
        "name": "Never define static variables in header files",
        "href": "AIP/quality-rules/7296",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7340,
        "name": "Avoid Classes with Destructor not explicitly virtual whenever one of its base Class has a virtual Destructor",
        "href": "AIP/quality-rules/7340",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7342,
        "name": "Avoid functions overriding virtual functions without having the 'virtual' keyword",
        "href": "AIP/quality-rules/7342",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7766,
        "name": "Avoid Artifacts with High Cyclomatic Complexity",
        "href": "AIP/quality-rules/7766",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "ASP",
            "C",
            "C#",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "JavaScript",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7768,
        "name": "Avoid Artifacts with High Depth of Code",
        "href": "AIP/quality-rules/7768",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "ASP",
            "C",
            "C#",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "JavaScript",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7770,
        "name": "Avoid Artifacts with too many parameters",
        "href": "AIP/quality-rules/7770",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP",
            "C",
            "C#",
            "C++",
            "Forms",
            "JEE",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7772,
        "name": "Avoid Artifacts with High Essential Complexity",
        "href": "AIP/quality-rules/7772",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "ASP",
            "C",
            "C#",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "JavaScript",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7774,
        "name": "Avoid Artifacts with High Integration Complexity",
        "href": "AIP/quality-rules/7774",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "ASP",
            "C",
            "C#",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "JavaScript",
            "Microsoft T-SQL",
            "PL/SQL",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7776,
        "name": "Avoid Artifacts with High Fan-In",
        "href": "AIP/quality-rules/7776",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "ASP",
            "C",
            "C#",
            "C++",
            "Cobol",
            "Forms",
            "HTML5",
            "JEE",
            "JavaScript",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "Python",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7778,
        "name": "Avoid Artifacts with High Fan-Out",
        "href": "AIP/quality-rules/7778",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "ASP",
            "C",
            "C#",
            "C++",
            "Cobol",
            "Forms",
            "HTML5",
            "JEE",
            "JavaScript",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "Python",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7780,
        "name": "Avoid Classes with a very low comment/code ratio",
        "href": "AIP/quality-rules/7780",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7784,
        "name": "Avoid Artifacts with lines longer than X characters",
        "href": "AIP/quality-rules/7784",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP",
            "C",
            "C#",
            "C++",
            "Forms",
            "HTML5",
            "JEE",
            "JavaScript",
            "Microsoft T-SQL",
            "PL/SQL",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7792,
        "name": "Avoid Classes with a High Number Of Children",
        "href": "AIP/quality-rules/7792",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "PowerBuilder",
            "Python",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7794,
        "name": "Avoid Classes with a High Public Data Ratio",
        "href": "AIP/quality-rules/7794",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#",
            "C++",
            "JEE",
            "PowerBuilder",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7796,
        "name": "Avoid Classes with a High Lack of Cohesion - variant",
        "href": "AIP/quality-rules/7796",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "JEE",
            "PowerBuilder",
            "VB.NET"
        ]
    },
    {
        "id": 7798,
        "name": "Avoid Classes with a High Lack of Cohesion",
        "href": "AIP/quality-rules/7798",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "JEE",
            "PowerBuilder",
            "VB.NET"
        ]
    },
    {
        "id": 7800,
        "name": "Avoid Classes with High Coupling Between Objects",
        "href": "AIP/quality-rules/7800",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#",
            "C++",
            "JEE",
            "PowerBuilder",
            "VB.NET"
        ]
    },
    {
        "id": 7802,
        "name": "Avoid Classes with a High Depth of Inheritance Tree",
        "href": "AIP/quality-rules/7802",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "JEE",
            "PowerBuilder",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7804,
        "name": "Avoid Classes with High Weighted Methods per Class",
        "href": "AIP/quality-rules/7804",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#",
            "C++",
            "JEE",
            "PowerBuilder",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7806,
        "name": "Avoid Artifacts with Group By",
        "href": "AIP/quality-rules/7806",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C",
            "C#",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7808,
        "name": "Avoid Artifacts with SQL statement including subqueries",
        "href": "AIP/quality-rules/7808",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "Microsoft T-SQL",
            "PL/SQL",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "Visual Basic"
        ]
    },
    {
        "id": 7810,
        "name": "Avoid Artifacts with a Complex SELECT Clause",
        "href": "AIP/quality-rules/7810",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "SQL Server",
            "Sybase T-SQL",
            "Visual Basic"
        ]
    },
    {
        "id": 7816,
        "name": "Avoid using GOTO statement",
        "href": "AIP/quality-rules/7816",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "Forms",
            "Microsoft T-SQL",
            "PL/SQL",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET"
        ]
    },
    {
        "id": 7822,
        "name": "Avoid Artifacts with queries on more than 4 Tables",
        "href": "AIP/quality-rules/7822",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "SQL Server",
            "Sybase T-SQL",
            "Visual Basic"
        ]
    },
    {
        "id": 7828,
        "name": "Avoid Artifacts with High RAW SQL Complexity",
        "href": "AIP/quality-rules/7828",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C",
            "C++",
            "Cobol",
            "Forms",
            "JEE",
            "Microsoft T-SQL",
            "PL/SQL",
            "PowerBuilder",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "Visual Basic"
        ]
    },
    {
        "id": 7832,
        "name": "Avoid unreferenced Classes",
        "href": "AIP/quality-rules/7832",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C++",
            "JEE",
            "Visual Basic"
        ]
    },
    {
        "id": 7834,
        "name": "Avoid undocumented Interfaces",
        "href": "AIP/quality-rules/7834",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "VB.NET"
        ]
    },
    {
        "id": 7836,
        "name": "Avoid undocumented Functions",
        "href": "AIP/quality-rules/7836",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "ASP",
            "C",
            "C++",
            "JEE",
            "JavaScript",
            "PowerBuilder",
            "Visual Basic"
        ]
    },
    {
        "id": 7838,
        "name": "Avoid undocumented Methods",
        "href": "AIP/quality-rules/7838",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "PowerBuilder",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7842,
        "name": "Avoid large Artifacts - too many Lines of Code",
        "href": "AIP/quality-rules/7842",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C",
            "C#",
            "C++",
            "Cobol",
            "Forms",
            "HTML5",
            "JEE",
            "Microsoft T-SQL",
            "PL/SQL",
            "SQL",
            "SQL Server",
            "Sybase T-SQL",
            "VB.NET"
        ]
    },
    {
        "id": 7844,
        "name": "Avoid undocumented Classes",
        "href": "AIP/quality-rules/7844",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "HTML5",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7846,
        "name": "Avoid Methods with a very low comment/code ratio",
        "href": "AIP/quality-rules/7846",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C",
            "C#",
            "C++",
            "JEE",
            "PowerBuilder",
            "VB.NET"
        ]
    },
    {
        "id": 7848,
        "name": "Interface naming convention - prefix",
        "href": "AIP/quality-rules/7848",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "VB.NET"
        ]
    },
    {
        "id": 7860,
        "name": "Avoid unreferenced Functions",
        "href": "AIP/quality-rules/7860",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "ASP",
            "C",
            "C++",
            "Forms",
            "JEE",
            "JavaScript",
            "Microsoft T-SQL",
            "PL/SQL",
            "SQL",
            "Sybase T-SQL",
            "Visual Basic"
        ]
    },
    {
        "id": 7908,
        "name": "Avoid unreferenced Methods",
        "href": "AIP/quality-rules/7908",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C++",
            "JEE",
            "Visual Basic"
        ]
    },
    {
        "id": 7912,
        "name": "Avoid unreferenced Data Members",
        "href": "AIP/quality-rules/7912",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C",
            "C++",
            "JEE"
        ]
    },
    {
        "id": 7914,
        "name": "Avoid direct access to Database Tables",
        "href": "AIP/quality-rules/7914",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP",
            "C",
            "C#",
            "C++",
            "JEE",
            "PowerBuilder",
            "VB.NET",
            "Visual Basic"
        ]
    },
    {
        "id": 7922,
        "name": "Avoid usage of 'std::find_first_of'",
        "href": "AIP/quality-rules/7922",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7924,
        "name": "Avoid defining Functions with 'struct' or 'class' parameters passed by value",
        "href": "AIP/quality-rules/7924",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7926,
        "name": "Abstract Classes should be non copy-assignable",
        "href": "AIP/quality-rules/7926",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7930,
        "name": "Avoid redeclaring and overriding Methods with different default parameter values",
        "href": "AIP/quality-rules/7930",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7932,
        "name": "Avoid Constructors not supplying an initial value for all non-static data members",
        "href": "AIP/quality-rules/7932",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7938,
        "name": "Override all overloads of a base Class virtual Method",
        "href": "AIP/quality-rules/7938",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7944,
        "name": "Avoid High Response for Classes",
        "href": "AIP/quality-rules/7944",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "PowerBuilder",
            "VB.NET"
        ]
    },
    {
        "id": 7966,
        "name": "Avoid includes in Header Files",
        "href": "AIP/quality-rules/7966",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7968,
        "name": "Never use strcat() function (C/C++)",
        "href": "AIP/quality-rules/7968",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7970,
        "name": "Never use strcpy() function (C/C++)",
        "href": "AIP/quality-rules/7970",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7972,
        "name": "Never use sprintf() or vsprintf() functions",
        "href": "AIP/quality-rules/7972",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7976,
        "name": "Never use gets() function",
        "href": "AIP/quality-rules/7976",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7978,
        "name": "Avoid using the scanf() function family",
        "href": "AIP/quality-rules/7978",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7980,
        "name": "Avoid using strtrns() function",
        "href": "AIP/quality-rules/7980",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7982,
        "name": "Avoid using strlen() function family",
        "href": "AIP/quality-rules/7982",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7984,
        "name": "Avoid using strecpy() function",
        "href": "AIP/quality-rules/7984",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7986,
        "name": "Avoid using streadd() function",
        "href": "AIP/quality-rules/7986",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7988,
        "name": "DEPRECATED: Avoid using snprintf() function family",
        "href": "AIP/quality-rules/7988",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7990,
        "name": "Avoid using realpath() function",
        "href": "AIP/quality-rules/7990",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7992,
        "name": "Avoid using getpass() function",
        "href": "AIP/quality-rules/7992",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7994,
        "name": "Avoid using getopt() function",
        "href": "AIP/quality-rules/7994",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7996,
        "name": "Provide a private default Constructor for utility Classes or use free Functions in a Namespace",
        "href": "AIP/quality-rules/7996",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7998,
        "name": "Avoid local variables that are not initialized at declaration time",
        "href": "AIP/quality-rules/7998",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8000,
        "name": "Avoid 'catch-all' statement",
        "href": "AIP/quality-rules/8000",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8002,
        "name": "Never perform C-style cast between incompatible Class pointers",
        "href": "AIP/quality-rules/8002",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8004,
        "name": "Avoid using 'delete this'",
        "href": "AIP/quality-rules/8004",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8006,
        "name": "Avoid Classes with a copy Constructor and the default Destructor or assignment operator",
        "href": "AIP/quality-rules/8006",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8008,
        "name": "Avoid data members that are never read",
        "href": "AIP/quality-rules/8008",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8010,
        "name": "Do not overload the ampersand, comma, logical AND or logical OR operators",
        "href": "AIP/quality-rules/8010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8022,
        "name": "Avoid hiding attributes",
        "href": "AIP/quality-rules/8022",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++",
            "JEE"
        ]
    },
    {
        "id": 8024,
        "name": "Avoid Classes with a non-empty Destructor and the default assignment operator or copy Constructor",
        "href": "AIP/quality-rules/8024",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8026,
        "name": "Avoid Classes with an assignment operator and the default Destructor or copy constructor",
        "href": "AIP/quality-rules/8026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8028,
        "name": "Avoid missing default in switch statements",
        "href": "AIP/quality-rules/8028",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "Objective-C",
            "VB.NET"
        ]
    },
    {
        "id": 8032,
        "name": "Avoid using a break statement in 'for' loops",
        "href": "AIP/quality-rules/8032",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8046,
        "name": "Do not return non-const handles to Class data from const member Functions",
        "href": "AIP/quality-rules/8046",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8048,
        "name": "Invoke 'delete' with the same form as the matching 'new'",
        "href": "AIP/quality-rules/8048",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8050,
        "name": "Do not hide declarations in other scopes",
        "href": "AIP/quality-rules/8050",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8052,
        "name": "Avoid setting a pointer to the address of a local variable defined in a lower scope",
        "href": "AIP/quality-rules/8052",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8054,
        "name": "Avoid calling blocking functions with an infinite timeout",
        "href": "AIP/quality-rules/8054",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8056,
        "name": "Method override fails due to mismatch of const/volatile qualifiers",
        "href": "AIP/quality-rules/8056",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8058,
        "name": "A pointer to a derived Class shall only be cast implicitly to a pointer to base Class",
        "href": "AIP/quality-rules/8058",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8060,
        "name": "A pointer to a base Class shall only be cast to a pointer to a derived Class by means of 'dynamic_cast'",
        "href": "AIP/quality-rules/8060",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8062,
        "name": "An unconditional 'throw', 'return' or 'break' shall terminate every non-empty switch-clause",
        "href": "AIP/quality-rules/8062",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8064,
        "name": "Assignment operator should assign all non-static members of the target object",
        "href": "AIP/quality-rules/8064",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8066,
        "name": "Avoid using 'using namespace' or 'using' declarations in header files",
        "href": "AIP/quality-rules/8066",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8068,
        "name": "Do not return a dereferenced pointer allocated inside the function",
        "href": "AIP/quality-rules/8068",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8070,
        "name": "Do not alter a control variable in the body of a 'for' statement",
        "href": "AIP/quality-rules/8070",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8072,
        "name": "Never define collection of 'std::auto_ptr'",
        "href": "AIP/quality-rules/8072",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8074,
        "name": "Avoid using 'class' or 'struct' parameters with variadic Functions",
        "href": "AIP/quality-rules/8074",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8076,
        "name": "Avoid using 'new[]', prefer 'std::vector' or 'std::array'",
        "href": "AIP/quality-rules/8076",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8078,
        "name": "Casting from pointer to base Class to pointer to derived Class should be done through 'dynamic_cast' or 'static_cast'",
        "href": "AIP/quality-rules/8078",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065000,
        "name": "Avoid using \"continue\" statement",
        "href": "AIP/quality-rules/1065000",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065002,
        "name": "\"enum\" members other than the first one should not be explicitly initialized unless all members are explicitly initialized.",
        "href": "AIP/quality-rules/1065002",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065004,
        "name": "Ensure that dynamically allocated memory on local pointer in functions/methods is freed.",
        "href": "AIP/quality-rules/1065004",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065006,
        "name": "Avoid iterator invalidation.",
        "href": "AIP/quality-rules/1065006",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065008,
        "name": "Avoid use of unvalidated input in array indexing and memory allocation",
        "href": "AIP/quality-rules/1065008",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065010,
        "name": "Avoid using <cstdio> stream input output library (C++)",
        "href": "AIP/quality-rules/1065010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065012,
        "name": "Avoid using 'setjmp' or 'longjmp' (C/C++)",
        "href": "AIP/quality-rules/1065012",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065014,
        "name": "Avoid using the library functions bsearch and qsort from <stdlib.h> (C/C++)",
        "href": "AIP/quality-rules/1065014",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065016,
        "name": "Avoid using atof,atol, atoll or atoi functions from <stdlib.h> (C/C++)",
        "href": "AIP/quality-rules/1065016",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065018,
        "name": "Avoid using offsetof from <cstddef>",
        "href": "AIP/quality-rules/1065018",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065020,
        "name": "Avoid using <ctime> (C++)",
        "href": "AIP/quality-rules/1065020",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065022,
        "name": "Avoid using <stdio.h> (C/C++)",
        "href": "AIP/quality-rules/1065022",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065024,
        "name": "Avoid using the standard library time and date functions from \"<time.h>\" (C/C++)",
        "href": "AIP/quality-rules/1065024",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065026,
        "name": "Ensure exception objects are always caught by reference (C++)",
        "href": "AIP/quality-rules/1065026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065028,
        "name": "Ensure Switch statements have at least 2 case clauses (C/C++)",
        "href": "AIP/quality-rules/1065028",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065030,
        "name": "All if \u2026 else if constructs shall be terminated with an else clause (C/C++)",
        "href": "AIP/quality-rules/1065030",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065032,
        "name": "Avoid flexible array members (C/C++)",
        "href": "AIP/quality-rules/1065032",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065034,
        "name": "Avoid throwing an exception object of pointer type (C++)",
        "href": "AIP/quality-rules/1065034",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065036,
        "name": "Avoid using '//' and  '/*' within comments (C/C++)",
        "href": "AIP/quality-rules/1065036",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065038,
        "name": "Avoid using 'signal.h' (C/C++)",
        "href": "AIP/quality-rules/1065038",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065040,
        "name": "Avoid anonymous namespaces in header files (C++)",
        "href": "AIP/quality-rules/1065040",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065042,
        "name": "Avoid non-void return type function without an explicit return of an expression (C/C++)",
        "href": "AIP/quality-rules/1065042",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065044,
        "name": "Avoid other than main(), namespace declarations and extern \"C\" declarations in the global namespace (C/C++)",
        "href": "AIP/quality-rules/1065044",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065046,
        "name": "Avoid using the unbounded functions of <cstring> library",
        "href": "AIP/quality-rules/1065046",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065048,
        "name": "Where multiple handlers are provided in a single try-catch statement or function-try-block, any ellipsis (catch-all) handler shall occur last.",
        "href": "AIP/quality-rules/1065048",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065050,
        "name": "Avoid using \"sizeof\" on expressions that contain side effects",
        "href": "AIP/quality-rules/1065050",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065052,
        "name": "Avoid using Octal constants or escape sequences (C/C++)",
        "href": "AIP/quality-rules/1065052",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065054,
        "name": "Do not override the standard library functions (C/C++)",
        "href": "AIP/quality-rules/1065054",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065056,
        "name": "Avoid throwing exceptions outside of main()",
        "href": "AIP/quality-rules/1065056",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065058,
        "name": "Ensure that there is at least one exception handler to catch-all otherwise unhandled exceptions in the main function(C++)",
        "href": "AIP/quality-rules/1065058",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065060,
        "name": "Avoid loops with floating point counter (C/C++)",
        "href": "AIP/quality-rules/1065060",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065062,
        "name": "Avoid testing floating point numbers for equality",
        "href": "AIP/quality-rules/1065062",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065064,
        "name": "Avoid doing assignments in sub-expressions (C++)",
        "href": "AIP/quality-rules/1065064",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065066,
        "name": "Avoid having  a method call or additional expressions in a statement using \"++\" or \"--\" operators (C/C++)",
        "href": "AIP/quality-rules/1065066",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065068,
        "name": "Avoid using Digraphs (C++)",
        "href": "AIP/quality-rules/1065068",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065070,
        "name": "Avoid using Trigraphs",
        "href": "AIP/quality-rules/1065070",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065072,
        "name": "Avoid using Unions",
        "href": "AIP/quality-rules/1065072",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065074,
        "name": "All constructors that are callable with a single argument of fundamental type shall be declared explicit.",
        "href": "AIP/quality-rules/1065074",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065076,
        "name": "Avoid declaring data members in non-POD classes as public or protected",
        "href": "AIP/quality-rules/1065076",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065078,
        "name": "A base class shall be declared virtual only if it is used in a diamond hierarchy",
        "href": "AIP/quality-rules/1065078",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065080,
        "name": "Avoid using C-style and functional notation casts (C++)",
        "href": "AIP/quality-rules/1065080",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065082,
        "name": "Handlers of a function-try-block implementation of a class constructor ordestructor shall not reference non-static members from this class or its bases.",
        "href": "AIP/quality-rules/1065082",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065084,
        "name": "Avoid performing conversion from a function pointer to any other type (C/C++)",
        "href": "AIP/quality-rules/1065084",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065086,
        "name": "Avoid casting and converting a pointer type to an integral type (C/C++)",
        "href": "AIP/quality-rules/1065086",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065088,
        "name": "Member functions shall not return non-const handles to class-data.",
        "href": "AIP/quality-rules/1065088",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065090,
        "name": "Avoid using 'enum' types as operands for arithmetic contexts",
        "href": "AIP/quality-rules/1065090",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065092,
        "name": "Avoid having boolean operators with non-boolean operands (C/C++)",
        "href": "AIP/quality-rules/1065092",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065094,
        "name": "Avoid having expressions with bool type to be used as operands on operators other than =, &&, ||, !, ==, !=, the unary & operator, and the conditional operator",
        "href": "AIP/quality-rules/1065094",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065096,
        "name": "Avoid dynamic_cast to convert current object to its derived class from its constructor or destructor",
        "href": "AIP/quality-rules/1065096",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065098,
        "name": "Avoid delete operators to exit with an exception.",
        "href": "AIP/quality-rules/1065098",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065100,
        "name": "Avoid move constructor and move assignment operator to exit with an exception",
        "href": "AIP/quality-rules/1065100",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065102,
        "name": "Avoid checking Integer overflow without explicit cast",
        "href": "AIP/quality-rules/1065102",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065104,
        "name": "Converting a multiplication to a larger type should be done before the multiplication takes place",
        "href": "AIP/quality-rules/1065104",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065106,
        "name": "Avoid comparing types of different widths in a loop",
        "href": "AIP/quality-rules/1065106",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065108,
        "name": "Bit-fields shall be either unsigned integral, or enumeration (with underlying type of unsigned integral type).",
        "href": "AIP/quality-rules/1065108",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065110,
        "name": "Ensure arrays and containers are accessed using unsigned values",
        "href": "AIP/quality-rules/1065110",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1101036,
        "name": "Use ANSI standard operators in SQL WHERE clauses",
        "href": "AIP/quality-rules/1101036",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "C/C++",
            "Cobol",
            "JEE",
            "PowerBuilder",
            "Python",
            "VB.NET",
            "Visual Basic"
        ]
    }
]
