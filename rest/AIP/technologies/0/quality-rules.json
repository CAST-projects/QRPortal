[
    {
        "id": 7124,
        "name": "DELETED: Functional Evolvability",
        "href": "AIP/quality-rules/7124",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7126,
        "name": "Avoid Artifacts with high Commented-out Code Lines/Code Lines ratio",
        "href": "AIP/quality-rules/7126",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7130,
        "name": "Avoid Artifacts with High Depth of Nested Subqueries",
        "href": "AIP/quality-rules/7130",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7156,
        "name": "Avoid Too Many Copy Pasted Artifacts",
        "href": "AIP/quality-rules/7156",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7204,
        "name": "Avoid method invocation in a loop termination expression",
        "href": "AIP/quality-rules/7204",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7344,
        "name": "Avoid \"SELECT *\" queries",
        "href": "AIP/quality-rules/7344",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7346,
        "name": "Avoid redundant indexes",
        "href": "AIP/quality-rules/7346",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7348,
        "name": "Avoid too many Indexes on one Table",
        "href": "AIP/quality-rules/7348",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7350,
        "name": "Avoid Tables having Indexes with a too large Index definition",
        "href": "AIP/quality-rules/7350",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7388,
        "name": "Avoid artifacts having recursive calls",
        "href": "AIP/quality-rules/7388",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7390,
        "name": "Avoid having multiple artifacts inserting data on the same SQL Table",
        "href": "AIP/quality-rules/7390",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7392,
        "name": "Avoid having multiple artifacts deleting data on the same SQL table",
        "href": "AIP/quality-rules/7392",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7394,
        "name": "Avoid having multiple artifacts updating data on the same SQL Table",
        "href": "AIP/quality-rules/7394",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7418,
        "name": "Avoid SQL queries using functions on indexed columns in the WHERE clause",
        "href": "AIP/quality-rules/7418",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7424,
        "name": "Avoid using SQL queries inside a loop",
        "href": "AIP/quality-rules/7424",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7428,
        "name": "Avoid SQL queries not using the first column of a composite index in the WHERE clause",
        "href": "AIP/quality-rules/7428",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7436,
        "name": "Prefer UNION ALL to UNION",
        "href": "AIP/quality-rules/7436",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7642,
        "name": "Avoid SQL queries on XXL tables not using the first column of a composite index in the WHERE clause",
        "href": "AIP/quality-rules/7642",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7658,
        "name": "Avoid SQL queries on XXL Tables using Functions on indexed Columns in the WHERE clause",
        "href": "AIP/quality-rules/7658",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1001008,
        "name": "Avoid having multiple artifacts inserting data on the same SQL table (PLI)",
        "href": "AIP/quality-rules/1001008",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1001010,
        "name": "Avoid having multiple artifacts deleting data on the same SQL table (PLI)",
        "href": "AIP/quality-rules/1001010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1001012,
        "name": "Avoid having multiple artifacts updating data on the same SQL table (PLI)",
        "href": "AIP/quality-rules/1001012",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1001014,
        "name": "Avoid having multiple artifacts inserting data on the same SQL table (PLC)",
        "href": "AIP/quality-rules/1001014",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1001016,
        "name": "Avoid having multiple artifacts deleting data on the same SQL table (PLC)",
        "href": "AIP/quality-rules/1001016",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1001018,
        "name": "Avoid having multiple artifacts updating data on the same SQL table (PLC)",
        "href": "AIP/quality-rules/1001018",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1020950,
        "name": "Avoid providing password in Web Service URL",
        "href": "AIP/quality-rules/1020950",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065010,
        "name": "Avoid using <cstdio> stream input output library (C++)",
        "href": "AIP/quality-rules/1065010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065012,
        "name": "Avoid using 'setjmp' or 'longjmp' (C/C++)",
        "href": "AIP/quality-rules/1065012",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065014,
        "name": "Avoid using the library functions bsearch and qsort from <stdlib.h> (C/C++)",
        "href": "AIP/quality-rules/1065014",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065016,
        "name": "Avoid using atof,atol, atoll or atoi functions from <stdlib.h> (C/C++)",
        "href": "AIP/quality-rules/1065016",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065018,
        "name": "Avoid using offsetof from <cstddef>",
        "href": "AIP/quality-rules/1065018",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065020,
        "name": "Avoid using <ctime> (C++)",
        "href": "AIP/quality-rules/1065020",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065022,
        "name": "Avoid using <stdio.h> (C/C++)",
        "href": "AIP/quality-rules/1065022",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065024,
        "name": "Avoid using the standard library time and date functions from \"<time.h>\" (C/C++)",
        "href": "AIP/quality-rules/1065024",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065026,
        "name": "Ensure exception objects are always caught by reference (C++)",
        "href": "AIP/quality-rules/1065026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065028,
        "name": "Ensure Switch statements have at least 2 case clauses (C/C++)",
        "href": "AIP/quality-rules/1065028",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065030,
        "name": "All if \u2026 else if constructs shall be terminated with an else clause (C/C++)",
        "href": "AIP/quality-rules/1065030",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065032,
        "name": "Avoid flexible array members (C/C++)",
        "href": "AIP/quality-rules/1065032",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065034,
        "name": "Avoid throwing an exception object of pointer type (C++)",
        "href": "AIP/quality-rules/1065034",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065036,
        "name": "Avoid using '//' and  '/*' within comments (C/C++)",
        "href": "AIP/quality-rules/1065036",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065038,
        "name": "Avoid using 'signal.h' (C/C++)",
        "href": "AIP/quality-rules/1065038",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065040,
        "name": "Avoid anonymous namespaces in header files (C++)",
        "href": "AIP/quality-rules/1065040",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065042,
        "name": "Avoid non-void return type function without an explicit return of an expression (C/C++)",
        "href": "AIP/quality-rules/1065042",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065044,
        "name": "Avoid other than main(), namespace declarations and extern \"C\" declarations in the global namespace (C/C++)",
        "href": "AIP/quality-rules/1065044",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101000,
        "name": "Never use SQL queries with a cartesian product (SQL)",
        "href": "AIP/quality-rules/1101000",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101002,
        "name": "Never use SQL queries with a cartesian product on XXL Tables (SQL)",
        "href": "AIP/quality-rules/1101002",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101004,
        "name": "Avoid non-indexed SQL queries",
        "href": "AIP/quality-rules/1101004",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101006,
        "name": "Avoid non-indexed XXL SQL queries",
        "href": "AIP/quality-rules/1101006",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101008,
        "name": "Avoid non-SARGable queries",
        "href": "AIP/quality-rules/1101008",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101010,
        "name": "Avoid NATURAL JOIN queries",
        "href": "AIP/quality-rules/1101010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101012,
        "name": "Specify column names instead of column numbers in ORDER BY clauses",
        "href": "AIP/quality-rules/1101012",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101014,
        "name": "Avoid queries using old style join convention instead of ANSI-Standard joins (SQL)",
        "href": "AIP/quality-rules/1101014",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101026,
        "name": "Always define column names when inserting values",
        "href": "AIP/quality-rules/1101026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101028,
        "name": "Use MINUS or EXCEPT operator instead of NOT EXISTS and NOT IN subqueries",
        "href": "AIP/quality-rules/1101028",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101032,
        "name": "Avoid exists and not exists independent clauses (SQL)",
        "href": "AIP/quality-rules/1101032",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101034,
        "name": "DISTINCT should not be used in SQL SELECT statements",
        "href": "AIP/quality-rules/1101034",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101038,
        "name": "Replace OR conditions testing equality on the same identifier in SQL WHERE clauses by an IN test condition",
        "href": "AIP/quality-rules/1101038",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101058,
        "name": "Do not mix ANSI and non-ANSI JOIN syntax in the same query",
        "href": "AIP/quality-rules/1101058",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101060,
        "name": "LIKE operator should not start with a wildcard character",
        "href": "AIP/quality-rules/1101060",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101066,
        "name": "Avoid improperly written triangular joins with XXL tables",
        "href": "AIP/quality-rules/1101066",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101070,
        "name": "Avoid explicit comparison with NULL",
        "href": "AIP/quality-rules/1101070",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101072,
        "name": "Tables should be aliased",
        "href": "AIP/quality-rules/1101072",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101074,
        "name": "Tables aliases should not end with a numeric suffix",
        "href": "AIP/quality-rules/1101074",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101076,
        "name": "Column references should be qualified",
        "href": "AIP/quality-rules/1101076",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    }
]
