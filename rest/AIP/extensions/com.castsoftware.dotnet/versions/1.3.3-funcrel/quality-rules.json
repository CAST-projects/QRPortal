[
    {
        "id": 3550,
        "name": "Namespace naming convention - case control",
        "href": "AIP/quality-rules/3550",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3554,
        "name": "Interface naming convention - case and character set control",
        "href": "AIP/quality-rules/3554",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3558,
        "name": "Enumerations naming convention - case and character set control",
        "href": "AIP/quality-rules/3558",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3560,
        "name": "Enumeration Items naming convention - case and character set control",
        "href": "AIP/quality-rules/3560",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3562,
        "name": "Private Fields naming convention - case and character set control",
        "href": "AIP/quality-rules/3562",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3564,
        "name": "Public Fields naming convention - case and character set control",
        "href": "AIP/quality-rules/3564",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3566,
        "name": "Methods naming convention - case and character set control",
        "href": "AIP/quality-rules/3566",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3568,
        "name": "Events naming convention - case and character set control",
        "href": "AIP/quality-rules/3568",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3572,
        "name": "Controls naming convention - prefix, case and character set control",
        "href": "AIP/quality-rules/3572",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3574,
        "name": "Properties naming convention - case and character set control",
        "href": "AIP/quality-rules/3574",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3576,
        "name": "Avoid declaring public Fields",
        "href": "AIP/quality-rules/3576",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3578,
        "name": "Avoid large Classes - too many Constructors (.NET)",
        "href": "AIP/quality-rules/3578",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3580,
        "name": "Avoid large Classes - too many Methods (.NET)",
        "href": "AIP/quality-rules/3580",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3586,
        "name": "Avoid large Methods - too many Lines of Code",
        "href": "AIP/quality-rules/3586",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3590,
        "name": "Avoid Interface implementation on Structures",
        "href": "AIP/quality-rules/3590",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3610,
        "name": "Avoid declaring VB Variables without typing them (.NET)",
        "href": "AIP/quality-rules/3610",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "VB.NET"
        ]
    },
    {
        "id": 3612,
        "name": "Avoid missing release of SQL connection after an effective lifetime (C#, VB.NET)",
        "href": "AIP/quality-rules/3612",
        "status": "renewed",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3614,
        "name": "Avoid using String.Empty for empty string tests",
        "href": "AIP/quality-rules/3614",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3626,
        "name": "Avoid Interfaces with a very low comment/code ratio",
        "href": "AIP/quality-rules/3626",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 3630,
        "name": "Avoid having Classes implementing too many Interfaces",
        "href": "AIP/quality-rules/3630",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7194,
        "name": "DEPRECATED: Avoid large number of String concatenation (.NET)",
        "href": "AIP/quality-rules/7194",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7198,
        "name": "Avoid String concatenation in loops (.NET)",
        "href": "AIP/quality-rules/7198",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7212,
        "name": "Avoid instantiations inside loops (.NET)",
        "href": "AIP/quality-rules/7212",
        "status": "renewed",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7258,
        "name": "DataReader must be called using CommandBehavior.CloseConnection enumeration",
        "href": "AIP/quality-rules/7258",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7260,
        "name": "User Interface elements must not use directly the database",
        "href": "AIP/quality-rules/7260",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7262,
        "name": "Avoid Namespaces with High Efferent Coupling (CE)",
        "href": "AIP/quality-rules/7262",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7264,
        "name": "Avoid namespaces with High Afferent Coupling (CA)",
        "href": "AIP/quality-rules/7264",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7266,
        "name": "Call 'base.Dispose()' or 'MyBase.Finalize()' in the \"finally\" block of 'Dispose(bool)' methods",
        "href": "AIP/quality-rules/7266",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7268,
        "name": "Dispose() methods should call GC.SuppressFinalize",
        "href": "AIP/quality-rules/7268",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7270,
        "name": "Declare as Static all methods not using instance members (.NET)",
        "href": "AIP/quality-rules/7270",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7272,
        "name": "Provide a private default Constructor for utility Classes (.NET)",
        "href": "AIP/quality-rules/7272",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7294,
        "name": "Avoid cyclical calls and inheritances between namespaces content",
        "href": "AIP/quality-rules/7294",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7352,
        "name": "Avoid calling properties that clone values in loops",
        "href": "AIP/quality-rules/7352",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7358,
        "name": "Avoid call to AcceptChanges in a loop",
        "href": "AIP/quality-rules/7358",
        "status": "renewed",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7458,
        "name": "Avoid large Interfaces - too many Methods (.NET)",
        "href": "AIP/quality-rules/7458",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7466,
        "name": "Avoid changing DataSource member before ValueMember/DisplayMember",
        "href": "AIP/quality-rules/7466",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7468,
        "name": "Disable constraints before merging DataSet",
        "href": "AIP/quality-rules/7468",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7474,
        "name": "Avoid Repainting When Updating a ListBox",
        "href": "AIP/quality-rules/7474",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7918,
        "name": "Exceptions naming convention -suffix control",
        "href": "AIP/quality-rules/7918",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 7920,
        "name": "Exceptions naming convention - case and character set control",
        "href": "AIP/quality-rules/7920",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8086,
        "name": "Avoid types that own disposable fields and are not disposable",
        "href": "AIP/quality-rules/8086",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8088,
        "name": "Avoid override artifacts not having link demands identical to base",
        "href": "AIP/quality-rules/8088",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8090,
        "name": "Avoid using NaN to test the result of an expression",
        "href": "AIP/quality-rules/8090",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8092,
        "name": "Avoid Objects having exposed pointers allowed to access unmanaged memory",
        "href": "AIP/quality-rules/8092",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8094,
        "name": "Avoid locking of Objects with weak identities",
        "href": "AIP/quality-rules/8094",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8148,
        "name": "Avoid artifacts having Incorrect Type Conversion or Cast",
        "href": "AIP/quality-rules/8148",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8150,
        "name": "Avoid using Parse for primitive types and used instead TryParse",
        "href": "AIP/quality-rules/8150",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8152,
        "name": "Avoid having transaction with the Thread.Sleep method in a loop",
        "href": "AIP/quality-rules/8152",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8154,
        "name": "Avoid using GC.Collect()",
        "href": "AIP/quality-rules/8154",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8156,
        "name": "Persistent classes should implement GetHashCode() and Equals()",
        "href": "AIP/quality-rules/8156",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8158,
        "name": "Avoid thread creation for application running on application server",
        "href": "AIP/quality-rules/8158",
        "status": "renewed",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8400,
        "name": "Avoid having lock on this object",
        "href": "AIP/quality-rules/8400",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 8402,
        "name": "All types of a serializable class must be serializable",
        "href": "AIP/quality-rules/8402",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027000,
        "name": "Avoid Managed type declaration for Win32 API using Overlapped IO",
        "href": "AIP/quality-rules/1027000",
        "status": "renewed",
        "critical": false,
        "severity": 30,
        "technologyNames": [
            "C#"
        ]
    },
    {
        "id": 1027002,
        "name": "Avoid exposing methods that use Platform Invocation Services to access unmanaged code",
        "href": "AIP/quality-rules/1027002",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027004,
        "name": "Avoid using deprecated XmlTextReader .NET API",
        "href": "AIP/quality-rules/1027004",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027008,
        "name": "Always Revert After Impersonation",
        "href": "AIP/quality-rules/1027008",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027010,
        "name": "Avoid weak encryption providing insufficient key size (.NET)",
        "href": "AIP/quality-rules/1027010",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027012,
        "name": "Avoid storing Non-Serializable Object as HttpSessionState attributes.",
        "href": "AIP/quality-rules/1027012",
        "status": "renewed",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    }
]
