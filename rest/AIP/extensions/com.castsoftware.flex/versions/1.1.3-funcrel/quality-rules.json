[
    {
        "id": 1003000,
        "name": "Avoid packages with high number of imports (Flex)",
        "href": "AIP/quality-rules/1003000",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003002,
        "name": "Avoid scripts high number of imports (Flex)",
        "href": "AIP/quality-rules/1003002",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003004,
        "name": "Avoid packages with view components referenced in a model class (Flex)",
        "href": "AIP/quality-rules/1003004",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003006,
        "name": "Avoid scripts with view components referenced in a model class (Flex)",
        "href": "AIP/quality-rules/1003006",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003008,
        "name": "Avoid class duplicated with a SDK class (Flex)",
        "href": "AIP/quality-rules/1003008",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003010,
        "name": "Avoid class that imports an internal class from another functional area (Flex)",
        "href": "AIP/quality-rules/1003010",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003012,
        "name": "Avoid using code behind files (Flex)",
        "href": "AIP/quality-rules/1003012",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003014,
        "name": "Avoid nested if statements (Flex)",
        "href": "AIP/quality-rules/1003014",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003016,
        "name": "Avoid long cases in switch (Flex)",
        "href": "AIP/quality-rules/1003016",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003018,
        "name": "Avoid nested switch statements (Flex)",
        "href": "AIP/quality-rules/1003018",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003020,
        "name": "Avoid empty overriden method (Flex)",
        "href": "AIP/quality-rules/1003020",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003022,
        "name": "Avoid empty statement (Flex)",
        "href": "AIP/quality-rules/1003022",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003024,
        "name": "Avoid empty private method (Flex)",
        "href": "AIP/quality-rules/1003024",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003026,
        "name": "Avoid too complex methods (Flex)",
        "href": "AIP/quality-rules/1003026",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003028,
        "name": "Avoid long parameter list (Flex)",
        "href": "AIP/quality-rules/1003028",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003030,
        "name": "Avoid function with unused parameter (Flex)",
        "href": "AIP/quality-rules/1003030",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003032,
        "name": "Avoid unused variable (Flex)",
        "href": "AIP/quality-rules/1003032",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003034,
        "name": "Avoid unused private method (Flex)",
        "href": "AIP/quality-rules/1003034",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003036,
        "name": "Avoid unused private field (Flex)",
        "href": "AIP/quality-rules/1003036",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003038,
        "name": "Cairngorm: Avoid Cairngorm event name without functional area (Flex)",
        "href": "AIP/quality-rules/1003038",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003040,
        "name": "Avoid Event name not set explicitly (Flex)",
        "href": "AIP/quality-rules/1003040",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003042,
        "name": "Avoid extension with same name as the class name (Flex)",
        "href": "AIP/quality-rules/1003042",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003044,
        "name": "Avoid field with name too short (Flex)",
        "href": "AIP/quality-rules/1003044",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003046,
        "name": "Avoid variable with name too short (Flex)",
        "href": "AIP/quality-rules/1003046",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003048,
        "name": "Avoid package name in upper case (Flex)",
        "href": "AIP/quality-rules/1003048",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003050,
        "name": "Avoid field names ending with numeric characters (Flex)",
        "href": "AIP/quality-rules/1003050",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003052,
        "name": "Avoid variable names ending with numeric characters (Flex)",
        "href": "AIP/quality-rules/1003052",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003054,
        "name": "Avoid local variable hiding a class property (Flex)",
        "href": "AIP/quality-rules/1003054",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003056,
        "name": "Avoid class name that does not start with capital letter (Flex)",
        "href": "AIP/quality-rules/1003056",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003058,
        "name": "Avoid fields with names that can reduce code readability (Flex)",
        "href": "AIP/quality-rules/1003058",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003060,
        "name": "Avoid variables with names that can reduce code readability (Flex)",
        "href": "AIP/quality-rules/1003060",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003062,
        "name": "Avoid too long line (Flex)",
        "href": "AIP/quality-rules/1003062",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003064,
        "name": "Avoid imports from the same package (Flex)",
        "href": "AIP/quality-rules/1003064",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003066,
        "name": "Avoid incorrectly formatted logger (Flex)",
        "href": "AIP/quality-rules/1003066",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003068,
        "name": "Avoid Attribute not documented with AsDocs (Flex)",
        "href": "AIP/quality-rules/1003068",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003070,
        "name": "Avoid class not documented with AsDocs (Flex)",
        "href": "AIP/quality-rules/1003070",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003072,
        "name": "Avoid method not documented with AsDocs (Flex)",
        "href": "AIP/quality-rules/1003072",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003074,
        "name": "Cairngorm: Avoid modelLocator that is Bindable at a class level (Flex)",
        "href": "AIP/quality-rules/1003074",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003076,
        "name": "Avoid adding or removing displayable children from updateDisplayList (Flex specific) (Flex)",
        "href": "AIP/quality-rules/1003076",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003078,
        "name": "Avoid popup using dynamic filters (Flex)",
        "href": "AIP/quality-rules/1003078",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003080,
        "name": "Avoid complex constructor (Flex)",
        "href": "AIP/quality-rules/1003080",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003082,
        "name": "Avoid Instantiating a variable in a loop (Flex)",
        "href": "AIP/quality-rules/1003082",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003084,
        "name": "Avoid recursive StyleManager call (Flex)",
        "href": "AIP/quality-rules/1003084",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003086,
        "name": "Avoid empty catch statement (Flex)",
        "href": "AIP/quality-rules/1003086",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003088,
        "name": "Avoid calling Alert.show directly (Flex)",
        "href": "AIP/quality-rules/1003088",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003090,
        "name": "Avoid style block embedded in the MXML file (Flex)",
        "href": "AIP/quality-rules/1003090",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003092,
        "name": "Avoid embedded metadata in class where a stylesheet may be cleaner (Flex)",
        "href": "AIP/quality-rules/1003092",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003094,
        "name": "Avoid embedded metadata in script where a stylesheet may be cleaner (Flex)",
        "href": "AIP/quality-rules/1003094",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003096,
        "name": "Avoid non-const public static fields (Flex)",
        "href": "AIP/quality-rules/1003096",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003098,
        "name": "Avoid non-static constant fields (Flex)",
        "href": "AIP/quality-rules/1003098",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003100,
        "name": "Avoid protected fields in final class (Flex)",
        "href": "AIP/quality-rules/1003100",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003102,
        "name": "Protected static methods should be declared private (Flex)",
        "href": "AIP/quality-rules/1003102",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003104,
        "name": "Avoid Parsley metadata placed on inaccessible members. (Flex)",
        "href": "AIP/quality-rules/1003104",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003106,
        "name": "Avoid too many methods in class (Flex)",
        "href": "AIP/quality-rules/1003106",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003108,
        "name": "Avoid too many methods in script (Flex)",
        "href": "AIP/quality-rules/1003108",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003110,
        "name": "Avoid functions that are too long (Flex)",
        "href": "AIP/quality-rules/1003110",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003112,
        "name": "Avoid too many public fields or functions (Flex)",
        "href": "AIP/quality-rules/1003112",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003114,
        "name": "Avoid class with too many fields (Flex)",
        "href": "AIP/quality-rules/1003114",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003116,
        "name": "Avoid Flex Script with too many fields (Flex)",
        "href": "AIP/quality-rules/1003116",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003118,
        "name": "Avoid Value Objects with too many fields (Flex)",
        "href": "AIP/quality-rules/1003118",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003120,
        "name": "Cairngorm: Avoid ModelLocator not only accessible from the main application file (Flex)",
        "href": "AIP/quality-rules/1003120",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003122,
        "name": "Cairngorm: Avoid FrontController that adds all its commands within the Controller constructor (Flex)",
        "href": "AIP/quality-rules/1003122",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003124,
        "name": "Avoid empty if statements (Flex)",
        "href": "AIP/quality-rules/1003124",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003126,
        "name": "Avoid more than one return path (Flex)",
        "href": "AIP/quality-rules/1003126",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003128,
        "name": "Avoid use of with statement (Flex)",
        "href": "AIP/quality-rules/1003128",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003130,
        "name": "Avoid managed events without matching [Event] metadata (Flex)",
        "href": "AIP/quality-rules/1003130",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003132,
        "name": "Avoid switch statement with less than 3 cases (Flex)",
        "href": "AIP/quality-rules/1003132",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003134,
        "name": "Avoid identical cases in switch (Flex)",
        "href": "AIP/quality-rules/1003134",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003136,
        "name": "Avoid unit test that does not contain at least one assertion (Flex)",
        "href": "AIP/quality-rules/1003136",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003138,
        "name": "Avoid BindingUtils class (Flex)",
        "href": "AIP/quality-rules/1003138",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003140,
        "name": "Avoid use of ChangeWatcher class (Flex)",
        "href": "AIP/quality-rules/1003140",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003142,
        "name": "Cairngorm: Avoid CairngormEventDispatcher called explicitly (Flex)",
        "href": "AIP/quality-rules/1003142",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003144,
        "name": "Cairngorm: Avoid more than one reference of ModelLocator per class (Flex)",
        "href": "AIP/quality-rules/1003144",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003146,
        "name": "Avoid calling callLater explicitly (Flex specific) (Flex)",
        "href": "AIP/quality-rules/1003146",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003148,
        "name": "Avoid clone method not overridden in a custom event (Flex)",
        "href": "AIP/quality-rules/1003148",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003150,
        "name": "Avoid event dispatched from a constructor (Flex)",
        "href": "AIP/quality-rules/1003150",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003152,
        "name": "Avoid dispatching events using hard-coded strings (Flex)",
        "href": "AIP/quality-rules/1003152",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003154,
        "name": "Avoid listening to events using hard-coded strings (Flex)",
        "href": "AIP/quality-rules/1003154",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003156,
        "name": "Avoid partial source code delivery of application (Flex)",
        "href": "AIP/quality-rules/1003156",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003158,
        "name": "Avoid event without type specified (Flex)",
        "href": "AIP/quality-rules/1003158",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003160,
        "name": "Avoid conditions with hard-coded boolean values (Flex)",
        "href": "AIP/quality-rules/1003160",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003162,
        "name": "Avoid dynamic class (Flex)",
        "href": "AIP/quality-rules/1003162",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003164,
        "name": "Avoid dynamic (Object) type fields (Flex)",
        "href": "AIP/quality-rules/1003164",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003166,
        "name": "Avoid dynamic (Object) type variables (Flex)",
        "href": "AIP/quality-rules/1003166",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003168,
        "name": "Avoid using Object class in methods' parameters (Flex)",
        "href": "AIP/quality-rules/1003168",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003172,
        "name": "Avoid * and use strongly typed objects instead in fields (Flex)",
        "href": "AIP/quality-rules/1003172",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003174,
        "name": "Avoid * and use strongly typed objects instead in variables (Flex)",
        "href": "AIP/quality-rules/1003174",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003176,
        "name": "Avoid array-type field without ArrayElementType metadata (Flex)",
        "href": "AIP/quality-rules/1003176",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003178,
        "name": "Avoid incorrect message interceptor signature (Flex)",
        "href": "AIP/quality-rules/1003178",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003180,
        "name": "Avoid packages having artifacts with misplaced metadata (Flex)",
        "href": "AIP/quality-rules/1003180",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003182,
        "name": "Avoid classes having artifacts with misplaced metadata (Flex)",
        "href": "AIP/quality-rules/1003182",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003184,
        "name": "Avoid redundant type metadata argument for handler type (Flex)",
        "href": "AIP/quality-rules/1003184",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003186,
        "name": "Avoid redundant method metadata argument for handler (Flex)",
        "href": "AIP/quality-rules/1003186",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003188,
        "name": "Avoid packages having artifacts with unknown metadata attribute (Flex)",
        "href": "AIP/quality-rules/1003188",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003190,
        "name": "Avoid classes having artifacts with unknown metadata attribute (Flex)",
        "href": "AIP/quality-rules/1003190",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003192,
        "name": "Avoid globally bindable classes (Flex)",
        "href": "AIP/quality-rules/1003192",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003194,
        "name": "Avoid constructor with void return type specification (Flex)",
        "href": "AIP/quality-rules/1003194",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003196,
        "name": "Avoid switch statement without a default case (Flex)",
        "href": "AIP/quality-rules/1003196",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003198,
        "name": "Avoid MXML component with more than one entry point (Flex)",
        "href": "AIP/quality-rules/1003198",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003200,
        "name": "Avoid MXML component with more than two entry points (Flex)",
        "href": "AIP/quality-rules/1003200",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003202,
        "name": "Avoid public variables inside a custom event (Flex)",
        "href": "AIP/quality-rules/1003202",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1003204,
        "name": "Avoid script block that are too long (Flex)",
        "href": "AIP/quality-rules/1003204",
        "status": "renewed",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    }
]
