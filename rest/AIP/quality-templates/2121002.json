{
    "id": 2121002,
    "name": "Always enable authorization checks at function level for functions called on by APIs based with Spring Application",
    "href": "AIP/quality-templates/2121002",
    "isTemplate": true,
    "download": "https://github.com/CAST-Extend/Quality-Rule-Templates/raw/master/API5_Authorization%20Check%20at%20Method%20Level.CASTRule",
    "description": "The rule will raise a violation when it finds functions that are called by APIs to perform actions, if they do not implement any form of authorization check.",
    "output": "APIs calling functions that do not impose any authorization checks",
    "rationale": "Exploitation requires the attacker to send legitimate API calls to the API endpoint that they should not have access to. These endpoints might be exposed to anonymous users or regular, non-privileged users. It\u2019s easier to discover these flaws in APIs since APIs are more structured, and the way to access certain functions is more predictable (e.g., replacing the HTTP method from GET to PUT, or changing the \u201cusers\u201d string in the URL to \"admins\").\nWhen defining APIs inside controllers and the methods called on by APIs to perform certain tasks it is important to restrict the user(authenticated or otherwise) based on her role.",
    "reference": "https://github.com/OWASP/API-Security/blob/master/2019/en/src/0xa5-broken-function-level-authorization.md",
    "remediation": "Review your API endpoints against function level authorization flaws, while keeping in mind the business logic of the application and groups hierarchy.\nPut restrictions on actions like Delete, Put after reviewing the context thoroughly.",
    "total": "All APIs"
}
