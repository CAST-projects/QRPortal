[
    {
        "id": 678,
        "name": "Never throw an exception from a Destructor",
        "href": "AIP/quality-rules/678",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 2232,
        "name": "Pages should use error handling page",
        "href": "AIP/quality-rules/2232",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 2564,
        "name": "Use a single Error Handling Method",
        "href": "AIP/quality-rules/2564",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Visual Basic"
        ]
    },
    {
        "id": 3062,
        "name": "Use of error handling page",
        "href": "AIP/quality-rules/3062",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP"
        ]
    },
    {
        "id": 4696,
        "name": "Avoid using 'System.err' and 'System.out' within a try catch block",
        "href": "AIP/quality-rules/4696",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7542,
        "name": "Avoid using FOR ALL ENTRIES IN without emptiness check",
        "href": "AIP/quality-rules/7542",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7664,
        "name": "Avoid using FOR ALL ENTRIES IN without emptiness check on XXL Tables",
        "href": "AIP/quality-rules/7664",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7690,
        "name": "Avoid unchecked return code (SQLCODE) after EXEC SQL query",
        "href": "AIP/quality-rules/7690",
        "status": null,
        "critical": true,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 7788,
        "name": "Avoid empty catch blocks",
        "href": "AIP/quality-rules/7788",
        "status": null,
        "critical": true,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "ABAP",
            "C#",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7824,
        "name": "Avoid directly throwing instance of Exception class",
        "href": "AIP/quality-rules/7824",
        "status": null,
        "critical": true,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8000,
        "name": "Avoid 'catch-all' statement",
        "href": "AIP/quality-rules/8000",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8012,
        "name": "Avoid unchecked return code (SY-SUBRC) after opening and reading dataset",
        "href": "AIP/quality-rules/8012",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8014,
        "name": "Avoid unchecked return code (SY-SUBRC) after AUTHORITY-CHECK",
        "href": "AIP/quality-rules/8014",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8120,
        "name": "Avoid using CALL FUNCTION without error handling",
        "href": "AIP/quality-rules/8120",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8122,
        "name": "Avoid using CALL METHOD without error handling",
        "href": "AIP/quality-rules/8122",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8160,
        "name": "Check PCB status code after DLI queries",
        "href": "AIP/quality-rules/8160",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 8162,
        "name": "CICS return code should be checked",
        "href": "AIP/quality-rules/8162",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 1001152,
        "name": "Avoid Programs having files declared as RECORD INPUT or RECORD UPDATE and not having  the ON EOF or ON ENDFILE statement (PL1)",
        "href": "AIP/quality-rules/1001152",
        "status": null,
        "critical": false,
        "technologyNames": [
            "PLI"
        ]
    },
    {
        "id": 1001154,
        "name": "Avoid Programs having files declared and not having the ON UNDF or ON UNDEFINEDFILE statement except SYSPRINT and SYSIN (PL1)",
        "href": "AIP/quality-rules/1001154",
        "status": null,
        "critical": false,
        "technologyNames": [
            "PLI"
        ]
    },
    {
        "id": 1001156,
        "name": "Avoid PL1 Errors Blocks having ON ERROR SYSTEM blocks and not containing and displaying ONCODE and ONLOC (PL1)",
        "href": "AIP/quality-rules/1001156",
        "status": null,
        "critical": false,
        "technologyNames": [
            "PLI"
        ]
    },
    {
        "id": 1001158,
        "name": "Avoid Functions and Procedures not testing the SQLCODE return code after each SQL statement (PL1)",
        "href": "AIP/quality-rules/1001158",
        "status": null,
        "critical": true,
        "technologyNames": [
            "PLI"
        ]
    },
    {
        "id": 1002282,
        "name": "All ALLOCATE statements in Fortran-90 Programs must use the return code STAT (FORTRAN)",
        "href": "AIP/quality-rules/1002282",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Fortran"
        ]
    },
    {
        "id": 1002284,
        "name": "All ALLOCATE statements in Fortran-90 Subroutines must use the return code STAT (FORTRAN)",
        "href": "AIP/quality-rules/1002284",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Fortran"
        ]
    },
    {
        "id": 1002286,
        "name": "All ALLOCATE statements in Fortran-90 Functions must use the return code STAT (FORTRAN)",
        "href": "AIP/quality-rules/1002286",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Fortran"
        ]
    },
    {
        "id": 1002288,
        "name": "All ALLOCATE statements in Fortran-90 Modules must use the return code STAT (FORTRAN)",
        "href": "AIP/quality-rules/1002288",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Fortran"
        ]
    },
    {
        "id": 1003086,
        "name": "Avoid empty catch statement (Flex)",
        "href": "AIP/quality-rules/1003086",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1005070,
        "name": "Avoid Program calls without checking the return code (EGL)",
        "href": "AIP/quality-rules/1005070",
        "status": null,
        "critical": true,
        "technologyNames": [
            "EGL"
        ]
    },
    {
        "id": 1007122,
        "name": "Avoid empty catch blocks (PHP)",
        "href": "AIP/quality-rules/1007122",
        "status": null,
        "critical": true,
        "technologyNames": [
            "PHP"
        ]
    },
    {
        "id": 1007206,
        "name": "Avoid using @error suppression (PHP)",
        "href": "AIP/quality-rules/1007206",
        "status": null,
        "critical": true,
        "technologyNames": [
            "PHP"
        ]
    },
    {
        "id": 1020068,
        "name": "Avoid return statement in finally block (Javascript)",
        "href": "AIP/quality-rules/1020068",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020102,
        "name": "Always use JSON.parse & JSON.stringify with try/catch block (Javascript)",
        "href": "AIP/quality-rules/1020102",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020340,
        "name": "Always implement the success/error/complete or done/fail/always callbacks when using jQuery ajax call",
        "href": "AIP/quality-rules/1020340",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020342,
        "name": "Avoid empty jQuery ajax error/fail blocks",
        "href": "AIP/quality-rules/1020342",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020452,
        "name": "Avoid empty componentDidCatch blocks",
        "href": "AIP/quality-rules/1020452",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020540,
        "name": "Avoid using $http success and error function",
        "href": "AIP/quality-rules/1020540",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020700,
        "name": "Avoid the lack of error handling in the Node.js callbacks",
        "href": "AIP/quality-rules/1020700",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020702,
        "name": "Avoid using nodejs process.exit()",
        "href": "AIP/quality-rules/1020702",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020802,
        "name": "Avoid having errors without throwing them ",
        "href": "AIP/quality-rules/1020802",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020822,
        "name": "Always provide error callbacks when subscribing to HttpClient observables",
        "href": "AIP/quality-rules/1020822",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020850,
        "name": "Always handle errors when using ajax with RxJS",
        "href": "AIP/quality-rules/1020850",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020858,
        "name": "Avoid empty componentDidCatch blocks (Typescript)",
        "href": "AIP/quality-rules/1020858",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020872,
        "name": "Always use JSON.parse & JSON.stringify with try/catch block (TypeScript)",
        "href": "AIP/quality-rules/1020872",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1021018,
        "name": "Avoid catch-all except blocks with empty handlers",
        "href": "AIP/quality-rules/1021018",
        "status": null,
        "critical": true,
        "technologyNames": [
            "Python"
        ]
    },
    {
        "id": 1021024,
        "name": "Avoid return statement in finally block",
        "href": "AIP/quality-rules/1021024",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Python"
        ]
    },
    {
        "id": 1024034,
        "name": "Always check all the BiometricPrompt error options in the onAuthenticationError method",
        "href": "AIP/quality-rules/1024034",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1024036,
        "name": "Always check all the BiometricPrompt acquired options in the onAuthenticationSucceeded method ",
        "href": "AIP/quality-rules/1024036",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1050020,
        "name": "Avoid return statement in @finally block",
        "href": "AIP/quality-rules/1050020",
        "status": null,
        "critical": true,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050030,
        "name": "Ensure the Objective-C error condition check is not fragile",
        "href": "AIP/quality-rules/1050030",
        "status": null,
        "critical": true,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050032,
        "name": "Ensure that LAContext evaluatePolicy: reply block success is checked (Objective-C)",
        "href": "AIP/quality-rules/1050032",
        "status": null,
        "critical": false,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050062,
        "name": "Avoid empty catch blocks (Objective-C)",
        "href": "AIP/quality-rules/1050062",
        "status": null,
        "critical": true,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1055034,
        "name": "Avoid empty generic catch blocks (Swift)",
        "href": "AIP/quality-rules/1055034",
        "status": null,
        "critical": true,
        "technologyNames": [
            "Swift"
        ]
    },
    {
        "id": 1060020,
        "name": "Avoid empty catch blocks for methods with high fan-in",
        "href": "AIP/quality-rules/1060020",
        "status": null,
        "critical": true,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "ABAP",
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 1065026,
        "name": "Ensure exception objects are always caught by reference (C++)",
        "href": "AIP/quality-rules/1065026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1101040,
        "name": "Avoid empty catch blocks (SQL)",
        "href": "AIP/quality-rules/1101040",
        "status": null,
        "critical": true,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    }
]
