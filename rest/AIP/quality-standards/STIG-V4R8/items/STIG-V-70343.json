{
    "id": "STIG-V-70343",
    "name": "A Software Configuration Management (SCM) plan describing the configuration control and change management process of application objects developed by the organization and the roles and responsibilities of the organization must be created and maintained.",
    "href": "AIP/quality-standards/STIG-V4R8/items/STIG-V-70343",
    "url": null,
    "description": "Software Configuration Management (SCM) is very important in tracking code releases, baselines, and managing access to the configuration management repository. The SCM plan identifies what should be under configuration management control.\n\nWithout an SCM plan that addresses code security issues, code releases can be tracked and vulnerabilities can be inserted intentionally or unintentionally into the code base of the application.\n\nThis requirement is intended to be applied to application developers or organizations responsible for code management or who have and operate an application configuration management repository (CMR).\n\nThe SCM plan identifies all objects created during the development process subject to configuration control.\n\nThe SCM plan maintains procedures for identifying individual application components, as well as, entire application releases during all phases of the software development lifecycle.\n\nThe SCM plan identifies and tracks all actions and changes resulting from a change request from initiation to release.\n\nThe SCM plan contains procedures to identify, document, review, and authorize any change requests to the application.\n\nThe SCM plan defines the responsibilities, the actions to be performed, the tools, techniques and methodologies, and defines an initial set of baselined software components.\n\nThe SCM plan objects have security classifications labels.\n\nThe SCM plan identifies tools and version numbers used in the software development lifecycle.\n\nThe SCM plan identifies mechanisms for controlled access of simultaneous individuals updating the same application component.\n\nThe SCM plan assures only authorized changes by authorized persons are possible.\n\nThe SCM plan identifies mechanisms to control access and audit changes between different versions of objects subject to configuration control.\n\nThe SCM plan identifies mechanisms to track and audit all modifications of objects under configuration control.  Audits include the originator and date and time of the modification.\n\nThe SCM plan should contain the following:\n\n- Description of the configuration control and change management process\n- Types of objects developed\n- Roles and responsibilities of the organization\n\nThe SCM plan should also contain the following:\n\n- Defined responsibilities\n- Actions to be performed\n- Tools used in the process\n- Techniques and methodologies\n- Initial set of baselined software components\n\nThe SCM plan should identify all objects that are under configuration management control.\n\nThe SCM plan should identify third-party tools and respective version numbers.\n\nThe SCM plan should identify mechanisms for controlled access of individuals simultaneously updating the same application component.\n\nThe SCM plan assures only authorized changes by authorized persons are allowed.\n\nThe SCM plan should identify mechanisms to control access and audit changes between different versions of objects subject to configuration control.\n\nThe SCM plan should have procedures for label versions of application components and application builds under configuration management control.\n\nThe configuration management repository (CMR) should track change requests from beginning to end.\n\nThe configuration management repository (CMR) should authorize change requests to the application.\n \nThe configuration management repository (CMR) should contain security classification labels for code and documentation in the repository. Classification labels are not applicable to unclassified systems.\n\nThe configuration management repository (CMR) should monitor all objects under CMR control for auditing.",
    "count": 0,
    "qualityRules": null
}
