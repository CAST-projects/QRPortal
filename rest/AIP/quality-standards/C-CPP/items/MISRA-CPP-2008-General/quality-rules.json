[
    {
        "id": 1074,
        "name": "Avoid using signals management Functions",
        "href": "AIP/quality-rules/1074",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8010,
        "name": "Do not overload the ampersand, comma, logical AND or logical OR operators",
        "href": "AIP/quality-rules/8010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8028,
        "name": "Avoid missing default in switch statements",
        "href": "AIP/quality-rules/8028",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "Objective-C",
            "VB.NET"
        ]
    },
    {
        "id": 8032,
        "name": "Avoid using a break statement in 'for' loops",
        "href": "AIP/quality-rules/8032",
        "status": null,
        "critical": false,
        "technologyNames": [
            ".NET (Legacy Analyzer)",
            "C",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8060,
        "name": "A pointer to a base Class shall only be cast to a pointer to a derived Class by means of 'dynamic_cast'",
        "href": "AIP/quality-rules/8060",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8066,
        "name": "Avoid using 'using namespace' or 'using' declarations in header files",
        "href": "AIP/quality-rules/8066",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8078,
        "name": "Casting from pointer to base Class to pointer to derived Class should be done through 'dynamic_cast' or 'static_cast'",
        "href": "AIP/quality-rules/8078",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065002,
        "name": "\"enum\" members other than the first one should not be explicitly initialized unless all members are explicitly initialized.",
        "href": "AIP/quality-rules/1065002",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065040,
        "name": "Avoid anonymous namespaces in header files (C++)",
        "href": "AIP/quality-rules/1065040",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065042,
        "name": "Avoid non-void return type function without an explicit return of an expression (C/C++)",
        "href": "AIP/quality-rules/1065042",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1065044,
        "name": "Avoid other than main(), namespace declarations and extern \"C\" declarations in the global namespace (C/C++)",
        "href": "AIP/quality-rules/1065044",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    }
]
