[
    {
        "id": 678,
        "name": "Never throw an exception from a Destructor",
        "href": "AIP/quality-rules/678",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1588,
        "name": "Use WHEN OTHERS in exception management",
        "href": "AIP/quality-rules/1588",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Forms",
            "PL/SQL"
        ]
    },
    {
        "id": 2232,
        "name": "Pages should use error handling page",
        "href": "AIP/quality-rules/2232",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 2564,
        "name": "Use a single Error Handling Method",
        "href": "AIP/quality-rules/2564",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Visual Basic"
        ]
    },
    {
        "id": 2590,
        "name": "Avoid using \"On error Resume Next\" in the Class event terminate",
        "href": "AIP/quality-rules/2590",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Visual Basic"
        ]
    },
    {
        "id": 3062,
        "name": "Use of error handling page",
        "href": "AIP/quality-rules/3062",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ASP"
        ]
    },
    {
        "id": 4064,
        "name": "Avoid Procedures using an Insert, Update, Delete, Create Table or Select without including error management",
        "href": "AIP/quality-rules/4064",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Microsoft T-SQL",
            "SQL Server",
            "Sybase T-SQL"
        ]
    },
    {
        "id": 4066,
        "name": "Avoid Stored Procedures not returning a status value",
        "href": "AIP/quality-rules/4066",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Microsoft T-SQL",
            "SQL Server",
            "Sybase T-SQL"
        ]
    },
    {
        "id": 4604,
        "name": "Avoid using 'java.lang.Error'",
        "href": "AIP/quality-rules/4604",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4652,
        "name": "Avoid direct Class inheritance from java.lang.Throwable",
        "href": "AIP/quality-rules/4652",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4656,
        "name": "Avoid declaring throwing an exception and not throwing it",
        "href": "AIP/quality-rules/4656",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4676,
        "name": "Methods must have appropriate JavaDoc @throws tags",
        "href": "AIP/quality-rules/4676",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4678,
        "name": "Methods must have appropriate JavaDoc @exception tags",
        "href": "AIP/quality-rules/4678",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4696,
        "name": "Avoid using 'System.err' and 'System.out' within a try catch block",
        "href": "AIP/quality-rules/4696",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4702,
        "name": "Avoid using 'Throwable.printStackTrace()' outside a try catch block",
        "href": "AIP/quality-rules/4702",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 5050,
        "name": "Avoid using HANDLE CONDITION",
        "href": "AIP/quality-rules/5050",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 5052,
        "name": "Avoid using IGNORE CONDITION",
        "href": "AIP/quality-rules/5052",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 5054,
        "name": "Avoid using HANDLE ABEND",
        "href": "AIP/quality-rules/5054",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 5092,
        "name": "Include a WHEN OTHER clause when using EVALUATE",
        "href": "AIP/quality-rules/5092",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 7518,
        "name": "Avoid missing WHEN OTHERS in CASE statements",
        "href": "AIP/quality-rules/7518",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7520,
        "name": "Avoid unchecked return code (SY-SUBRC) after OPEN SQL or READ statement",
        "href": "AIP/quality-rules/7520",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7542,
        "name": "Avoid using FOR ALL ENTRIES IN without emptiness check",
        "href": "AIP/quality-rules/7542",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7640,
        "name": "Avoid catch blocks with assertion",
        "href": "AIP/quality-rules/7640",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7652,
        "name": "Avoid throwing an exception in a catch block without chaining it",
        "href": "AIP/quality-rules/7652",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7664,
        "name": "Avoid using FOR ALL ENTRIES IN without emptiness check on XXL Tables",
        "href": "AIP/quality-rules/7664",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7690,
        "name": "Avoid unchecked return code (SQLCODE) after EXEC SQL query",
        "href": "AIP/quality-rules/7690",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 7698,
        "name": "Files should be declared with a FILE-STATUS",
        "href": "AIP/quality-rules/7698",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 7756,
        "name": "Avoid using READ statement without AT END clause or INVALID KEY clause",
        "href": "AIP/quality-rules/7756",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 7782,
        "name": "Avoid empty finally blocks",
        "href": "AIP/quality-rules/7782",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ASP",
            "C#",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7788,
        "name": "Avoid empty catch blocks",
        "href": "AIP/quality-rules/7788",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ABAP",
            "C#",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7824,
        "name": "Avoid directly throwing instance of Exception class",
        "href": "AIP/quality-rules/7824",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7850,
        "name": "Avoid raising an exception in a Web Dynpro Supply Function or in a Method called by a Supply Function",
        "href": "AIP/quality-rules/7850",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7862,
        "name": "Avoid catching an exception of type Exception, RuntimeException, or Throwable",
        "href": "AIP/quality-rules/7862",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7910,
        "name": "Never exit a finally block with a return, break, continue, or throw",
        "href": "AIP/quality-rules/7910",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7956,
        "name": "Avoid indirect exception handling inside loops",
        "href": "AIP/quality-rules/7956",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8000,
        "name": "Avoid 'catch-all' statement",
        "href": "AIP/quality-rules/8000",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8012,
        "name": "Avoid unchecked return code (SY-SUBRC) after opening and reading dataset",
        "href": "AIP/quality-rules/8012",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8014,
        "name": "Avoid unchecked return code (SY-SUBRC) after AUTHORITY-CHECK",
        "href": "AIP/quality-rules/8014",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8028,
        "name": "Avoid missing default in switch statements",
        "href": "AIP/quality-rules/8028",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "Objective-C",
            "VB.NET"
        ]
    },
    {
        "id": 8030,
        "name": "Check alphanumeric data before moving it into numeric data",
        "href": "AIP/quality-rules/8030",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 8112,
        "name": "Avoid improper processing of the execution status of data handling operations",
        "href": "AIP/quality-rules/8112",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8120,
        "name": "Avoid using CALL FUNCTION without error handling",
        "href": "AIP/quality-rules/8120",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8122,
        "name": "Avoid using CALL METHOD without error handling",
        "href": "AIP/quality-rules/8122",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8160,
        "name": "Check PCB status code after DLI queries",
        "href": "AIP/quality-rules/8160",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 8162,
        "name": "CICS return code should be checked",
        "href": "AIP/quality-rules/8162",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 8412,
        "name": "\"CX_ROOT\" should not be used in TRY .. CATCH.. ENDTRY block",
        "href": "AIP/quality-rules/8412",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 1019006,
        "name": "Avoid wrong suppressAuditFailure and serviceAuthorizationAuditLevel parameters when enabling WCF service security audit feature",
        "href": "AIP/quality-rules/1019006",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "WCF"
        ]
    },
    {
        "id": 1020068,
        "name": "Avoid return statement in finally block (Javascript)",
        "href": "AIP/quality-rules/1020068",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020102,
        "name": "Always use JSON.parse & JSON.stringify with try/catch block (Javascript)",
        "href": "AIP/quality-rules/1020102",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020340,
        "name": "Always implement the success/error/complete or done/fail/always callbacks when using jQuery ajax call",
        "href": "AIP/quality-rules/1020340",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020342,
        "name": "Avoid empty jQuery ajax error/fail blocks",
        "href": "AIP/quality-rules/1020342",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020540,
        "name": "Avoid using $http success and error function",
        "href": "AIP/quality-rules/1020540",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1024032,
        "name": "Always manage the BiometricPrompt onAuthenticationFailed method",
        "href": "AIP/quality-rules/1024032",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1024034,
        "name": "Always check all the BiometricPrompt error options in the onAuthenticationError method",
        "href": "AIP/quality-rules/1024034",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1024036,
        "name": "Always check all the BiometricPrompt acquired options in the onAuthenticationSucceeded method ",
        "href": "AIP/quality-rules/1024036",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1024038,
        "name": "Avoid processing Google Sign In Client without catching error",
        "href": "AIP/quality-rules/1024038",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1024044,
        "name": "Always check the device supports Biometric capability before using BiometricPrompt API",
        "href": "AIP/quality-rules/1024044",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1027016,
        "name": "Avoid throwing exceptions in destructors",
        "href": "AIP/quality-rules/1027016",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027018,
        "name": "Avoid throwing exceptions from finally block",
        "href": "AIP/quality-rules/1027018",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027034,
        "name": "Never catch NullReferenceException",
        "href": "AIP/quality-rules/1027034",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027036,
        "name": "Avoid rethrowing exception explicitly",
        "href": "AIP/quality-rules/1027036",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027048,
        "name": "Avoid returning null from non-async Task/Task<T> method",
        "href": "AIP/quality-rules/1027048",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027050,
        "name": "Avoid throwing ArgumentException from yielding method.",
        "href": "AIP/quality-rules/1027050",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027066,
        "name": "Avoid throwing exception from property getters",
        "href": "AIP/quality-rules/1027066",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027068,
        "name": "Avoid returning null from ToString()",
        "href": "AIP/quality-rules/1027068",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027088,
        "name": "Avoid non-public custom exception types",
        "href": "AIP/quality-rules/1027088",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027090,
        "name": "Avoid improper instantiation of argument exceptions",
        "href": "AIP/quality-rules/1027090",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1027096,
        "name": "Avoid raising exceptions in unexpected location",
        "href": "AIP/quality-rules/1027096",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1043076,
        "name": "Avoid disabling custom errors mode to prevent exposure of exceptions and error data",
        "href": "AIP/quality-rules/1043076",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ASP.NET",
            "C#"
        ]
    },
    {
        "id": 1050020,
        "name": "Avoid return statement in @finally block",
        "href": "AIP/quality-rules/1050020",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050030,
        "name": "Ensure the Objective-C error condition check is not fragile",
        "href": "AIP/quality-rules/1050030",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050032,
        "name": "Ensure that LAContext evaluatePolicy: reply block success is checked (Objective-C)",
        "href": "AIP/quality-rules/1050032",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050052,
        "name": "Avoid empty finally block (Objective-C)",
        "href": "AIP/quality-rules/1050052",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050062,
        "name": "Avoid empty catch blocks (Objective-C)",
        "href": "AIP/quality-rules/1050062",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1065026,
        "name": "Ensure exception objects are always caught by reference (C++)",
        "href": "AIP/quality-rules/1065026",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065056,
        "name": "Avoid throwing exceptions outside of main()",
        "href": "AIP/quality-rules/1065056",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065058,
        "name": "Ensure that there is at least one exception handler to catch-all otherwise unhandled exceptions in the main function(C++)",
        "href": "AIP/quality-rules/1065058",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065082,
        "name": "Handlers of a function-try-block implementation of a class constructor ordestructor shall not reference non-static members from this class or its bases.",
        "href": "AIP/quality-rules/1065082",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065098,
        "name": "Avoid delete operators to exit with an exception.",
        "href": "AIP/quality-rules/1065098",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065100,
        "name": "Avoid move constructor and move assignment operator to exit with an exception",
        "href": "AIP/quality-rules/1065100",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "C++"
        ]
    }
]
