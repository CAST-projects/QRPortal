[
    {
        "id": 2232,
        "name": "Pages should use error handling page",
        "href": "AIP/quality-rules/2232",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 2564,
        "name": "Use a single Error Handling Method",
        "href": "AIP/quality-rules/2564",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Visual Basic"
        ]
    },
    {
        "id": 3062,
        "name": "Use of error handling page",
        "href": "AIP/quality-rules/3062",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ASP"
        ]
    },
    {
        "id": 7520,
        "name": "Avoid unchecked return code (SY-SUBRC) after OPEN SQL or READ statement",
        "href": "AIP/quality-rules/7520",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7542,
        "name": "Avoid using FOR ALL ENTRIES IN without emptiness check",
        "href": "AIP/quality-rules/7542",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7664,
        "name": "Avoid using FOR ALL ENTRIES IN without emptiness check on XXL Tables",
        "href": "AIP/quality-rules/7664",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 7690,
        "name": "Avoid unchecked return code (SQLCODE) after EXEC SQL query",
        "href": "AIP/quality-rules/7690",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 7788,
        "name": "Avoid empty catch blocks",
        "href": "AIP/quality-rules/7788",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ABAP",
            "C#",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8012,
        "name": "Avoid unchecked return code (SY-SUBRC) after opening and reading dataset",
        "href": "AIP/quality-rules/8012",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8014,
        "name": "Avoid unchecked return code (SY-SUBRC) after AUTHORITY-CHECK",
        "href": "AIP/quality-rules/8014",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8120,
        "name": "Avoid using CALL FUNCTION without error handling",
        "href": "AIP/quality-rules/8120",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8122,
        "name": "Avoid using CALL METHOD without error handling",
        "href": "AIP/quality-rules/8122",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "ABAP"
        ]
    },
    {
        "id": 8160,
        "name": "Check PCB status code after DLI queries",
        "href": "AIP/quality-rules/8160",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 8162,
        "name": "CICS return code should be checked",
        "href": "AIP/quality-rules/8162",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Cobol"
        ]
    },
    {
        "id": 1001158,
        "name": "Avoid Functions and Procedures not testing the SQLCODE return code after each SQL statement (PL1)",
        "href": "AIP/quality-rules/1001158",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "PLI"
        ]
    },
    {
        "id": 1003086,
        "name": "Avoid empty catch statement (Flex)",
        "href": "AIP/quality-rules/1003086",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Flex"
        ]
    },
    {
        "id": 1005070,
        "name": "Avoid Program calls without checking the return code (EGL)",
        "href": "AIP/quality-rules/1005070",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "EGL"
        ]
    },
    {
        "id": 1007122,
        "name": "Avoid empty catch blocks (PHP)",
        "href": "AIP/quality-rules/1007122",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "PHP"
        ]
    },
    {
        "id": 1020340,
        "name": "Always implement the success/error/complete or done/fail/always callbacks when using jQuery ajax call",
        "href": "AIP/quality-rules/1020340",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020342,
        "name": "Avoid empty jQuery ajax error/fail blocks",
        "href": "AIP/quality-rules/1020342",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020452,
        "name": "Avoid empty componentDidCatch blocks",
        "href": "AIP/quality-rules/1020452",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020700,
        "name": "Avoid the lack of error handling in the Node.js callbacks",
        "href": "AIP/quality-rules/1020700",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020822,
        "name": "Always provide error callbacks when subscribing to HttpClient observables",
        "href": "AIP/quality-rules/1020822",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020858,
        "name": "Avoid empty componentDidCatch blocks (Typescript)",
        "href": "AIP/quality-rules/1020858",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020874,
        "name": "Avoid the lack of error handling in the Node.js callbacks (TypeScript)",
        "href": "AIP/quality-rules/1020874",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1021018,
        "name": "Avoid catch-all except blocks with empty handlers",
        "href": "AIP/quality-rules/1021018",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Python"
        ]
    },
    {
        "id": 1024034,
        "name": "Always check all the BiometricPrompt error options in the onAuthenticationError method",
        "href": "AIP/quality-rules/1024034",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1024036,
        "name": "Always check all the BiometricPrompt acquired options in the onAuthenticationSucceeded method ",
        "href": "AIP/quality-rules/1024036",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1050030,
        "name": "Ensure the Objective-C error condition check is not fragile",
        "href": "AIP/quality-rules/1050030",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050032,
        "name": "Ensure that LAContext evaluatePolicy: reply block success is checked (Objective-C)",
        "href": "AIP/quality-rules/1050032",
        "critical": false,
        "severity": 10,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1050062,
        "name": "Avoid empty catch blocks (Objective-C)",
        "href": "AIP/quality-rules/1050062",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Objective-C"
        ]
    },
    {
        "id": 1055034,
        "name": "Avoid empty generic catch blocks (Swift)",
        "href": "AIP/quality-rules/1055034",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "Swift"
        ]
    },
    {
        "id": 1060020,
        "name": "Avoid empty catch blocks for methods with high fan-in",
        "href": "AIP/quality-rules/1060020",
        "critical": true,
        "severity": 30,
        "technologyNames": [
            "ABAP",
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 1101040,
        "name": "Avoid empty catch blocks (SQL)",
        "href": "AIP/quality-rules/1101040",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "SQL"
        ]
    },
    {
        "id": 1101092,
        "name": "Avoid Procedures using an Insert, Update, Delete, Create Table or Select without including error management (SQL)",
        "href": "AIP/quality-rules/1101092",
        "critical": true,
        "severity": 20,
        "technologyNames": [
            "SQL"
        ]
    }
]
