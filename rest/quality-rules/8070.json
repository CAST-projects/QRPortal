{
    "id": 8070,
    "type": "quality-rule",
    "name": "Do not alter a control variable in the body of a 'for' statement",
    "href": "quality-rules/8070.json",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Loop control variable",
    "description": "This rule searches for C functions, C++ methods, constructors, and destructors that contain 'for' bodies in which a control variable is altered.\nWe consider a variable as altered when we assign it a new value, or when it is passed as a non-const reference to a function (including calling a non-const member function on the variable if it is of class type).",
    "output": "Associated to each C function, C++ method, constructor and destructor with violations, the Quality Rule provides:\n- loop control variable\n- Bookmarks for violation patterns found in source code:\n  - control variable alteration",
    "rationale": "Updating the loop iterator in the 'for' body makes the logic difficult to understand, can decrease the maintainability, and then be error-prone practice.",
    "reference": "High Integrity C++ Coding Standard Manual",
    "remediation": "Review the logic of the loop management to avoid altering the iterator in the 'for' header and body.",
    "total": "Number of C functions, C++ methods, constructors, and destructors",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness"
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "technologies/-2.json"
        },
        {
            "id": -3,
            "name": "C++",
            "href": "technologies/-3.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
