{
    "id": 1002296,
    "type": "quality-rule",
    "name": "Avoid using complex Allocates in Fortran 90 Modules (FORTRAN)",
    "href": "quality-rules/1002296.json",
    "critical": false,
    "maxWeight": 1,
    "description": "The number of complex Allocate Statements are reported, which is defined as using a single Allocate statement to allocate multiple variables to memory. Example of such a complex allocate statement: \n\nallocate(test_cast(n),test_cast2(n),stat=cast_stat)",
    "rationale": "Using such a statement reduces the readability and understandability. It becomes difficult to track what variables have been allocated and deallocated.",
    "remediation": "Use a single allocate for a single variable.",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness",
            "weight": 1,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1006000,
            "name": "Fortran",
            "href": "technologies/1006000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
