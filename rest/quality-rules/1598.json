{
    "id": 1598,
    "type": "quality-rule",
    "name": "Avoid Rule HINT  /*+ rule */ or --+ rule in PL/SQL code",
    "href": "quality-rules/1598.json",
    "critical": false,
    "maxWeight": 8,
    "associatedValueName": "Associated Value",
    "description": "Oracle hints are optimizer directives that are used in SQL debugging to change the default execution plan for SQL.  One of them is the RULE hint. it force the optimizer to use rule based optimizer mode (RBO mode) instead of the default mode (CBO mode).  RBO is a simple set of heuristics, and has many limitations. The RULE hint explicitly chooses rule-based optimization for a statement block. It also makes the optimizer ignore other hints specified for the statement block",
    "output": "This report lists all functions,  procedures, triggers, views, cursors and package procedures and functions  with queries using the \"RULE\" hint.\n\nIt provides the following information:\n- object name,\n- object  full name",
    "rationale": "CBO / RBO optimization mode decide on an execution plan based on cost OR set of rules The rule based Optimizer (RBO) mode is deprecated since Oracle 9iR2. By the way the functionality is still present but no new functionality has been included in it and it is no longer supported by Oracle. It is only present to provide backwards compatibility during the migration to the query optimizer (Cost Based Optimizer). It should not be present in production code\n\nIn Oracle 9i, RBO was replaced by Cost Based Optimizer or CBO. CBO uses statistics in the dictionary or dynamically samples You should have migrated to CBO at that time, as CBO, even without statistics usually generates better execution plans.\n\nThe solution is you remove the RULE hint everywhere and start testing code with optimizer defualt mode (CBO  mode)",
    "remediation": "You should always carefully research any  hints and try to delete them before applying in production code. Ensure that the queries perform well without RULE hint. One solution could be:  Once the SQL has been optimized by adding the hint, the Oracle professional will adjust schema statistics (using dbms_stats) to replicate the execution plan without the hint.",
    "remediationSample": "Select  a,b,c from table1;",
    "sample": "Oracle SQL rule hint:\n\nSelect /*+ RULE */ a,b,c from table1;",
    "total": "Number of artifacts (only those that might have a select clause)",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "business-criteria/60014.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": -10,
            "name": "Forms",
            "href": "technologies/-10.json"
        },
        {
            "id": 139287,
            "name": "PL/SQL",
            "href": "technologies/139287.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
