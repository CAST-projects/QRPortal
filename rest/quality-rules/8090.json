{
    "id": 8090,
    "type": "quality-rule",
    "name": "Avoid using NaN to test the result of an expression",
    "href": "quality-rules/8090.json",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Associated Value",
    "description": "This rule searches all the methods and functions using Doble.NaN to test if the result of an expression is a number.",
    "output": "This report lists all the methods and functions using Doble.NaN to test if the result of an expression is a number.\n\nIt provides following information: \n- Method name",
    "rationale": "Using Double.NaN , which represents not-a-number, can produce sometimes unexpected results.  In the source code any expression that tests equality between a value and Double.NaN always returns false. Any expression that tests inequality between a value and Double.NaN always returns true.",
    "reference": "http://msdn.microsoft.com/en-us/library/bb264491.aspx",
    "remediation": "Instead of using Double.NaN, try and  use SingleIsNan(Single) or DoubleIsNan(Double) to test the value.",
    "remediationSample": "using System;\n\nnamespace UsageLibrary\n{\n   class NaNTests\n   {\n      static double zero;\n\n      static void Main()\n      {\n         Console.WriteLine( double.IsNaN(0/zero) );\n      }\n   }\n}",
    "sample": "using System;\n\nnamespace UsageLibrary\n{\n   class NaNTests\n   {\n      static double zero;\n\n      static void Main()\n      {\n         Console.WriteLine( 0/zero == double.NaN );\n         Console.WriteLine( 0/zero != double.NaN );\n      }\n   }\n}",
    "total": "Number of Methods and Functions",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "technologies/138383.json"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "technologies/138385.json"
        },
        {
            "id": 141901,
            "name": ".NET (Legacy Analyzer)",
            "href": "technologies/141901.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
