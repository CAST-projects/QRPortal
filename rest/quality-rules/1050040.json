{
    "id": 1050040,
    "type": "quality-rule",
    "name": "Avoid using SecTransform API",
    "href": "quality-rules/1050040.json",
    "critical": true,
    "description": "The SecTransform API must not be used for Security are deprecated and must not be used within an iOS application. This rule is compliant with OWASP M5 2016 and with CISQ-OMG ASCSM-CWE-327 recommendations.",
    "output": "This report lists all uses of SecTransform functions like:\n- SecTransformCreateReadTransformWithReadStream\n- SecTransformRef\n- SecTransformGetTypeID\n- SecEncodeTransformCreate\n- SecDecodeTransformCreate\n- SecEncryptTransformCreate\n- SecDecryptTransformCreate\n- SecEncryptTransformGetTypeID\n- SecDecryptTransformGetTypeID\n- SecSignTransformCreate\n- SecVerifyTransformCreate\n- SecDigestTransformCreate\n- SecDigestTransformGetTypeID\n- SecTransformCreate\n- SecTransformRegister\n- SecTransformCreateFP\n- SecTransformInstanceBlock\n- SecTransformImplementationRef\n- SecTransformCreateGroupTransform\n- SecTransformFindByName\n- SecGroupTransformRef\n- SecGroupTransformGetTypeID\n- SecTransformSetAttribute\n- SecTransformGetAttribute\n- SecTransformCustomSetAttribute\n- SecTransformCustomGetAttribute\n- SecTransformPushbackAttribute\n- SecTransformAttributeRef\n- SecTransformStringOrAttributeRef\n- SecTransformMetaAttributeType\n- SecTransformSetDataAction\n- SecTransformSetAttributeAction\n- SecTransformSetTransformAction\n- SecTransformActionBlock\n- SecTransformAttributeActionBlock\n- SecTransformDataBlock\n- SecTransformConnectTransforms\n- SecTransformExecute\n- SecTransformExecuteAsync\n- SecTransformNoData\n- SecTransformCopyExternalRepresentation\n- SecTransformCreateFromExternalRepresentation \nIt provides the following information: \nObject full name, number of violations",
    "rationale": "Mobile apps that communicate over the Internet often fail to properly implement SSL/TLS, if they implement it at all. These failures could leave users\u2019 communications open to interception and even session hijacking. Using SSL/TLS properly involves careful checking of the server\u2019s certificate chain. \nThus, an app or library that validates SSL/TLS certificates should do the following checks to ensure strong.",
    "reference": "https://developer.apple.com/documentation/security/security_transforms?language=objc",
    "remediation": "Prefer using SecKey API instead.",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1050001,
            "name": "Objective-C",
            "href": "technologies/1050001.json"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-327",
            "name": "Broken or Risky Cryptographic Algorithm Usage",
            "reference": null,
            "description": null
        }
    ]
}
