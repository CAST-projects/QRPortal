{
    "id": 8072,
    "type": "quality-rule",
    "name": "Never define collection of 'std::auto_ptr'",
    "href": "quality-rules/8072.json",
    "critical": true,
    "associatedValueName": "Number of violation patterns",
    "description": "This rule searches for C++ functions that define collections of 'std::auto_ptr'.",
    "output": "Associated to each C++ constructor, destructor,and method with violations, the Quality Rule provides:\n- The number of violation patterns\n- Bookmarks for violation patterns found in the source code:\n  - assignment of 'auto_ptr' variables in collection",
    "rationale": "The way the copy constructor of 'std::auto_ptr' is implemented makes it incompatible with the collections in the Standard Library.\n\nThe copy operation of an 'auto_ptr' is destructive (copying A to B changes the state of A), and does not match the requirements of the standard containers. As a result, 'std::auto_ptr' should not be used in containers/collections.",
    "remediation": "Do not use 'auto_ptr' with collections of the Standard Library. Instead, use collections of 'std::unique_ptr' if your compiler supports C++11, or of a 'shared_ptr' type, such as 'std::shared_ptr', 'std::tr1::shared_ptr' or 'boost::shared_ptr', depending on what you have available.",
    "remediationSample": "void f()\n{\n    std::vector<std::unique_ptr<Widget>> v;\n}",
    "sample": "void f()\n{\n    std::vector<std::auto_ptr<Widget>> v;\n}",
    "total": "Number of C++ constructors, destructors, and methods",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior"
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "technologies/-3.json"
        },
        {
            "id": -2,
            "name": "C",
            "href": "technologies/-2.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
