{
    "id": 1020058,
    "type": "quality-rule",
    "name": "Avoid using eval()",
    "href": "quality-rules/1020058.json",
    "critical": true,
    "description": "The eval() function is used to run text as code. In almost all cases, it should not be necessary to use it. \nBecause it allows arbitrary code to be run, it also represents a security problem. \nThe rule is compliant with MITRE CWE-95 and OWASP A3 2013, 2017 recommendations.",
    "output": "Line and column for each violation \nAssociated value => number of violations found",
    "rationale": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
    "remediation": "If possible, refactor your code so that it does not need to use eval() at all.",
    "remediationSample": "var value = object[aProperty]; // compliant",
    "sample": "var value = eval('object.' + aProperty); // non compliant",
    "total": "Number of Javascript Functions",
    "businessCriteria": [
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation"
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "technologies/1020000.json"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-78",
            "name": "OS Command Injection Improper Input Neutralization",
            "reference": null,
            "description": null
        }
    ]
}
