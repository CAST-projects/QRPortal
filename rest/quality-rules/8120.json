{
    "id": 8120,
    "type": "quality-rule",
    "name": "Avoid using CALL FUNCTION without error handling",
    "href": "quality-rules/8120.json",
    "critical": false,
    "maxWeight": 8,
    "associatedValueName": "Number of violation patterns",
    "description": "This rule searches for ABAP artifacts that contain calls to function modules without error handling. \nIf the function module manages exceptions, then these should be referenced in the CALL FUNCTION and SY-SUBRC variable should be tested after.\nThe rule takes in account the following cases:\n- Use of a temporary variable\n\nCALL FUNCTION zzz.\n\nTmp = SY-SUBRC.\n\nIF Tmp NE 0.\n    list of statements\nEND-IF.\n\n- Use of WRITE statement before return code checking\n\nCALL FUNCTION zzz.\n\nWRITE: / Do some testing.\n\nIF SY-SUBRC NE 0.\n    list of statements\nEND-IF.\n",
    "output": "Associated to each ABAP artifact in violation, the Quality Rule provides: \n- The number of calls to function modules without error handling\n- Bookmarks for violation patterns found in source code: \n  - CALL FUNCTION without error handling",
    "rationale": "Function modules can generate exceptions to manage abnormal situations. It is strongly recommended to reference these exceptions when calling function modules and to test the SY-SUBRC system symbol to address these situations. If the caller does not handle an exception triggered by a function module, then the current program terminates.",
    "reference": "SAP",
    "remediation": "Add references to exceptions in CALL FUNCTION statements if the called function module implements some. \nInsert a test of the SY-SUBRC system symbol after each CALL FUNCTION statement that references exceptions.",
    "remediationSample": "FORM MY-FORM.\n* Function module FOO manages exceptions\n  call function 'FOO'\n    exporting\n      string = 'abc'.\n\n* Exceptions not managed after the call.\n  call function 'FOO'\n    exporting string = 'abc'\n    exceptions\n      string_too_small = 1\n      string_too_long = 2\n      others = 3.\nENDFORM.",
    "sample": "FORM MY-FORM.\n* Function module FOO manages exceptions\n  call function 'FOO'\n    exporting\n      string = 'abc'.\n\n* Exceptions not managed after the call.\n  call function 'FOO'\n    exporting string = 'abc'\n    exceptions\n      string_too_small = 1\n      string_too_long = 2\n      others = 3.\nENDFORM.",
    "total": "Number of ABAP Artifacts",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": -15,
            "name": "ABAP",
            "href": "technologies/-15.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
