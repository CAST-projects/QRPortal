{
    "id": 1020052,
    "type": "quality-rule",
    "name": "Avoid using import with external URI",
    "href": "quality-rules/1020052.json",
    "critical": true,
    "description": "JavaScript could be executed via cross-origin HTML imports. Make sure that HTML imports are limited to the same origin. Avoid permitting users to have <link> tags in user-generated rich-text as they can now directly execute JavaScript without any user interaction. This rule is compliant with CISQ OMG ASCSM-CWE-079 recommendation and OWASP 2013 A3 recommendation.",
    "output": "Line and column for each violation \nAssociated value => number of violations found",
    "rationale": "Ensure you do not import content from an untrusted source.",
    "reference": "https://html5sec.org/#136",
    "sample": "<form action=\"\" method=\"post\"> \n   <input name=\"username\" value=\"admin\" /> \n   <input name=\"password\" type=\"password\" value=\"secret\" /> \n   <input name=\"injected\" value=\"injected\" dirname=\"password\" /> \n   <input type=\"submit\">\n</form>",
    "total": "Number of HTML Contents",
    "businessCriteria": [
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation"
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "technologies/1020000.json"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "reference": "https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application takes untrusted data and sends it to a web browser without proper validation or escaping. XSS allows attackers to execute scripts in the victims' browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        },
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-79",
            "name": "Cross-site Scripting Improper Input Neutralization",
            "reference": null,
            "description": null
        }
    ]
}
