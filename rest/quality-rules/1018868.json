{
    "id": 1018868,
    "type": "quality-rule",
    "name": "Avoid Activities using \"UNION\" instead of \"Union all\" (TIBCO BW)",
    "href": "quality-rules/1018868.json",
    "critical": false,
    "maxWeight": 6,
    "description": "This metric retrieves the artifacts containing queries using \"Union\" instead of \"Union all\" statement",
    "output": "This metric retrieves the artifacts containing queries using \"Union\" instead of \"Union all\" statement",
    "rationale": "In SQL the UNION operator combines the results of two SQL queries into a single table of all matching rows. The two queries must have matching fields and data types in order to join them. Any duplicate records are automatically removed unless UNION ALL is used. The problem is that MOST of the time it is unnecessary to remove duplicate as there are none and doing the search for duplicate rows can be very costly.",
    "remediation": "Add the ALL after the union keyword (ensure that this does not change the returned data)",
    "total": "Number Process Activities",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness"
        }
    ],
    "technologies": [
        {
            "id": 1018000,
            "name": "TIBCO",
            "href": "technologies/1018000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
