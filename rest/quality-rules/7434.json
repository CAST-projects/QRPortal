{
    "id": 7434,
    "type": "quality-rule",
    "name": "Avoid classes overriding only equals() or only hashCode()",
    "href": "quality-rules/7434.json",
    "critical": true,
    "associatedValueName": "Associated Value",
    "description": "Report all classes that override only boolean equals(Object) or only int hashCode()",
    "output": "This report lists all classes that implement only equals() or only hashCode()\nIt provides the following information:\n  Class full name",
    "rationale": "Often classes are used in HashMap to provide an efficient storage and retrieval. The Java platform architects anticipated the importance of hash-based collection classes -- such as Hashtable, HashMap, and HashSet -- in typical Java applications, and comparing against many objects with equals() can be computationally expensive.\nIf your java class is used or can be used in a hash-based collection, override both of these methods to avoid any issues that can be painful to find when the issue appear in production because the error is not in the code that is present, but in the code that is absent.",
    "reference": "http://www-128.ibm.com/developerworks/java/library/j-jtp05273.html",
    "remediation": "Override both methods.",
    "remediationSample": "class Example {\n   int id;\n\n   public int getId() {\n      return id;\n   }\n    public boolean equals(Object obj) { \n         return (obj instanceof Example \n            && id == ((Example) obj).getId()); \n   }\n   public int hashCode() {  // FIXED\n       return id/10;\n   }\n}",
    "sample": "class Example {\n   int id;\n\n   public int getId() {\n      return id;\n   }\n    public boolean equals(Object obj) { \n         return (obj instanceof Example \n            && id == ((Example) obj).getId()); \n   }\n       // VIOLATION: missing hashCode()\n}",
    "total": "all classes that override equals() or (not exclusive) hashCode()",
    "businessCriteria": [
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "technologies/140029.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
