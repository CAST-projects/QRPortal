{
    "id": 1021046,
    "type": "quality-rule",
    "name": "Avoid Not ... Is",
    "href": "quality-rules/1021046.json",
    "critical": false,
    "maxWeight": 6,
    "associatedValueName": "Single Value",
    "description": "This rule will raise a violation in Python artifacts containing expressions using the \"not ... is\" syntax.",
    "output": "Line and column for each violation.\nAssociated value => number of violations found",
    "rationale": "Since Python version 2.3 the \"is not\" keyword pair is an operator in its own right. The expression \"x is not y\" is equivalent to \"not (x is y)\" and because of operator precedence rules it can be also expressed without parenthesis as \"not x is y\". The latter form can be a source of unexpected logical behavior as it appears reversed with respect to the natural English construction \"is not\". Thus it is recommended to use the \"x is not y\" form.",
    "remediation": "Highlight operator precedence by adding parenthesis or even better rewrite the identity comparison with the \"is not\" operator.",
    "remediationSample": ">>> if not (x is y):\n>>>     ...\n>>>\n>>> # Or preferably\n>>>\n>>> if x is not y:\n>>>     ...",
    "sample": ">>> if not x is y:\n>>>     ... ",
    "total": "Python artifacts",
    "businessCriteria": [
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness"
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "technologies/1021000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
