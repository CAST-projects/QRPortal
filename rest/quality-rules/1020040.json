{
    "id": 1020040,
    "type": "quality-rule",
    "name": "Avoid using delete with no object properties",
    "href": "quality-rules/1020040.json",
    "critical": false,
    "maxWeight": 5,
    "description": "Because the semantics of the delete operator are a bit tricky, and it can only be reliably used to remove properties from objects. Pass anything else to it, and you may or may not get the desired result.",
    "output": "Line and column for each violation \nAssociated value => number of violations found",
    "rationale": "ASCMM-MNT-20",
    "reference": "http://eslint.org/docs/rules/no-delete-var",
    "remediationSample": "var obj = { \n  x:1, \n  foo: function(){ \n  ... \n  } \n}; \ndelete obj.x; \ndelete obj.foo;",
    "sample": "var x = 1; \ndelete x; // Noncompliant \n\nfunction foo(){ \n.. \n} \n\ndelete foo; // Noncompliant\n",
    "total": "Number of HTML Contents",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior"
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "technologies/1020000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
