{
    "id": 1021014,
    "type": "quality-rule",
    "name": "Avoid using yield and return with value inside a function",
    "href": "quality-rules/1021014.json",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Single Value",
    "description": "Functions that are using yield and return with value (different from None) are very sensitive to the Python version. To avoid any technical complexity, we strongly suggest you to do not use these annotations together within functions in your code.",
    "output": "Line and column for each violation\nAssociated value => number of violations found",
    "rationale": "Mixing return with value and yield in the same function could lead to technical complexity. Based on the version used to run the Python script (2.x, 3.3, 3.4 for example), the results will not be the same.",
    "remediation": "Try to avoid return with value statements within functions containing yield.",
    "sample": ">>> def generator1(n):\n>>>     for i in range(n):\n>>>         yield i\n>>>     return 0\n",
    "total": "Python artifacts using yield",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61026,
            "name": "Complexity - Technical Complexity"
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "technologies/1021000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
