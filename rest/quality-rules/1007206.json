{
    "id": 1007206,
    "type": "quality-rule",
    "name": "Avoid using @error suppression (PHP)",
    "href": "quality-rules/1007206.json",
    "critical": false,
    "maxWeight": 5,
    "description": "This rule searches for all artifacts having @ in order to hide the errors. Artifacts considered for this QR are PHP Secion, method, constructor and functions.",
    "output": "This report lists all the artifacts having @ in order to hide the errors.\n      \nThis QR provides the following information:\nArtifact full name.",
    "rationale": "Use of @ decreases the performance of application. Instead of trying to hide the errors it is much better to handle them.",
    "remediation": "Try to reduce use of @ and instead provide a mechanism for error handling.",
    "remediationSample": "<?php\n      \nfunction getFiles($dir) {\n   if (file_exists($dir)) {\n      return scandir($dir);\n   } else {\n      return null;\n   }\n}\n \n$files = getFiles(\"C:\\\\non-existant\");\n \nif (null === $files) {\n   echo \"Could not get files!\", PHP_EOL;\n}\n\n?>",
    "sample": "<?php\n\nfunction getFiles($dir) {\n   return @scandir($dir);\n   } \n$files = getFiles(\"C:\\\\non-existant\");\n\n?>",
    "total": "Number of Artifacts",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "business-criteria/60014.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "technologies/1017000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
