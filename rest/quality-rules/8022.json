{
    "id": 8022,
    "type": "quality-rule",
    "name": "Avoid hiding attributes",
    "href": "quality-rules/8022.json",
    "critical": false,
    "maxWeight": 6,
    "associatedValueName": "Hidden attribute name",
    "description": "This rule searches for classes that override data members in the inheritance tree. \n\nA data member <member> of class <BaseClass> is overridden in a derived class <DerivedClass> if <DerivedClass> contains an identical declaration of <member> (i.e. same name (type can be different)). \n\nA list of data member name exceptions can be provided to manage specific cases where the field is generated or required to be used by a specific framework.",
    "output": "Associated to each overridden data member with violations, the Quality Rule provides:\n- Hidden attribute full name",
    "rationale": "Hiding data members is not good Object-Oriented practice. It is a redefinition of an instance or class variable and it makes the relationship between the base class and the derived class unclear. It is also likely to be an unintended mistake.",
    "remediation": "The solution depends on the design: \n- use the inherited member and remove the member declaration in the child class \n- rename the member of the child class",
    "sample": "Java Sample:\npublic class SampleBase {\n     protected long a = 4;\n }\n \n public class Sample extends SampleBase {\n    protected int a = 5;  // VIOLATION\n }\n\nC++ Sample:\nclass BaseClass \n{\nprotected: \n    long a;\n};\n \nclass DerivedClass : BaseClass \n{\nprotected: \n    int a;  // VIOLATION\n };",
    "total": "Number of class data members",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61003,
            "name": "Programming Practices - OO Inheritance and Polymorphism"
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "technologies/-3.json"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "technologies/140029.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
