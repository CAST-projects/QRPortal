{
    "id": 8032,
    "type": "quality-rule",
    "name": "Avoid using a break statement in 'for' loops",
    "href": "quality-rules/8032.json",
    "critical": false,
    "maxWeight": 6,
    "associatedValueName": "Number of violation patterns",
    "description": "This rule searches for functions that contain a 'break' statement in a 'for' loop. 'break' statements located in nested loops will also be reported as a violation to this rule.\n\nNote: For C#, foreach statements are not considered because there is no stop condition in the loop definition. Break statements located in nested loops will also be reported as a violation to this rule.\nNote that in VB .NET, the break statement is \"Exit For\"",
    "output": "Associated to each Function with violations, the Quality Rule provides:\n- Number of violation patterns\n- Bookmarks for violation patterns found in the source code:\n  - 'break' statement",
    "rationale": "A 'for' loop must be straightforward to read. Using too many 'break' statements in 'for' loops makes them more difficult to read.",
    "remediation": "Try to remove the 'break' statements from the loop and to manage the end-of-loop within the loop condition part.",
    "sample": "for (int i = 0; i < 10; i++) \n{        \n    if (true) \n    {\n        break;   // Violation\n    }\n    // ...\n}",
    "total": "Number of functions that contain at least one 'for' loop",
    "businessCriteria": [
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness"
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "technologies/-3.json"
        },
        {
            "id": -2,
            "name": "C",
            "href": "technologies/-2.json"
        },
        {
            "id": 138383,
            "name": "C#",
            "href": "technologies/138383.json"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "technologies/138385.json"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "technologies/140029.json"
        },
        {
            "id": 141901,
            "name": ".NET (Legacy Analyzer)",
            "href": "technologies/141901.json"
        },
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "technologies/1020000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
