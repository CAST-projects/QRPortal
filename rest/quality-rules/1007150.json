{
    "id": 1007150,
    "type": "quality-rule",
    "name": "Avoid artifacts with optional parameters before required parameters (PHP)",
    "href": "quality-rules/1007150.json",
    "critical": true,
    "description": "This rule searches for all the Artifacts with optional parameters before required ones. Artifacts are being checked including methods, functions and constructor.",
    "output": "This report lists all artifact with optional parameters listed before required ones.\n\nThis QR provides the following information:\nArtifact full name.",
    "rationale": "Using optional parameters is a common practice in PHP. When using optional parameters, it is very important to assign a value to the optional parameters and to ensure that the optional parameters always follow required parameters. This will prevent application from giving unpredictable results.",
    "reference": "Code Sniffer - http://pear.php.net/package/PHP_CodeSniffer/docs/1.5.2/PHP_CodeSniffer/PEAR_Sniffs_Functions_ValidDefaultValueSniff.html",
    "remediation": "Modify the source code and try to reduce number of artifacts with optional parameters before required ones.",
    "remediationSample": "<?php\nfunction optionalBeforeRequired ($optionalParameter = \"\", $requiredParameter = \"\")\n{\n    echo \"optionalBeforeRequired: violation removed\", PHP_EOL;\n}\n?>\nOR \n<?php\nfunction optionalBeforeRequired ($requiredParameter, $optionalParameter = \"\")\n{\n    echo \"optionalBeforeRequired: violation removed\", PHP_EOL;\n}\n?>",
    "sample": "<?php\nfunction optionalBeforeRequired ($optionalParameter = \"\", $requiredParameter)\n{\n    echo \"optionalBeforeRequired\", PHP_EOL;\n}\n?>",
    "total": "Number of Artifacts",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness"
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "technologies/1017000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
