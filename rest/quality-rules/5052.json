{
    "id": 5052,
    "type": "quality-rule",
    "name": "Avoid using IGNORE CONDITION",
    "href": "quality-rules/5052.json",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Number of IGNORE CONDITION",
    "description": "This rule searches for Cobol programs containing the CICS \"IGNORE CONDITION\" command.",
    "output": "Associated to each COBOL Program with violations, the Quality Rule provides:\n- The number of IGNORE CONDITION\n- Bookmarks for violation patterns found in the source code:\n  - EXEC CICS IGNORE CONDITION command",
    "rationale": "Error handling code is difficult to maintain and to test. Faulty logic can be insidious. For maintainability reasons, it is better to avoid using the IGNORE CONDITION statement. In addition, the IGNORE CONDITION option is less efficient because CICS will still search its branch table to see if any handle conditions are active. When you use NOHANDLE or RESP this table search is bypassed and control is returned to the calling task.",
    "reference": "Control Flow Normalization for COBOL/CICS Legacy Systems, University of Amsterdam, Programming Research Group",
    "remediation": "A solution to avoid the use of HANDLE commands is to make use of the return codes that are used by CICS to deal with exception handling.\n\nThe return code tells the user program what event has been invoked and allows it to make a decision as to what to do next. This is much more in time with structured programming because it allows the user program to invoke subroutines rather than jumping into specified labels with no automatic return.",
    "remediationSample": "EXEC CICS \n     RECEIVE MAP('UA9MAP1') MAPSET('UA9MAP1')\n  END-EXEC.\n\n  EVALUATE EIBRESP\n    WHEN DFHRESP(MAPFAIL)\n* DO NOTHING\n  END-EVALUATE.\n\nPAR-3.\n  MOVE Z TO T.",
    "sample": "EXEC CICS \n     IGNORE CONDITION\n     MAPFAIL\nEND-EXEC.\nEXEC CICS \n     RECEIVE MAP('UA9MAP1') MAPSET('UA9MAP1')\nEND-EXEC.",
    "total": "Number of Cobol Programs",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": -4,
            "name": "Cobol",
            "href": "technologies/-4.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
