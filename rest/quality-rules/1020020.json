{
    "id": 1020020,
    "type": "quality-rule",
    "name": "Avoid JavaScript to block page loading",
    "href": "quality-rules/1020020.json",
    "critical": false,
    "maxWeight": 5,
    "description": "Reports any code which contains the instruction <script src=\"http://*.js\"> in the html body block. This rule is compliant with CISQ OMG ASCPEM-PRF-04 recommendation.",
    "output": "Line and column for each violation \nAssociated value => number of violations found",
    "rationale": "When you include javascript under this form <script src=\"http://*.js\">, you create a Single Point of Failure. Loading the script in this way is blocking all other download in the page and any element below the script are blocked from rendering. \nIt is better to load the script asynchronously.",
    "reference": "[1] http://www.infoq.com/presentations/JavaScript-Performance-Patterns \n[2] http://www.stevesouders.com/blog/2008/12/27/coupling-async-scripts/",
    "remediation": "There are different methods that can be used: \n- <script defer> or <script async> \n- Asynchronous Script Loading: \nvar script = document.createElement('script'); \nscript.src = \"sorttable-async.js\"; \nscript.text = \"sorttable.init()\"; // this is explained in the next section \ndocument.getElementsByTagName('head')[0].appendChild(script); \n- Lazy Loading: \nwindow.onload = function() { \n    var script = document.createElement('script'); \n    script.src = \"sorttable-async.js\"; \n    script.text = \"sorttable.init()\"; \n    document.getElementsByTagName('head')[0].appendChild(script); \n}",
    "total": "Number of HTML Contents",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "business-criteria/60014.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61018,
            "name": "Efficiency - Memory, Network and Disk Space Management"
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "technologies/1020000.json"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCPEM-PRF-4",
            "name": "Data Resource Read and Write Access Excessive Complexity",
            "reference": null,
            "description": null
        }
    ]
}
