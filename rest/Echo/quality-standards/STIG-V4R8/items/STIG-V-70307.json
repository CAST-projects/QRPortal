{
    "id": "STIG-V-70307",
    "name": "Execution flow diagrams and design documents must be created to show how deadlock and recursion issues in web services are being mitigated.",
    "href": "Echo/quality-standards/STIG-V4R8/items/STIG-V-70307",
    "url": null,
    "description": "In order to understand data flows within web services, the process flow of data must be developed and documented.\n\nThere are several different ways that web service deadlock occurs, many times it is due to when a client invokes a synchronous method on a web service, the client will block waiting for the method to complete. If attempts to call the client (invoke a callback) while the client is waiting for the original method to complete, then each party will deadlock waiting for the other.\n\nThis is referred to as deadlock. The same situation could occur if a callback handler attempted to call a synchronous method on its caller.\n\nApplications that utilize web services must account for and document how they deal with a deadlock issue. This can be accomplished by documenting data flow and specifically accounting for the risk in the design of the application.",
    "isoPatterns": null,
    "count": 0,
    "qualityRules": null
}
