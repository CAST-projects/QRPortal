[
    {
        "id": 592,
        "name": "Ensure you provide a user-defined copy constructor or disable copy when a class allocates memory in its constructor",
        "href": "AIP/quality-rules/592",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 678,
        "name": "Never throw an exception from a Destructor",
        "href": "AIP/quality-rules/678",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1072,
        "name": "Avoid using memory management Functions (free/malloc/realloc)",
        "href": "AIP/quality-rules/1072",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1074,
        "name": "Avoid using signals management Functions",
        "href": "AIP/quality-rules/1074",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 2232,
        "name": "Prefer using shared error-page elements via web.xml to better control error handling",
        "href": "AIP/quality-rules/2232",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4600,
        "name": "Ensure you don't use 'java.System.exit()' to know what happened when you exit your program",
        "href": "AIP/quality-rules/4600",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4604,
        "name": "Prefer using the exception error handling model instead of 'java.lang.Error'",
        "href": "AIP/quality-rules/4604",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4612,
        "name": "Ensure you don't use JNI for security reason",
        "href": "AIP/quality-rules/4612",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4618,
        "name": "Ensure that the boolean are not instantiated",
        "href": "AIP/quality-rules/4618",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4652,
        "name": "Ensure that classes are not inheriting from java.lang.Throwable.",
        "href": "AIP/quality-rules/4652",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4656,
        "name": "Ensure to throw an exception which has been declared",
        "href": "AIP/quality-rules/4656",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4694,
        "name": "Ensure  let the system decide when it needs to collect the heap, and whether or not to do a full collection",
        "href": "AIP/quality-rules/4694",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4696,
        "name": "Prefer using logging framework  as SLF4j instead of  'System.err' or 'System.out'",
        "href": "AIP/quality-rules/4696",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4698,
        "name": "Ensure to have other ways of listing errors outside a try/catch  than 'System.err' and 'System.out'",
        "href": "AIP/quality-rules/4698",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4702,
        "name": "Ensure to not use default stream(System.Err) for printStackTrace to print throwable and its stack trace in order to protect sensitive information.",
        "href": "AIP/quality-rules/4702",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4704,
        "name": "Prefer using List and Map implementations instead of using Vector.",
        "href": "AIP/quality-rules/4704",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4706,
        "name": "Prefer using HashMap instead of HashTable",
        "href": "AIP/quality-rules/4706",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4744,
        "name": "Ensure that EJB Entities are accessed through their local  Interface instead of their remote interface.",
        "href": "AIP/quality-rules/4744",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 4746,
        "name": "Ensure that EJB Session are accessed through their local remote Interface instead of their remote Interface",
        "href": "AIP/quality-rules/4746",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7152,
        "name": "Ensure to store global information in HttpSession, or use stateful session beans that are specifically targeted for this purpose",
        "href": "AIP/quality-rules/7152",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7154,
        "name": "Ensure to use local variables inside your methods, and pass whatever data you need to other methods in the class via parameters",
        "href": "AIP/quality-rules/7154",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7196,
        "name": "Ensure to use StringBuffer and StringBuffer.append() method instead",
        "href": "AIP/quality-rules/7196",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7200,
        "name": "Ensure to create a StringBuilder or StringBuffer before entering the loop",
        "href": "AIP/quality-rules/7200",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7204,
        "name": "Avoid method invocation in a loop termination expression",
        "href": "AIP/quality-rules/7204",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7206,
        "name": "Ensure to have polymorphism over 'is' operator and downcasting",
        "href": "AIP/quality-rules/7206",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7210,
        "name": "Ensure to not do object initialization inside a loop since it reduces performance",
        "href": "AIP/quality-rules/7210",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7250,
        "name": "Ensure to initialize the String it with the literal.",
        "href": "AIP/quality-rules/7250",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7252,
        "name": "Ensure to add a try finally bloc",
        "href": "AIP/quality-rules/7252",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7424,
        "name": "Avoid using SQL queries inside a loop",
        "href": "AIP/quality-rules/7424",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 7442,
        "name": "Prefer not using this within Constructor in multi-thread environment to avoid unpredictable behavior",
        "href": "AIP/quality-rules/7442",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7446,
        "name": "Prefer not using Double checked locking for JSE 4.x and previous version",
        "href": "AIP/quality-rules/7446",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7488,
        "name": "Ensure to use a lazy fetching strategy when the table contains lot of rows",
        "href": "AIP/quality-rules/7488",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7502,
        "name": "Ensure to use  lists, maps, bags, idbags and sets depending on your case to map a collection instead of using array to Map Collection",
        "href": "AIP/quality-rules/7502",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7506,
        "name": "Ensure that equals() and hashCode() are defined for component as they do not have an identifier property",
        "href": "AIP/quality-rules/7506",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7562,
        "name": "Ensure that static Field of type collection are not used",
        "href": "AIP/quality-rules/7562",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7636,
        "name": "Ensure to use version attribute instead of timestamp for Hibernate Entity",
        "href": "AIP/quality-rules/7636",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7638,
        "name": "Prefer using container's resource management facilities to obtain connections to resources instead of using DriverManager class allowing direct connection to the database",
        "href": "AIP/quality-rules/7638",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7640,
        "name": "An exception should be correctly handled according to its type and not by using an assertion",
        "href": "AIP/quality-rules/7640",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7648,
        "name": "Ensure not explicitly invoking the finalize() method.",
        "href": "AIP/quality-rules/7648",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7652,
        "name": "Ensure that exceptions  throwed in a catch block  are cached",
        "href": "AIP/quality-rules/7652",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7668,
        "name": "Prefer using SAX parser for large or medium sized XML file parsing instead of DOM parser",
        "href": "AIP/quality-rules/7668",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7708,
        "name": "Ensure that session.setFlushMode(FlushMode.COMMIT, FlushMode.NEVER or FlushMode.MANUAL)  is not used",
        "href": "AIP/quality-rules/7708",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7720,
        "name": "Ensure reducing the number of EJB beans to hold performance and complexity of the application",
        "href": "AIP/quality-rules/7720",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7734,
        "name": "Ensure that debug method invocation is usually preceded by a call to its corresponding isDebugEnabled method",
        "href": "AIP/quality-rules/7734",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7782,
        "name": "Avoid empty finally blocks",
        "href": "AIP/quality-rules/7782",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7788,
        "name": "Avoid empty catch blocks",
        "href": "AIP/quality-rules/7788",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7824,
        "name": "Always Subclass Exception and throw the subclassed Classes, do not throw the exception Exception.",
        "href": "AIP/quality-rules/7824",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7862,
        "name": "Ensure you catch subclass of Exception, RuntimeException or Throwable",
        "href": "AIP/quality-rules/7862",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 7910,
        "name": "Ensure not using jump statements inside a finally block so that any RuntimeException could be propagated and not discarded",
        "href": "AIP/quality-rules/7910",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7922,
        "name": "Avoid usage of 'std::find_first_of'",
        "href": "AIP/quality-rules/7922",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7924,
        "name": "Avoid defining Functions with 'struct' or 'class' parameters passed by value",
        "href": "AIP/quality-rules/7924",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 7926,
        "name": "Abstract Classes should be non copy-assignable",
        "href": "AIP/quality-rules/7926",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7932,
        "name": "Avoid Constructors not supplying an initial value for all non-static data members",
        "href": "AIP/quality-rules/7932",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7936,
        "name": "Ensure that finalize() is not used as the time of execution is not garanteed",
        "href": "AIP/quality-rules/7936",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7940,
        "name": "Ensure defining a business method for removing the Stateful bean instance and call it from the client side",
        "href": "AIP/quality-rules/7940",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 7996,
        "name": "Provide a private default Constructor for utility Classes or use free Functions in a Namespace",
        "href": "AIP/quality-rules/7996",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 7998,
        "name": "Avoid local variables that are not initialized at declaration time",
        "href": "AIP/quality-rules/7998",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8000,
        "name": "Avoid 'catch-all' statement",
        "href": "AIP/quality-rules/8000",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8002,
        "name": "Never perform C-style cast between incompatible Class pointers",
        "href": "AIP/quality-rules/8002",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8004,
        "name": "Avoid using 'delete this'",
        "href": "AIP/quality-rules/8004",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8006,
        "name": "Avoid Classes with a copy Constructor and the default Destructor or assignment operator",
        "href": "AIP/quality-rules/8006",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8010,
        "name": "Do not overload the ampersand, comma, logical AND or logical OR operators",
        "href": "AIP/quality-rules/8010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8024,
        "name": "Avoid Classes with a non-empty Destructor and the default assignment operator or copy Constructor",
        "href": "AIP/quality-rules/8024",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8026,
        "name": "Avoid Classes with an assignment operator and the default Destructor or copy constructor",
        "href": "AIP/quality-rules/8026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 8028,
        "name": "Ensure you don't forget the default clause in your switch statement",
        "href": "AIP/quality-rules/8028",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C#",
            "C++",
            "HTML5",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8048,
        "name": "Invoke 'delete' with the same form as the matching 'new'",
        "href": "AIP/quality-rules/8048",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8052,
        "name": "Avoid setting a pointer to the address of a local variable defined in a lower scope",
        "href": "AIP/quality-rules/8052",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8054,
        "name": "Avoid calling blocking functions with an infinite timeout",
        "href": "AIP/quality-rules/8054",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8056,
        "name": "Method override fails due to mismatch of const/volatile qualifiers",
        "href": "AIP/quality-rules/8056",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8064,
        "name": "Assignment operator should assign all non-static members of the target object",
        "href": "AIP/quality-rules/8064",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8068,
        "name": "Do not return a dereferenced pointer allocated inside the function",
        "href": "AIP/quality-rules/8068",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8072,
        "name": "Never define collection of 'std::auto_ptr'",
        "href": "AIP/quality-rules/8072",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8074,
        "name": "Avoid using 'class' or 'struct' parameters with variadic Functions",
        "href": "AIP/quality-rules/8074",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 8096,
        "name": "Ensure that testing floating point numbers for equality is not used as is source of imprecision",
        "href": "AIP/quality-rules/8096",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8100,
        "name": "Ensure setting timeouts for blocking synchronous calls to prevent an infinite waiting time",
        "href": "AIP/quality-rules/8100",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8104,
        "name": "Ensure you have released your SQL connection after an effective lifetime",
        "href": "AIP/quality-rules/8104",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8108,
        "name": "Ensure you have released your stream connection after an effective lifetime",
        "href": "AIP/quality-rules/8108",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8110,
        "name": "Ensure using dedicated stored procedures when multiple data accesses are needed",
        "href": "AIP/quality-rules/8110",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8112,
        "name": "Ensure data handling operations are properly encapsulated to provide clear status of the execution",
        "href": "AIP/quality-rules/8112",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8136,
        "name": "Ensure to have CDI Beans with normal scope proxyable",
        "href": "AIP/quality-rules/8136",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8214,
        "name": "Ensure not using expired or released database resource to prevent access to sensitive data that is associated with a different user or entity.",
        "href": "AIP/quality-rules/8214",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8216,
        "name": "Ensure not using incorrect numeric type conversions to avoid data corruption",
        "href": "AIP/quality-rules/8216",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8218,
        "name": "Always check the content type when receiving a HTTP post",
        "href": "AIP/quality-rules/8218",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8220,
        "name": "Prefer not using deprecated methods, constructors, fields, type or packages",
        "href": "AIP/quality-rules/8220",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 8414,
        "name": "Ensure you use the right algorithm like AES-128",
        "href": "AIP/quality-rules/8414",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8416,
        "name": "Ensure you don't use weak cryptographic hash one-way reversible",
        "href": "AIP/quality-rules/8416",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 8424,
        "name": "Ensure not using hard-coded HMAC keys",
        "href": "AIP/quality-rules/8424",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "JEE",
            "VB.NET"
        ]
    },
    {
        "id": 1020004,
        "name": "Avoid using querySelectorAll, prefer getElementsByTagName() or getElementsByClassName() to have better performance.",
        "href": "AIP/quality-rules/1020004",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020006,
        "name": "Make sure you do not execute a function inside loop termination to avoid performance issues, use a variable to store the value of a function instead",
        "href": "AIP/quality-rules/1020006",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020008,
        "name": "Replace for-in loop with a regular for loop with index to avoid slower performance",
        "href": "AIP/quality-rules/1020008",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020010,
        "name": "Replace forEach() with a regular loop to ensure better performance",
        "href": "AIP/quality-rules/1020010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020012,
        "name": "Ensure that the web-service calls made from the client are not inside a loop so that efficiency is not impacted due to communications overhead",
        "href": "AIP/quality-rules/1020012",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020014,
        "name": "Ensure having a process queue that will manage all the requests with a limited number of concurrents when making calls to web services",
        "href": "AIP/quality-rules/1020014",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020016,
        "name": "Ensure to use intermediate variables for minimizing dot notations for references within a loop so that performance is not adversely impacted",
        "href": "AIP/quality-rules/1020016",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020020,
        "name": "Use asynchronous loading of Javascript files or code to avoid a single point of failure in page loading",
        "href": "AIP/quality-rules/1020020",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020038,
        "name": "Ensure to assign a reference variable to a function output if it has to be used inside a loop to make performance better",
        "href": "AIP/quality-rules/1020038",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020040,
        "name": "Avoid using delete with no object properties",
        "href": "AIP/quality-rules/1020040",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020054,
        "name": "To delete or remove an index element from an array use splice, pop or shift rather than delete to prevent empty indexes",
        "href": "AIP/quality-rules/1020054",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020056,
        "name": "Ensure using document.getElementById() instead of documetn.all to avoid slow loading of DOM elements",
        "href": "AIP/quality-rules/1020056",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020066,
        "name": "Ensure to not use Javascript Function constructor calling a string represented source code to prevent impaired performance",
        "href": "AIP/quality-rules/1020066",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020068,
        "name": "Ensure that you are not using a break or return statement inside a finally block, to avoid dead code",
        "href": "AIP/quality-rules/1020068",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020092,
        "name": "Move JavaScript functions from HTML file to a '.js' file",
        "href": "AIP/quality-rules/1020092",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020102,
        "name": "Always use JSON.parse &amp; JSON.stringify with try/catch block because of the synchronous call(Javascript)",
        "href": "AIP/quality-rules/1020102",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020300,
        "name": "Ensure you minize the number of web service ajax calls inside a loop",
        "href": "AIP/quality-rules/1020300",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020302,
        "name": "Ensure you don't use the element type in your selector when using class selectors in jQuery.",
        "href": "AIP/quality-rules/1020302",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020306,
        "name": "Ensure using find for Id->Child nested selectors for better performance",
        "href": "AIP/quality-rules/1020306",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020308,
        "name": "Always cache your jQuery selector, based on class, returned objects in variables for reuse.",
        "href": "AIP/quality-rules/1020308",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020310,
        "name": "Prefer using \"type=\" notation instead of \":\".",
        "href": "AIP/quality-rules/1020310",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020314,
        "name": "Ensure you don't manipulate stylesheet with css() method to avoid performance issue",
        "href": "AIP/quality-rules/1020314",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020316,
        "name": "Ensure you don't universal selectors to avoid performance issue.",
        "href": "AIP/quality-rules/1020316",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020318,
        "name": "Ensure you don't use officially jQuery deprecated methods",
        "href": "AIP/quality-rules/1020318",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020322,
        "name": "Ensure you use Ajax method with dataType with jQuery version older than 3.0.0",
        "href": "AIP/quality-rules/1020322",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020324,
        "name": "Ensure you use dialog with closeText parameter with jQuery UI version older than 1.12",
        "href": "AIP/quality-rules/1020324",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020328,
        "name": "Ensure you don't use html() with jQuery 1.9.0 (or older)",
        "href": "AIP/quality-rules/1020328",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020330,
        "name": "Ensure you don't use $(location.hash) with jQuery version older than 1.6.3",
        "href": "AIP/quality-rules/1020330",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020332,
        "name": "Ensure you don't use .append() after() with jQuery 1.4.2 (or older)",
        "href": "AIP/quality-rules/1020332",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020334,
        "name": "Ensure you don't use attr() with jQuery 3.0.0-rc1",
        "href": "AIP/quality-rules/1020334",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020336,
        "name": "Ensure you don't use Dialog widget from jQuery UI with version older than 1.10.0",
        "href": "AIP/quality-rules/1020336",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020338,
        "name": "Ensure you don't use Tooltip widget from jQuery UI with version older than 1.10.0",
        "href": "AIP/quality-rules/1020338",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020340,
        "name": "Ensure you have implemented expected $ajax callbacks",
        "href": "AIP/quality-rules/1020340",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020342,
        "name": "Ensure you have properly manage errors by using the error/fail callbacks",
        "href": "AIP/quality-rules/1020342",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020450,
        "name": "Ensure you have overwritten component methods to properly catch errors",
        "href": "AIP/quality-rules/1020450",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020452,
        "name": "Ensure you have properly use the componentDidCatch to better manage errors",
        "href": "AIP/quality-rules/1020452",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020500,
        "name": "Prefer using angular.forEach() instead of JS implementation [].forEach for an AngularJS app to enhance performace",
        "href": "AIP/quality-rules/1020500",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020504,
        "name": "Ensure that you are not making API/web service calls inside loops so that performance is not severely impacted",
        "href": "AIP/quality-rules/1020504",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020514,
        "name": "Prefer using AngularJS wrapper service angular.isDefined or angular.isUndefined to maintain structuredness of code",
        "href": "AIP/quality-rules/1020514",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020530,
        "name": "Ensure that you do not use NOT operator with a logical check to prevent unexpected results",
        "href": "AIP/quality-rules/1020530",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020534,
        "name": "Ensure that you are not using a web service inside loops so that performance is not severely impacted",
        "href": "AIP/quality-rules/1020534",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020536,
        "name": "Prefer using Angular wrapper service instead of using $ or Jquery.element to ensure structuredness",
        "href": "AIP/quality-rules/1020536",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020538,
        "name": "Ensure that you do not use a jQuery wrapper on angular.element to ensure structuredness in code",
        "href": "AIP/quality-rules/1020538",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020540,
        "name": "Prefer using $http methods 'then' and 'catch' instead of 'success' and 'error' as the latter returns original promise when you chain off of them",
        "href": "AIP/quality-rules/1020540",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020550,
        "name": "Ensure your web application interactivity by using 'track by' option in 'ng-repeat' block",
        "href": "AIP/quality-rules/1020550",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020700,
        "name": "Ensure you check the returned error in Node.js callbacks",
        "href": "AIP/quality-rules/1020700",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020702,
        "name": "You should set the process.exitCode to allow the process exiting naturally rather than calling process.exit() directly.",
        "href": "AIP/quality-rules/1020702",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020704,
        "name": "The variables \"__dirname\" and \"__filename\" should not be used in string concatenation to avoid having an invalid path",
        "href": "AIP/quality-rules/1020704",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020714,
        "name": "Ensure having only one routing handler per path to avoid an efficiency issue",
        "href": "AIP/quality-rules/1020714",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020716,
        "name": "\u201chttp.get\u201d or \u201chttp.request\u201d should not be used inside a loop to optimize the number of calls between the client application and web service server",
        "href": "AIP/quality-rules/1020716",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020732,
        "name": "Ensure not using MD5/SHA1 hashes for cryptographic functions of NodeJs to avoid sensitive data being compromised",
        "href": "AIP/quality-rules/1020732",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020748,
        "name": "Ensure you minize the number of api call especially inside a loop",
        "href": "AIP/quality-rules/1020748",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020800,
        "name": "Avoid jump statements in finally",
        "href": "AIP/quality-rules/1020800",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020802,
        "name": "Always throw all created error.",
        "href": "AIP/quality-rules/1020802",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020806,
        "name": "Preferusing  Number.isNaN() instead NaN in comparison",
        "href": "AIP/quality-rules/1020806",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020814,
        "name": "",
        "href": "AIP/quality-rules/1020814",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020816,
        "name": "Ensure that you have not using output of the function that does not return anything",
        "href": "AIP/quality-rules/1020816",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020822,
        "name": "Ensure that you provide an error callback to the HttpClient  ubscribe method.",
        "href": "AIP/quality-rules/1020822",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020828,
        "name": "Always ensure not using the concatenation of the strings in a loop as  a costly operation.",
        "href": "AIP/quality-rules/1020828",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020838,
        "name": "Ensure you have provided a debounceTime after calling an Observable with using Rx.observable.fromEvent",
        "href": "AIP/quality-rules/1020838",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020840,
        "name": "Ensure you have added \"track by\" syntax into your ngFor block",
        "href": "AIP/quality-rules/1020840",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020856,
        "name": "Ensure you have overwritten component methods to properly catch errors",
        "href": "AIP/quality-rules/1020856",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020858,
        "name": "Ensure you have properly use the componentDidCatch to better manage errors",
        "href": "AIP/quality-rules/1020858",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020872,
        "name": "Always use JSON.parse and JSON.stringify with try/catch block because of the synchronous call (Typescript)",
        "href": "AIP/quality-rules/1020872",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020874,
        "name": "Ensure you check the returned error in Node.js callbacks",
        "href": "AIP/quality-rules/1020874",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020876,
        "name": "You should set the process.exitCode to allow the process exiting naturally rather than calling process.exit() directly.",
        "href": "AIP/quality-rules/1020876",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020880,
        "name": "Ensure disabling X-Powered-By header in your express instance or use third-party helmet package to prevent specifically-targeted attacks on running applications",
        "href": "AIP/quality-rules/1020880",
        "status": null,
        "critical": true,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020892,
        "name": "Ensure you have closed  Node.js filesystem after using open or openSync.",
        "href": "AIP/quality-rules/1020892",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020894,
        "name": "The variables \"__dirname\" and \"__filename\" should not be used in string concatenation to avoid having an invalid path",
        "href": "AIP/quality-rules/1020894",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1020896,
        "name": "Ensure not using MD5/SHA1 hashes for cryptographic functions of NodeJs to avoid sensitive data being compromised",
        "href": "AIP/quality-rules/1020896",
        "status": null,
        "critical": false,
        "technologyNames": [
            "HTML5"
        ]
    },
    {
        "id": 1022002,
        "name": "Ensure to use Optimal Asymmetric Encryption Padding(OAEP) scheme with RSA encryption to avoid sensitive information exposure.",
        "href": "AIP/quality-rules/1022002",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1027012,
        "name": "Ensure to declare the object as serializable if you are using it as a httpsessionstate attribute",
        "href": "AIP/quality-rules/1027012",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C#",
            "VB.NET"
        ]
    },
    {
        "id": 1039002,
        "name": "Ensure you are not using deprecated SSL protocols to secure your connection",
        "href": "AIP/quality-rules/1039002",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039004,
        "name": "Ensure not relying on the session ID provided by \"request.getRequestedSessionId()\"",
        "href": "AIP/quality-rules/1039004",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039006,
        "name": "Ensure that you are not using predictable SecureRandom Seeds",
        "href": "AIP/quality-rules/1039006",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039008,
        "name": "Ensure to manage an exception in servlet method using a try catch block to prevent exposing system vulnerabilities",
        "href": "AIP/quality-rules/1039008",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039010,
        "name": "Ensure not using deprecated cryptographic hash otherwise it could be broken by hackers (JEE)",
        "href": "AIP/quality-rules/1039010",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039014,
        "name": "Prefer using cipher including Hash based Message Authentication Code (HMAC) to ensure data integrity",
        "href": "AIP/quality-rules/1039014",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039018,
        "name": "Ensure that Hardcoded salt is not used with cryptography function so that sensitive data is protected",
        "href": "AIP/quality-rules/1039018",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039020,
        "name": "Ensure to not use \"javax.crypto.NullCipher\" for anything other than testing",
        "href": "AIP/quality-rules/1039020",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039022,
        "name": "Prefer using long PBE Iteration Count to to decrease attack possibilities",
        "href": "AIP/quality-rules/1039022",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039024,
        "name": "Ensure using only secured cookie to avoid Cross-site scripting attacks (JEE)",
        "href": "AIP/quality-rules/1039024",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039026,
        "name": "Always enable HttpOnly when creating cookies to avoid Cross-site scripting attacks",
        "href": "AIP/quality-rules/1039026",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039030,
        "name": "Prefer not using DefaultHttpClient Constructor to ensure better transport layer security",
        "href": "AIP/quality-rules/1039030",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039052,
        "name": "Always set an expiration time for an Http Session to improve security",
        "href": "AIP/quality-rules/1039052",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039056,
        "name": "Always make sure to use a Yaml instance that is constructed either with a SafeConstructor.",
        "href": "AIP/quality-rules/1039056",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039058,
        "name": "Ensure the cookie id are always generate with a sufficient random algorithm like SecureRandom",
        "href": "AIP/quality-rules/1039058",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039062,
        "name": "Ensure the readObject() has been implemented for class instantiated by ObjectInputStream to prevent untrusted deserialization",
        "href": "AIP/quality-rules/1039062",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039068,
        "name": "Ensure to declare the object as serializable if you are using it as a httpsession attribute",
        "href": "AIP/quality-rules/1039068",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1039072,
        "name": "jYAML project is abandonned and muts not be used to deserialize YAML",
        "href": "AIP/quality-rules/1039072",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1040026,
        "name": "Ensure explicitly specifying single HTTP method in @RequestMapping methods to avoid information leakage",
        "href": "AIP/quality-rules/1040026",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1040030,
        "name": "Prefer not using Generic Authentication Exception Class to promote easy error handling",
        "href": "AIP/quality-rules/1040030",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1040032,
        "name": "Ensure not using ControllerAdvice And HandlerExceptionResolver simultaneously to avoid unexpected behavior",
        "href": "AIP/quality-rules/1040032",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042012,
        "name": "Ensure to not have Unused Validation Form in Struts 1.x to correctly maintain the validation logic",
        "href": "AIP/quality-rules/1042012",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042018,
        "name": "Ensure to have Struts action pointing to a an existent form-bean in Struts 1.x to avoid mapping error",
        "href": "AIP/quality-rules/1042018",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042028,
        "name": "configured without namespace or with wildcard namespace is vulnerable to remote code execution attack",
        "href": "AIP/quality-rules/1042028",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042030,
        "name": "Ensure not using excludeParams for Struts 2.3.20 ( and older) to avoid",
        "href": "AIP/quality-rules/1042030",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042036,
        "name": "Prefer using short request parameter name to prevent the DOS attack",
        "href": "AIP/quality-rules/1042036",
        "status": null,
        "critical": false,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042040,
        "name": "Ensure you are using Struts URLValidator with at least version 2.5.13 or 2.3.34",
        "href": "AIP/quality-rules/1042040",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042042,
        "name": "Using invoking dataHandler.createXStream method with type filtering to Remote Code Execution when deserializing XML payloads",
        "href": "AIP/quality-rules/1042042",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042046,
        "name": "Using Dynamic Method Invocation for Apache Struts 2.x allows remote attackers to execute arbitrary code via method: prefix, related to chained expressions.",
        "href": "AIP/quality-rules/1042046",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1042052,
        "name": "Ensure not using JSON-lib library for Rest Plugin of Struts 2.5 to 2.5.14",
        "href": "AIP/quality-rules/1042052",
        "status": null,
        "critical": true,
        "technologyNames": [
            "JEE"
        ]
    },
    {
        "id": 1043020,
        "name": "Ensure you have reviewed the web config file and update the value of debug property to false",
        "href": "AIP/quality-rules/1043020",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#"
        ]
    },
    {
        "id": 1043022,
        "name": "Ensure using only secured cookie to avoid Cross-site scripting attacks (C#)",
        "href": "AIP/quality-rules/1043022",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#"
        ]
    },
    {
        "id": 1043024,
        "name": "Ensure you review the configuration file and update the RequireSSL to yes",
        "href": "AIP/quality-rules/1043024",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#"
        ]
    },
    {
        "id": 1043026,
        "name": "Ensure you have set EnableViewStateMac to avoid XSS attack",
        "href": "AIP/quality-rules/1043026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP.NET"
        ]
    },
    {
        "id": 1043028,
        "name": "Ensure you don't disable EnableViewStateMac in ASPX page to avoid XSS attack",
        "href": "AIP/quality-rules/1043028",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP.NET"
        ]
    },
    {
        "id": 1043032,
        "name": "Ensure you did not keep the tracing activated in your ASPX file to not expose sensitive information for the hackers",
        "href": "AIP/quality-rules/1043032",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP.NET"
        ]
    },
    {
        "id": 1043034,
        "name": "Ensure you did not keep the tracing activated in your web config file to not expose sensitive information for the hackers",
        "href": "AIP/quality-rules/1043034",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#"
        ]
    },
    {
        "id": 1043038,
        "name": "Ensure you have reviewed the source code file and disable the tracing property",
        "href": "AIP/quality-rules/1043038",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#"
        ]
    },
    {
        "id": 1043050,
        "name": "Ensure you set the time out to less than 5 min or less.",
        "href": "AIP/quality-rules/1043050",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C#"
        ]
    },
    {
        "id": 1043054,
        "name": "Ensure you don't mention \"*\" use specific domain",
        "href": "AIP/quality-rules/1043054",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP.NET"
        ]
    },
    {
        "id": 1043058,
        "name": "Ensure you set the EnableHeaderChecking flag to true in the configuration file",
        "href": "AIP/quality-rules/1043058",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP.NET"
        ]
    },
    {
        "id": 1043060,
        "name": "Ensure you don't set the UseLegacyEncryption to True",
        "href": "AIP/quality-rules/1043060",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ASP.NET"
        ]
    },
    {
        "id": 1043062,
        "name": "Ensure to limit users access only to authorized resources (.NET)",
        "href": "AIP/quality-rules/1043062",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ASP.NET"
        ]
    },
    {
        "id": 1065004,
        "name": "Ensure that dynamically allocated memory on local pointer in functions/methods is freed.",
        "href": "AIP/quality-rules/1065004",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065006,
        "name": "Avoid iterator invalidation.",
        "href": "AIP/quality-rules/1065006",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065010,
        "name": "Ensure that you are not using <cstdio> library",
        "href": "AIP/quality-rules/1065010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065014,
        "name": "Avoid using the library functions bsearch and qsort from <stdlib.h> (C/C++)",
        "href": "AIP/quality-rules/1065014",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065016,
        "name": "Prefer using strto*() from core linrary instead of atol, atoll, atoi, atof from stdlib.h for a more robust string handling",
        "href": "AIP/quality-rules/1065016",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065018,
        "name": "Avoid using offsetof from <cstddef>",
        "href": "AIP/quality-rules/1065018",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065020,
        "name": "Ensure that you do not use implementation-dependent <ctime> library",
        "href": "AIP/quality-rules/1065020",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065022,
        "name": "Avoid using <stdio.h> (C/C++)",
        "href": "AIP/quality-rules/1065022",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065024,
        "name": "Make sure you do not use <time.h> to avoid unexpected and implementation dependent outcome",
        "href": "AIP/quality-rules/1065024",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065026,
        "name": "Ensure that a class type exception is always be caught by reference to avoid slicing",
        "href": "AIP/quality-rules/1065026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065034,
        "name": "Esnure that the exceptions are thrown by value",
        "href": "AIP/quality-rules/1065034",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065038,
        "name": "Avoid using 'signal.h' (C/C++)",
        "href": "AIP/quality-rules/1065038",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065042,
        "name": "Ensure to return a proper expression for a non-void function",
        "href": "AIP/quality-rules/1065042",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065046,
        "name": "Avoid using the unbounded functions of <cstring> library",
        "href": "AIP/quality-rules/1065046",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065050,
        "name": "Ensure to separate a side effect of an expression from the sizeof method",
        "href": "AIP/quality-rules/1065050",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065052,
        "name": "Prefer using Integers rather than Octal Constants",
        "href": "AIP/quality-rules/1065052",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065054,
        "name": null,
        "href": "AIP/quality-rules/1065054",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1065056,
        "name": "Ensure to handle exceptions inside main()",
        "href": "AIP/quality-rules/1065056",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065058,
        "name": null,
        "href": "AIP/quality-rules/1065058",
        "status": null,
        "critical": false,
        "technologyNames": [
            "C++"
        ]
    },
    {
        "id": 1065062,
        "name": null,
        "href": "AIP/quality-rules/1065062",
        "status": null,
        "critical": true,
        "technologyNames": [
            "C",
            "C++"
        ]
    },
    {
        "id": 1101000,
        "name": "Prefer using a Join with a consition when making SQL queries so that performance is not adversely impacted due to cartesian/cross join",
        "href": "AIP/quality-rules/1101000",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101002,
        "name": "Prefer using a Join with a consition when making SQL queries on XXL tables so that performance is not adversely impacted due to cartesian/cross join",
        "href": "AIP/quality-rules/1101002",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101004,
        "name": "Ensure to include index in your SQL table so that performance of your app is not adversely impacted",
        "href": "AIP/quality-rules/1101004",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101006,
        "name": "Ensure to include index in your SQL XXL tables so that performance of your app is not adversely impacted",
        "href": "AIP/quality-rules/1101006",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101008,
        "name": "Make sure you use SARGable predicate in WHERE clauses and JOINS to prevent additional costs on CPU",
        "href": "AIP/quality-rules/1101008",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101010,
        "name": "Prefer using INNER JOINS instead of NATURAL JOINS for better performance",
        "href": "AIP/quality-rules/1101010",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101012,
        "name": "While using ORDER BY in queries prefer using Column names instead of indexes for better maintainability and readability of queries in code",
        "href": "AIP/quality-rules/1101012",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101014,
        "name": "Try to separate JOIN and WHERE clauses by following ANSI-Standard joins format to improve maintainability and readabitliy",
        "href": "AIP/quality-rules/1101014",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101018,
        "name": "Prefer not using GROUP BY clauses in queries as it hampers the performance and is inefficient",
        "href": "AIP/quality-rules/1101018",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101020,
        "name": "Make sure the identifiers defined in SQL are not quoted <\"\"> as it is confusing to read and reduces maintainability of code",
        "href": "AIP/quality-rules/1101020",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101024,
        "name": "To ensure query performance make sure you do not use Dynamic SQL, specially for modules that are called too often",
        "href": "AIP/quality-rules/1101024",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101026,
        "name": "When inserting data into columns always define column names to prevent mistakes and wrong updates",
        "href": "AIP/quality-rules/1101026",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101028,
        "name": "Always use MINUS or EXCEPT operator instead of NOT EXISTS and NOT IN subqueries for better execution performance",
        "href": "AIP/quality-rules/1101028",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101030,
        "name": "Ensure that you are not making queries and Joins on too many tables or views as it hampers execution performance",
        "href": "AIP/quality-rules/1101030",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101032,
        "name": "When using EXISTS or NOT EXISTS clauses make sure that you refer to parent object and not  independent clauses to ensure better performance",
        "href": "AIP/quality-rules/1101032",
        "status": null,
        "critical": true,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101034,
        "name": "Prefer replacing DISTINCT in your queries with a WHERE, FROM clause that fetches only the required data",
        "href": "AIP/quality-rules/1101034",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101038,
        "name": "To improve the readability of your SQL statements use IN test condition instead of multiple OR conditions on same identifier",
        "href": "AIP/quality-rules/1101038",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101040,
        "name": "Ensure to handle exception in a catch block and not leave it empty",
        "href": "AIP/quality-rules/1101040",
        "status": null,
        "critical": true,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101052,
        "name": "Ensure to use WHEN OTHERS with WHEN for exception handling to prevent unexpected behavior",
        "href": "AIP/quality-rules/1101052",
        "status": null,
        "critical": true,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101054,
        "name": "Ensure to propagate errors to client instead of using with NULL when handling exceptions through WHEN OTHERS",
        "href": "AIP/quality-rules/1101054",
        "status": null,
        "critical": true,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101058,
        "name": "Prefer to use a similar syntax for JOIN in same SQL queries and not mix ANSI and non-ANSI syntax",
        "href": "AIP/quality-rules/1101058",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101060,
        "name": "When using LIKE operator make sure the first character in search string is not a wildcard character as it reduces execution performance",
        "href": "AIP/quality-rules/1101060",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101066,
        "name": "Ensure that when using triangular joins you restrict the results with some extra conditions to avoid severe performance issues",
        "href": "AIP/quality-rules/1101066",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101068,
        "name": "Make sure you don't have synonyms with both private and public definitions to avoid complexity, try renaming one of them instead",
        "href": "AIP/quality-rules/1101068",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101070,
        "name": "Always use 'IS NULL' or 'IS NOT NULL' to check for Nullability instead of using '=' or '!=' operators",
        "href": "AIP/quality-rules/1101070",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101072,
        "name": "Improve the readability and maintainability of your queries by using aliases for tables",
        "href": "AIP/quality-rules/1101072",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101074,
        "name": "Ensure your table aliases do not have numbers to improve readability",
        "href": "AIP/quality-rules/1101074",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101076,
        "name": "Ensure column references in queries are qualified to avoid any ambiguous and undefined references",
        "href": "AIP/quality-rules/1101076",
        "status": null,
        "critical": false,
        "technologyNames": [
            "ALL TECHNOLOGIES"
        ]
    },
    {
        "id": 1101078,
        "name": "Ensure that when creating synonyms you define them as PRIVATE and not PUBLIC",
        "href": "AIP/quality-rules/1101078",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101080,
        "name": "When creating synonyms ensure that you do not reference a missing object as it will create errors at execution",
        "href": "AIP/quality-rules/1101080",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101082,
        "name": "Ensure that when chaining synonyms you do not loop them leading to synonym referring to itself as it will cause a error during execution",
        "href": "AIP/quality-rules/1101082",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101084,
        "name": "Ensure using a set-oriented approach instead of using a iterative approach caused by using cursors inside loops for better performance of queries",
        "href": "AIP/quality-rules/1101084",
        "status": null,
        "critical": true,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101086,
        "name": "Ensure to use VARCHAR2 or NVARCHAR2 instead of CHAR, VARCHAR or NCHAR as the latter will be deprecated and uses more disk space",
        "href": "AIP/quality-rules/1101086",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    },
    {
        "id": 1101088,
        "name": "Ensure that you use CLOB, NCLOB or BLOB datatypes in tables instead of LONG or LONG RAW as the latter are deprecated",
        "href": "AIP/quality-rules/1101088",
        "status": null,
        "critical": false,
        "technologyNames": [
            "SQLAnalyzer"
        ]
    }
]
