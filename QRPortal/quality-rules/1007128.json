{
    "id": 1007128,
    "type": "quality-rule",
    "name": "Avoid methods having too many  parameters (PHP)",
    "href": "quality-rules/1007128.json",
    "description": "This rule searches for all the Methods with too many parameters.",
    "output": "This report lists all the Methods with too many parameters.\n\nThis QR provides the following information:\nMethod  full name.",
    "rationale": "Long parameter lists can indicate that a new object should be created to wrap the numerous parameters. In other words, always try to group the parameters together.",
    "reference": "PHPMD http://phpmd.org/rules/codesize.html#excessiveparameterlist",
    "remediation": "Modify the source code of the Method to reduce the number of parameters.",
    "sample": "class CastTest\n{\n public function addData( $param0, $param1, $param2, $param3, $param4, $param5, $param5, $param6, $param7, $param8, $param9, $param10)\n {\n }\n}",
    "total": "Number of Methods",
    "businessCriteria": [
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "technologies/1017000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
