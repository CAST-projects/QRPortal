{
    "id": 1021024,
    "type": "quality-rule",
    "name": "Avoid return statement in finally block",
    "href": "quality-rules/1021024.json",
    "associatedValueName": "Single Value",
    "description": "Reports all methods that contain an abrupt in a finally block. An abrupt completion of a statement or block occurs when it throws an exception, executes a break or continues to an enclosing statement, or executes a return from the method. This rule is compliant with CISQ OMG ASCMM-MNT-01 recommendation.",
    "output": "Line and column for each violation\nAssociated value => number of violations found",
    "rationale": "Care must be taken if completion of a try-catch block occurs as a result of executing a return. If a finally block also returns a value, then that return supersedes any previous return in the try-catch block. Also, if an exception was thrown in the try or catch blocks that was not caught, then execution of a return in the finally block prevents the exception from being thrown to the caller (because it is not possible for the caller to simultaneously evaluate the return and catch the exception). This is also valid for break or continue instructions.",
    "remediation": "Avoid using finally statement in return block. If used, it will swallow the exception raised but not handled in above try except block.",
    "remediationSample": ">>> def experiment():\n>>>     try:\n>>>         x = 2/0\n>>>     except:\n>>>         logging.debug(\"Not Possible\")\n>>>     finally:\n>>>         logging.debug(\"Division\")\n>>>         clean_up_code()    #Return should not be used inside finally\n        ",
    "sample": ">>> def experiment():\n>>>     try:\n>>>         x = 2/0\n>>>     except:\n>>>         logging.debug(\"Not possible\")\n>>>     finally:\n>>>         logging.debug(\"Division\")\n>>>         return\n",
    "total": "Python artifacts handling exceptions",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "technologies/1021000.json"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCMM-MNT-1",
            "name": "ASCMM-MNT-1: Control Flow Transfer Control Element outside Switch Block",
            "href": "quality-standards/cisq/ASCMM-MNT-1.json"
        }
    ]
}
