[
    {
        "id": 3612,
        "name": "Close SQL connection ASAP",
        "href": "quality-rules/3612.json",
        "critical": true
    },
    {
        "id": 7294,
        "name": "Avoid cyclical calls and inheritances between namespaces content",
        "href": "quality-rules/7294.json",
        "critical": true
    },
    {
        "id": 7650,
        "name": "All types of a serializable Class must be serializable (ASCRM-RLB-2)",
        "href": "quality-rules/7650.json",
        "critical": false
    },
    {
        "id": 7824,
        "name": "The exception Exception should never been thrown. Always Subclass Exception and throw the subclassed Classes.",
        "href": "quality-rules/7824.json",
        "critical": true
    },
    {
        "id": 7862,
        "name": "Avoid catching an exception of type Exception, RuntimeException, or Throwable",
        "href": "quality-rules/7862.json",
        "critical": false
    },
    {
        "id": 7934,
        "name": "Avoid Superclass (or Interface) knowing Subclass (or Interface)",
        "href": "quality-rules/7934.json",
        "critical": false
    },
    {
        "id": 8000,
        "name": "Avoid 'catch-all' statement",
        "href": "quality-rules/8000.json",
        "critical": false
    },
    {
        "id": 8100,
        "name": "Blocking synchronous calls should have associated timeouts",
        "href": "quality-rules/8100.json",
        "critical": false
    },
    {
        "id": 8102,
        "name": "Avoid hardcoded network resource names",
        "href": "quality-rules/8102.json",
        "critical": false
    },
    {
        "id": 8108,
        "name": "Close the outermost stream ASAP",
        "href": "quality-rules/8108.json",
        "critical": true
    },
    {
        "id": 8402,
        "name": "All types of a serializable class must be serializable",
        "href": "quality-rules/8402.json",
        "critical": false
    },
    {
        "id": 1020064,
        "name": "Avoid Superclass knowing Subclass in Javascript",
        "href": "quality-rules/1020064.json",
        "critical": false
    },
    {
        "id": 1020070,
        "name": "Avoid hardcoded network resource names in Javascript",
        "href": "quality-rules/1020070.json",
        "critical": false
    },
    {
        "id": 1020304,
        "name": "Implement success and error callbacks when using jquery web service call",
        "href": "quality-rules/1020304.json",
        "critical": true
    },
    {
        "id": 1020502,
        "name": "Avoid the use of JSON.parse and JSON.stringify in AngularJS web app",
        "href": "quality-rules/1020502.json",
        "critical": false
    },
    {
        "id": 1020516,
        "name": "Avoid using Javascript Array typecheck in AngularJS application",
        "href": "quality-rules/1020516.json",
        "critical": false
    },
    {
        "id": 1020518,
        "name": "Avoid using Javascript Date typecheck in AngularJS application",
        "href": "quality-rules/1020518.json",
        "critical": false
    },
    {
        "id": 1020520,
        "name": "Avoid using Javascript Function typecheck in AngularJS application",
        "href": "quality-rules/1020520.json",
        "critical": false
    },
    {
        "id": 1020522,
        "name": "Avoid using Javascript String typecheck in AngularJS application",
        "href": "quality-rules/1020522.json",
        "critical": false
    },
    {
        "id": 1020524,
        "name": "Avoid using Javascript Object typecheck in AngularJS application",
        "href": "quality-rules/1020524.json",
        "critical": false
    },
    {
        "id": 1020526,
        "name": "Avoid using Javascript Number typecheck in AngularJS application",
        "href": "quality-rules/1020526.json",
        "critical": false
    },
    {
        "id": 1020528,
        "name": "Avoid using Javascript Regexp typecheck in AngularJS application",
        "href": "quality-rules/1020528.json",
        "critical": false
    },
    {
        "id": 1020540,
        "name": "Avoid using $http success and error function",
        "href": "quality-rules/1020540.json",
        "critical": false
    },
    {
        "id": 1020700,
        "name": "Avoid the lack of error handling in the Node.js callbacks",
        "href": "quality-rules/1020700.json",
        "critical": false
    },
    {
        "id": 1020702,
        "name": "Avoid using process.exit()",
        "href": "quality-rules/1020702.json",
        "critical": false
    },
    {
        "id": 1020730,
        "name": "Ensure Node.js filesystem are closed",
        "href": "quality-rules/1020730.json",
        "critical": false
    },
    {
        "id": 1021018,
        "name": "Avoid catch-all except blocks with empty handlers",
        "href": "quality-rules/1021018.json",
        "critical": true
    },
    {
        "id": 1021026,
        "name": "Avoid leaving open file resources",
        "href": "quality-rules/1021026.json",
        "critical": true
    },
    {
        "id": 1021028,
        "name": "Avoid empty finally block",
        "href": "quality-rules/1021028.json",
        "critical": true
    },
    {
        "id": 1021030,
        "name": "Avoid hardcoded network resource names",
        "href": "quality-rules/1021030.json",
        "critical": false
    }
]
