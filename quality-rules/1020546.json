{
    "id": 1020546,
    "type": "quality-rule",
    "name": "Avoid using unsanitized AngularJS application",
    "href": "quality-rules/1020546.json",
    "description": "AngularJS includes a $sanitize service that will parse an HTML string into tokens and only allow safe and white-listed markup. The markup will no longer contain scripting expression and dangerous attributes when the string is \"disinfected\". This rule is compliant with CISQ OMG ASCSM-CWE-079 recommendation and OWASP 2013 A3 recommendation.",
    "output": "Line and column for each violation \nAssociated value => number of violations found",
    "rationale": "Ensure that users cannot add unchecked HTML string. It helps detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks.",
    "reference": "https://docs.angularjs.org/guide/security",
    "remediationSample": "var app = angular.module(\"app\", [\"ngSanitize\"]);",
    "sample": "var app = angular.module(\"app\");",
    "total": "Number of angular applications",
    "businessCriteria": [
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "technologies/1020000.json"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-79",
            "name": "Cross-site Scripting Improper Input Neutralization",
            "reference": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "reference": "https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application takes untrusted data and sends it to a web browser without proper validation or escaping. XSS allows attackers to execute scripts in the victims' browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        }
    ]
}
