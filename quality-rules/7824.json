{
    "id": 7824,
    "type": "quality-rule",
    "name": "The exception Exception should never been thrown. Always Subclass Exception and throw the subclassed Classes.",
    "href": "quality-rules/7824.json",
    "associatedValueName": "Associated Value",
    "description": "This Quality Rule reports all methods throwing  an exception of type Exception. The exception Exception should never been thrown.",
    "output": "This report lists all Artifacts throwing an exception of type Exception.\nIt provides the following information:\n- Artifact full name",
    "rationale": "Whenever a method throws an exception of type Exception, it prevents its callers from carrying out the specific recovery process that is needed and as a consequence this will threaten both application robustness and security. For example, each exception related to resource allocation whose catch does not explicitly release the resource might create a \"resource leak\". When a leak occurs on a limited set of available resources, such as a database connection, the application can then become unusable because resources cannot be allocated any more. \nThe application also becomes difficult to support and run in production as root-cause analysis is made more difficult. The support teams might not even be aware that something went wrong (by catching Exception, RuntimeException might not be visible any more).",
    "reference": "CISQ rule: ASCRM-CWE-397.",
    "remediation": "The method must throw a Subclass of the generic Exception that provides valuable information about the exception that occurred in order to help programmers calling this method to write the appropriate recovery or error management code.",
    "remediationSample": "void f()\n{\n,,,\n   throw new MyException(\"My Message\"); \n,,,\n}",
    "sample": "void f()\n{\n,,,\n   throw new Exception(\"My Message\"); // <= VIOLATION\n,,,\n}",
    "total": "This counts all Artifacts.",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "technologies/138383.json"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "technologies/138385.json"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "technologies/140029.json"
        },
        {
            "id": 141901,
            "name": ".NET (Legacy Analyzer)",
            "href": "technologies/141901.json"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCRM-CWE-397",
            "name": "ASCRM-CWE-397: Declaration of Throws for Generic Exception",
            "href": "quality-standards/cisq/ASCRM-CWE-397.json"
        },
        {
            "id": "CISQ",
            "name": "CISQ",
            "href": "quality-standards/cisq/CISQ.json"
        },
        {
            "id": "CISQ-Reliability",
            "name": "CISQ-Reliability",
            "href": "quality-standards/cisq/CISQ-Reliability.json"
        }
    ]
}
