{
    "id": 1007172,
    "type": "quality-rule",
    "name": "Avoid having constructors with a return value (PHP)",
    "href": "quality-rules/1007172.json",
    "critical": false,
    "maxWeight": 5,
    "description": "This rule searches for all the Classes containing contructors returning a value.",
    "output": "This report lists all the Classes containing contructors that return a value.\n\nThis QR provides the following information:\nClass  full name.",
    "rationale": "In PHP a constructor is the function that is called when an object is created and can be used to initialize object-variables. Using a return-value in a constructor is probably used to generate an error when something goes wrong during initialization. The  return value from an object will be ignored and the result will always be the object itself. In this situation, the returned value of the constructor is a corrupt object which will be re-used in the source code and which could produce unexpected results.",
    "remediation": "Review the source code and if the issue is related to the management of the errors you can always adopt the approach below:\nIf something goes wrong in the constructor you can either:\n    - Throw an exception (PHP5 only)\n    - Put this functionality in a separate function and call it. This function can then either return the object or an error.",
    "remediationSample": "<?php\n   class foo {\n\n      function foo(){\n\n// things that can not go wrong\n      }\n\n      function createFoo(){\n\n// is set to something else\n         //  when something goes wrong\n         $error\n= new foo();\n\n         // things that can go wrong\n\n\nreturn $error;\n      }\n   }\n\n   $foo = foo::createFoo();\n\n\n  ?>",
    "sample": "<?php\n   class foo {\n\n      function foo(){\n         $error = ''; // is set when something goes wrong\n         // things that can go wrong\n         return $error;\n      }\n   }\n\n   $foo = new foo();\n\n  ?>",
    "total": "Number of Classes",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "technologies/1017000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
