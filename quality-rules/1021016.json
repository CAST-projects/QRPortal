{
    "id": 1021016,
    "type": "quality-rule",
    "name": "Avoid using MD5 hashes to hash passwords or to encrypt data",
    "href": "quality-rules/1021016.json",
    "associatedValueName": "Single Value",
    "description": "MD5 hashes were used as salt to hash a password or a passphrase. In cryptography, a salt is random data that's used as additional input to a one-way function. Recently, several exploits were developed which proved that MD5 will generate identical outputs for the different input parameters. As a consequence, somebody can break your encryption or log on to your website. This rule is compliant with CISQ OMG ASCSM-CWE-327 recommendation.",
    "output": "Line and column for each violation\nAssociated value => number of violations found",
    "rationale": "The use of a non-standard algorithm is dangerous because a determined attacker may be able to break the algorithm and compromise whatever data has been protected. Well-known techniques may exist to break the algorithm.",
    "remediation": "Avoid using MD5 hashes as input to cryptographic functions or to store passwords. Python offers the following hashing algorithms: SHA1, SHA224, SHA256, SHA384, and SHA512. Make sure you choose the most appropriate one, depending on your use case, security requirements and runtime constraints.",
    "remediationSample": ">>> import hashlib \n>>> secure_hash = hashlib.sha512() \n>>> secure_hash.update(\"This hash is secure\") \n>>> secure_hash.digest() \n        ",
    "sample": ">>> import hashlib \n>>> md5_hash = hashlib.md5() \n>>> md5_hash.update(\"This hash can be exploited\") \n>>> md5_hash.digest() \n",
    "total": "Python artifacts using hashlib library",
    "businessCriteria": [
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "technologies/1021000.json"
        }
    ],
    "qualityStandards": [
        {
            "id": "ASCSM-CWE-327",
            "name": "ASCSM-CWE-327: Broken or Risky Cryptographic Algorithm Usage",
            "href": "quality-standards/cisq/ASCSM-CWE-327.json"
        },
        {
            "id": "CISQ",
            "name": "CISQ",
            "href": "quality-standards/cisq/CISQ.json"
        },
        {
            "id": "CISQ-Security",
            "name": "CISQ-Security",
            "href": "quality-standards/cisq/CISQ-Security.json"
        }
    ]
}
