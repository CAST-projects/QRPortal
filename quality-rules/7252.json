{
    "id": 7252,
    "type": "quality-rule",
    "name": "Call 'super.finalize ()' in the \"finally\" block of 'finalize ()' methods",
    "href": "quality-rules/7252.json",
    "associatedValueName": "Associated Value",
    "description": "List all finalize method with no try finally block or with no call to super.finalize() within the finally block.",
    "output": "This report lists all Methods  'finalize()' with no try finally block or with no call to super.finalize() within the finally block.\nIt provides the following information:\n Method full name",
    "rationale": "The finalize method is careful to call super.finalize from a finally block. All finalize methods should call super.finalize to ensure that any superclass finalize methods are invoked. Unlike superclass constructors that are invoked automatically, finalize methods must be chained manually. The super.finalize call is made from a finally block to ensure that it is called regardless of whether the call to the cleanup method generates an exception.",
    "reference": "Helping objects to a tidy end\nSteve Ball and John Miller Crawford \nhttp://www.adtmag.com/java/articleold.aspx?id=43",
    "remediation": "Add a try finally block.",
    "remediationSample": "class Test\n{\n // ...\n  protected void finalize() throws Throwable  {\n    try {\n      cleanup();\n    } finally { \n      super.finalize();  // FIXED: the finalize method will\n                               // execute the superclass finalizer \n                               // before re-throwing the IOException\n                               // object.\n    }\n  }",
    "sample": "class Test\n{\n // ...\n  protected void finalize() throws Throwable {\n    cleanup();\n    super.finalize(); // VIOLATION\n  }\n}",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "business-criteria/60014.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "technologies/140029.json"
        }
    ]
}
