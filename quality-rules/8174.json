{
    "id": 8174,
    "type": "quality-rule",
    "name": "Avoid using non thread-safe Objective-C singleton pattern",
    "href": "quality-rules/8174.json",
    "description": "Singleton objects should use a thread-safe pattern for creating their shared instance. This rule is compliant with CISQ-OMG ASCRM-RLB-12 recommendation.",
    "output": "It provides the following information:\nObject full name, number of violations",
    "rationale": "If singleton is invoked in a multi-threaded program, you could end up creating multiple instances of the class which will make the application unstable.",
    "reference": "https://developer.apple.com/library/content/documentation/General/Conceptual/DevPedia-CocoaCore/Singleton.html#//apple_ref/doc/uid/TP40008195-CH49-SW1",
    "remediation": "Make sure that [[[self class] alloc] init] is done into a dispatch thread.",
    "remediationSample": "+ (instancetype)sharedInstance {\n    static id sharedInstance = nil;\n\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        sharedInstance = [[[self class] alloc] init];\n    });\n\n    return sharedInstance;\n}",
    "sample": "+ (instancetype)sharedInstance {\n    static id sharedInstance = nil;\n\n    sharedInstance = [[[self class] alloc] init];\n\n    return sharedInstance;\n}",
    "businessCriteria": [
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        
    ]
}
