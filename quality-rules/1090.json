{
    "id": 1090,
    "type": "quality-rule",
    "name": "Avoid unreferenced Files",
    "href": "quality-rules/1090.json",
    "associatedValueName": "File name",
    "description": "This rule searches for C files that are not referenced. \n\nNote: A file is considered as unreferenced if it does not contain any called function nor the main() function.",
    "output": "Associated to each C file with violations, the Quality Rule provides:\n- File name",
    "rationale": "Unreferenced code may be the symptom of Dead Code. Dead Code must be avoided as it makes source code less readable and increases the cost of the software maintenance.\n\nWarning:\nUnreferenced code can also be the symptoms of missing code (code not included in the source code analysis) and / or can be the symptom of use of polymorphism.\nThe intensive use of polymorphism can make the application easier to change but much more difficult to test, debug and stabilize.",
    "remediation": "Check if the artifact is truly unnecessary. If not, then remove it from the project.",
    "total": "Number of C files",
    "businessCriteria": [
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": -2,
            "name": "C",
            "href": "technologies/-2.json"
        }
    ]
}
