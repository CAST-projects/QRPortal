{
    "id": 584,
    "type": "quality-rule",
    "name": "Avoid Classes with at least one virtual Function and without a virtual Destructor",
    "href": "quality-rules/584.json",
    "associatedValueName": "Associated Value",
    "description": "This rule searches for C++ classes that have a virtual method but no virtual destructor.",
    "output": "Associated to each C++ class with violations, the Quality Rule provides:\n- Bookmarks for violation patterns found in source code:\n  - Virtual method",
    "rationale": "Whenever a virtual method is defined in a class, it means that the class is intended to be used in an inheritance hierarchy. In this context, a derived object will often be handled through a pointer to its base class, to achieve polymorphism. If a class has a non-virtual destructor, and an attempt is made to destroy an object of a derived type through a pointer to the base type, the behavior is undefined.\n\nOn some platforms, it may call the base-class version of the destructor instead of the derived-class version, provoking memory leaks, resource losses and stability issues. On others, it may simply crash.\n\nFurthermore, once your class contains one virtual function, adding a virtual destructor does not add any additional per-object cost, so adding it is both free and safer.",
    "reference": "\"C++ FAQ Lite [20.7] When should my destructor be virtual?\":http://www.parashift.com/c++-faq-lite/virtual-functions.html##faq-20.7",
    "remediation": "Add a virtual destructor to the class that has a virtual function.",
    "remediationSample": "class CParent\n{\n    virtual ~CParent();\n    int virtual foo();\n};",
    "sample": "class CParent\n{\n    ~CParent();\n    virtual int foo();\n};",
    "total": "Number of C++ classes",
    "businessCriteria": [
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "technologies/-3.json"
        }
    ]
}
