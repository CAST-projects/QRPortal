{
    "id": 7346,
    "type": "quality-rule",
    "name": "Avoid redundant indexes",
    "href": "quality-rules/7346.json",
    "associatedValueName": "Associated Value",
    "description": "List all indexes that are redundant i.e. indexes on the same column(s) or included into another composite index.",
    "output": "List all tables with indexes which:\n- Columns list (ordered) are the same as another index\n- Columns list (ordered) is contained (in the same order, starting from the start) in another index",
    "rationale": "It is useless to have several indexes on the same column(s) or to have an index on columns already covered by a composite index.\nThis will not improve read performance and will decrease update/insert/delete performance because of index maintenance.",
    "remediation": "Drop the index that are not necessary.",
    "remediationSample": "-- SQL Sample\ncreate table MyTable ( C1 int identity, C2 int)\n\n-- create index MyTable_I1 on MyTable( C1)\n-- This index is useless as it is the same as MyTable_I2\n\n-- create index MyTable_I2 on MyTable( C1)\n-- This index is nearly useless as queries using C1 will be covered by the index MyTable_I3. It can then be dropped.\n\n\ncreate index MyTable_I3 on MyTable( C1, C2)",
    "sample": "-- SQL Sample\ncreate table MyTable ( C1 int identity, C2 int)\n\ncreate index MyTable_I1 on MyTable( C1)\ncreate index MyTable_I2 on MyTable( C1)\ncreate index MyTable_I3 on MyTable( C1, C2)",
    "total": "Total number of tables",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "business-criteria/60014.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": 0,
            "name": "ALL TECHNOLOGIES",
            "href": "technologies/0.json"
        }
    ]
}
