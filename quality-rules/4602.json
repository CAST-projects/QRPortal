{
    "id": 4602,
    "type": "quality-rule",
    "name": "Avoid using Fields (non static final) from other Classes",
    "href": "quality-rules/4602.json",
    "critical": true,
    "associatedValueName": "Field full name",
    "description": "To respect OO encapsulation concepts, fields should not be accessed from outside the class without going through their accessors.\nThe accessors cannot be static, if static then a violation will reported\nProtected fields are also considered by this rule for violation computation. In fact, using protected fields is allowed by the Java language but not a good practice as it introduce a hard coupling between implementation and interfaces (abstract class here).\nReference : http://wavelino.coffeecup.com/pdf/EffectiveJava.pdf see : Item 13: Minimize the accessibility of classes and members: The need for protected members should be relatively rare\n\nThe access of the outer class fields from the inner class is not considered by this rule and no violation is reported in this case.\nUsing fields from a parent Class is also excluded and not reported as violation.\n\nFor source having lambda expression. using the field of the parent class of lambda should not be reported as violation for this rule.",
    "output": "This report lists all Methods directly using Fields from other Classes.\nIt provides the following information:\n - Method full name\n - Field full name",
    "rationale": "On of the fundamental concept of this rule is encapsulation:\nHiding the internals of the object protects its integrity by preventing users from setting the internal data of the component into an invalid or inconsistent state. A benefit of encapsulation is that it can reduce system complexity, and thus increases robustness, by allowing the developer to limit the interdependencies between software components.",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "technologies/140029.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
