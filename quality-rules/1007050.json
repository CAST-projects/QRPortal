{
    "id": 1007050,
    "type": "quality-rule",
    "name": "Avoid method invocation in a loop termination expression (PHP)",
    "href": "quality-rules/1007050.json",
    "description": "This rule searches for all the Sections containing function calls in FOR loops test expressions.",
    "output": "This report lists all Sections containing function calls in FOR loop test expressions.\n\nThis QR provides the following information:\nSection full name.",
    "rationale": "When calling a function in a test expression of a FOR loop, the function will be computed for each loop iteration and will reduce performance dramatically.",
    "remediation": "Try to reduce the number of artifacts containing function calls in FOR loop test expressions.",
    "remediationSample": "<?php\nvar $MaxValue;\n\n$MaxValue = getMaxValueMethod();\n\nfor (int i=0; i <$MaxValue ; i++)  //Violation is removed. A variable is used instead of calling the method in a loop termination expression\n{\n  tab[i] = i;\n}\n?>",
    "sample": "<?php\n\n\nfor (int i=0; i <getMaxvalue(); i++) //Violation - a method is invocated in a loop termination expression\n{\n  tab[i] = i;\n}\n\n?>",
    "total": "Number of Sections",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "business-criteria/60014.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "technologies/1017000.json"
        }
    ]
}
