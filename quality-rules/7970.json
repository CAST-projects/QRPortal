{
    "id": 7970,
    "type": "quality-rule",
    "name": "Never use strcpy() function",
    "href": "quality-rules/7970.json",
    "associatedValueName": "Number of violation patterns",
    "description": "This rule searches for C/C++ functions, methods, constructors, and destructors that call the 'strcpy()' function.",
    "output": "Associated to each C/C++ function/method/constructor/destructor with violations, the Quality Rule provides:\n- Number of violation patterns\n- Bookmarks for violation patterns found in the source code:\n  - function call",
    "rationale": "The 'strcpy()' function is a major source of buffer overflows. More secure variants of the function are available and should be used. \nAnother solution is to dynamically allocate the required memory by using the 'malloc()' function. In this case, the source string must be validated.",
    "reference": "ISO/IEC. ISO/IEC 9899 Second edition 1999-12-01 Programming languages - C. International Organization for Standardization, 1999.",
    "remediation": "Prefer using the 'strncpy()' function instead.",
    "total": "Number of C/C++ functions, constructors, destructors, and methods",
    "businessCriteria": [
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "technologies/-3.json"
        },
        {
            "id": -2,
            "name": "C",
            "href": "technologies/-2.json"
        },
        {
            "id": 1050571,
            "name": "C/C++",
            "href": "technologies/1050571.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
