{
    "id": 1007168,
    "type": "quality-rule",
    "name": "Avoid having functions with no return (PHP)",
    "href": "quality-rules/1007168.json",
    "description": "This rule searches for all the functions that do not have a return and they are used in a right side of an assignation.",
    "output": "\"This report lists all the functions without a return.\n\nThis QR provides the following information:\nFunction  full name.\"",
    "rationale": "In PHP the assignment of a function that has no return will always result in the value 'null'. This means that this statement has no effect.  If the value returned by the function is re-used in the source code, this could produce a crash of part of the application or even the entire application.",
    "remediation": "Modify the source code and always check the returned value of a function before assigning it. Check that there is always an implementation for a return statement in the function.",
    "remediationSample": "\"  <?php\n\n    function foo($param1, $param2){ $ result=\n      $param1 + $param2;\n       return $result;\n    }\n\n    $result = foo(1,2);\n    //further processing\n  ?>\"",
    "sample": "\"  <?php\n\n    function foo($param1, $param2){\n      $param1 + $param2;\n    }\n\n    $result = foo(1,2);\n    //further processing\n  ?>\"",
    "total": "Number of Functions",
    "businessCriteria": [
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "technologies/1017000.json"
        }
    ]
}
