{
    "id": 1007202,
    "type": "quality-rule",
    "name": "Avoid copying needless the variables (PHP)",
    "href": "quality-rules/1007202.json",
    "description": "This rule searches all the Methods, Functions and PHP Sections copying predefined variables into other variables.",
    "output": "This report lists all the Methods, Functions and PHP Sections containing strings with double quotes and without any variable.\nThis QR provides the following information:\nMethods, Functions and PHP Sections full name.",
    "rationale": "Even if making the code \"cleaner\" by copying predefined variables to variables with shorter names before working with them seems a good idea, actually it is not such a good idea because the results in is doubled memory consumption (when the variable is altered), and therefore, slow scripts. For example, if a user had inserted 512KB worth of characters into a text area field. This implementation would result in nearly 1MB of memory being used.",
    "remediation": "Try to avoid copying predefined variables into other variables.",
    "remediationSample": "<?php\n\necho strip_tags($_POST['variable']);\n\n?>",
    "sample": "<?php\n\n$variable1 = strip_tags($_POST['variable']);\necho $variable1;\n\n?>",
    "total": "Number of Methods, Functions and PHP Sections",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "business-criteria/60014.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "technologies/1017000.json"
        }
    ]
}
