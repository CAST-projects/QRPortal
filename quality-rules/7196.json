{
    "id": 7196,
    "type": "quality-rule",
    "name": "Avoid large number of String concatenation",
    "href": "quality-rules/7196.json",
    "associatedValueName": "Number of time the '+' is called",
    "description": "All String Classes should not call more than X times the + Method. \n\n However: \n * This does not take into account literals since they are automatically optimized by the compiler. For example: String a = \"abc\"+\"abcd\" will not be counted as a concatenation. \n * Since version 1.6, the Oracle JVM also automatically optimizes this pattern in most cases. However, other JVMs might not. So this quality rule is kept in the AIP quality model, albeit with a low weight. ",
    "output": "This report lists all methods calling more than X times the '+' method on String object.\nIt provides the following information:\n - Method full name\n - the number of time the '+' is called",
    "rationale": "String concatenation resolved at runtime is much slower than using StringBuffer.",
    "reference": "http://www.precisejava.com/javaperf/j2se/StringAndStringBuffer.htm#Strings104 \nhttp://stackoverflow.com/questions/14927630/java-string-concat-vs-stringbuilder-optimised-so-what-should-i-do \nhttp://stackoverflow.com/questions/1532461/stringbuilder-vs-string-concatenation-in-tostring-in-java/1532499 \nhttp://www.oracle.com/technetwork/java/javase/6u18-142093.html ",
    "remediation": "Use StringBuffer and StringBuffer.append() method instead",
    "remediationSample": "StringBuffer result = new StringBuffer(\"hello\");\nresult.append(\" John\");\nresult.append(\" Smith\");",
    "sample": "String result = \"hello\";\nresult += \" John\";\nresult += \" Smith\"; // VIOLATION if the threshold is 3",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "business-criteria/60014.json"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "business-criteria/20140522.json"
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "technologies/140029.json"
        }
    ]
}
