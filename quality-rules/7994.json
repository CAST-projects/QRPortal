{
    "id": 7994,
    "type": "quality-rule",
    "name": "Avoid using getopt() function",
    "href": "quality-rules/7994.json",
    "associatedValueName": "Number of violation patterns",
    "description": "This rule searches for C/C++ functions, methods, constructors, and destructors that call the 'getopt()' function.",
    "output": "Associated to each C/C++ function/method/constructor/destructor with violations, the Quality Rule provides:\n- Number of violation patterns\n- Bookmarks for violation patterns found in the source code:\n  - 'getopt()' function call",
    "rationale": "Some implementations of the 'getopt()' function are vulnerable to internal buffer overflows. The bounds must be checked for each calls of the function.",
    "reference": "Build Security In (https://buildsecurityin.us-cert.gov/bsi/articles/knowledge/coding)",
    "remediation": "Consult the technical documentation related to this function. You should also check the length of buffers used as input before calling the function.",
    "remediationSample": "int main(int argc, char *argv[])\n{\n  int rc = 0;\n  int i = 0;\n  \n  if (argc > MAX_SAFE_ARGC) \n  {\n    exit(1);\n  }\n  \n  for (i = 0; argc > i; i++)\n  {\n    if (strlen(argv[i]) > MAX_SAFE_ARGLEN)\n    {\n      exit(1);\n    }\n  }\n\n  while ( (rc = getopt (argc, argv, \"cmd:\")) != -1 ) \n  {\n    /* Manage options */\n  }\n  \n  return 1;\n}",
    "sample": "int main(int argc, char *argv[])\n{\n  int rc = 0;\n  while ( (rc = getopt (argc, argv, \"cmd:\")) != -1 ) \n  {\n    /* Manage options */\n  }\n}",
    "total": "Number of C/C++ functions, constructors, destructors, and methods",
    "businessCriteria": [
        {
            "id": 60016,
            "name": "Security",
            "href": "business-criteria/60016.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": -3,
            "name": "C++",
            "href": "technologies/-3.json"
        },
        {
            "id": -2,
            "name": "C",
            "href": "technologies/-2.json"
        },
        {
            "id": 1050001,
            "name": "Objective-C",
            "href": "technologies/1050001.json"
        },
        {
            "id": 1050571,
            "name": "C/C++",
            "href": "technologies/1050571.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
