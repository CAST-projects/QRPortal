{
    "id": 1007154,
    "type": "quality-rule",
    "name": "Avoid using goto statements (PHP)",
    "href": "quality-rules/1007154.json",
    "description": "This rule searches for all the artifacts containing goto statements.",
    "output": "This report lists all the artifacts containing goto statements.\n\nThis QR provides the following information:\nArtifact full name.",
    "rationale": "Goto statements make code harder to read and it is nearly impossible to understand the control flow of an application that uses this language construct. Therefore, it should be avoided.",
    "reference": "PHPMD - http://phpmd.org/rules/design.html#gotostatement",
    "remediation": "Modify the source code and consider replacing Goto statements with regular control structures and separate methods/functions, which are easier to read.",
    "sample": "<?php\nclass CastTest {\n\n    public function bar($param) {\n        A:\n        if ($param === 10) {\n           goto C;\n        }\n\n        B:\n        if (time() % 90 === 10) {\n            goto D;\n        }\n\n        C:\n        if (time() % 10 === 90) {\n            goto B;\n        }\n\n        D: return 90;\n    }\n}\n$obj = new CastTest();\n$obj-> bar(10);\n?>",
    "total": "Number of Artifacts",
    "businessCriteria": [
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": 1017000,
            "name": "PHP",
            "href": "technologies/1017000.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
