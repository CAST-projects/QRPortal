{
    "id": 4610,
    "type": "quality-rule",
    "name": "Avoid using anonymous Classes",
    "href": "quality-rules/4610.json",
    "critical": false,
    "maxWeight": 3,
    "associatedValueName": "Associated Value",
    "description": "Reports all anonymous class except classes that implement a specific interface.  The threshold parameter permits to set the list of interfaces. This list is initialized with the interface java.util.EventListener (to exclude event listener in swing) and can be updated with other interfaces.",
    "output": "This report lists all Classes using anonymous Classes except those that are implementing a specific interface defined in the threshold parameter.\nIt provides the following information:\n Class full name",
    "rationale": "For maintenance reason, using anonymous Classes should be done only when necessary since it makes the application more difficult to understand and modify. There are some exception to this rule such as event listener in swing, the visitor pattern...",
    "total": "All classes",
    "businessCriteria": [
        {
            "id": 60011,
            "name": "Transferability",
            "href": "business-criteria/60011.json"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "business-criteria/60012.json"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "business-criteria/60013.json"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "business-criteria/66031.json"
        }
    ],
    "technologies": [
        {
            "id": 140029,
            "name": "JEE",
            "href": "technologies/140029.json"
        }
    ],
    "qualityStandards": [
        
    ]
}
